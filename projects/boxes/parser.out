Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
Rule 2     BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
Rule 3     before_vars -> <empty>
Rule 4     seen_globalvars -> <empty>
Rule 5     seen_methods -> <empty>
Rule 6     VARS -> VARI VARS
Rule 7     VARS -> VARF VARS
Rule 8     VARS -> VARST VARS
Rule 9     VARS -> VARL VARS
Rule 10    VARS -> <empty>
Rule 11    VARF -> VARFSMALL VARF3 PC
Rule 12    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 13    VARF3 -> IDV EQUALS FLOAT
Rule 14    VARF3 -> IDV COMMA VARF3
Rule 15    VARF3 -> IDV
Rule 16    VARI -> VARISMALL VARI3 PC
Rule 17    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 18    VARI3 -> IDV EQUALS INT
Rule 19    VARI3 -> IDV COMMA VARI3
Rule 20    VARI3 -> IDV
Rule 21    VARST -> VARSTSMALL VARST3 PC
Rule 22    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 23    VARST3 -> IDV EQUALS STRING
Rule 24    VARST3 -> IDV COMMA VARST3
Rule 25    VARST3 -> IDV
Rule 26    VARL -> VARLSMALL VARL3 PC
Rule 27    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 28    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 29    VARL3 -> IDV COMMA VARL3
Rule 30    VARL3 -> IDV
Rule 31    VARL4 -> CTEL
Rule 32    VARL4 -> CTEL COMMA VARL4
Rule 33    VARL4 -> <empty>
Rule 34    BLOCKS -> OC VARS BLOCKS2 CC
Rule 35    BLOCKS -> OC VARS CC
Rule 36    BLOCKS -> OC BLOCKS2 CC
Rule 37    BLOCKS -> OC CC
Rule 38    BLOCKS2 -> CODE
Rule 39    BLOCKS2 -> CODE BLOCKS2
Rule 40    CODE -> RETURN
Rule 41    CODE -> ASSIGNATION
Rule 42    CODE -> LOOP
Rule 43    CODE -> LOOPIF
Rule 44    CODE -> CONDITION
Rule 45    CODE -> ASK
Rule 46    CODE -> SAY
Rule 47    CODE -> CALLBOX
Rule 48    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
Rule 49    CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2
Rule 50    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
Rule 51    CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF
Rule 52    seen_OC_IF -> <empty>
Rule 53    seen_CC_IF -> <empty>
Rule 54    CONDITION2 -> ELSE seen_ELSE OC CONDITION3
Rule 55    CONDITION3 -> BLOCKS2 CC seen_CC_ELSE
Rule 56    CONDITION3 -> CC seen_CC_ELSE
Rule 57    seen_ELSE -> <empty>
Rule 58    seen_CC_ELSE -> <empty>
Rule 59    STM -> EXPRESSION STM2 EXPRESSION seen_STM
Rule 60    STM -> EXPRESSION
Rule 61    STM2 -> GT
Rule 62    STM2 -> GTE
Rule 63    STM2 -> LT
Rule 64    STM2 -> LTE
Rule 65    STM2 -> DOUBLEEQUALS
Rule 66    STM2 -> LTGT
Rule 67    seen_STM -> <empty>
Rule 68    PARAM -> PARAM2 IDV
Rule 69    PARAM2 -> VARISMALL
Rule 70    PARAM2 -> VARSTSMALL
Rule 71    PARAM2 -> VARFSMALL
Rule 72    PARAM2 -> VARLSMALL
Rule 73    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
Rule 74    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
Rule 75    METHOD_UPDATE -> <empty>
Rule 76    seen_IDM -> IDM
Rule 77    METHODS2 -> RECURSIVEBOX
Rule 78    METHODS2 -> VOIDBOX
Rule 79    METHODS2 -> VARIBOX
Rule 80    METHODS2 -> VARFBOX
Rule 81    METHODS2 -> VARSBOX
Rule 82    METHODS2 -> VARLBOX
Rule 83    METHODS3 -> PARAM COMMA METHODS3
Rule 84    METHODS3 -> PARAM
Rule 85    METHODS3 -> <empty>
Rule 86    RETURN -> RETURNW EXPRESSION PC
Rule 87    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 88    EXPRESSION -> OPER seen_EXPF
Rule 89    EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION
Rule 90    seen_EXPF -> <empty>
Rule 91    seen_OPER -> PLUS
Rule 92    seen_OPER -> MINUS
Rule 93    seen_OPER -> OR
Rule 94    OPER -> TERM seen_TERMF
Rule 95    OPER -> TERM seen_TERMF seen_TERM OPER
Rule 96    seen_TERMF -> <empty>
Rule 97    seen_TERM -> MULTIPLY
Rule 98    seen_TERM -> DIVISION
Rule 99    seen_TERM -> AND
Rule 100   TERM -> OP seen_OP_TERM STM CP
Rule 101   TERM -> TERM2
Rule 102   seen_OP_TERM -> <empty>
Rule 103   TERM2 -> CTE
Rule 104   TERM2 -> PLUS CTE
Rule 105   TERM2 -> MINUS CTE
Rule 106   CTE -> INT seen_INT
Rule 107   CTE -> FLOAT seen_FLOAT
Rule 108   CTE -> STRING seen_STRING
Rule 109   CTE -> seen_ID
Rule 110   seen_INT -> <empty>
Rule 111   seen_FLOAT -> <empty>
Rule 112   seen_STRING -> <empty>
Rule 113   seen_ID -> IDV
Rule 114   seen_ID -> IDV OB INT CB
Rule 115   CTEL -> INT
Rule 116   CTEL -> FLOAT
Rule 117   CTEL -> STRING
Rule 118   CTEL -> IDV
Rule 119   CTEL -> IDV OB INT CB
Rule 120   CTEL2 -> CTEL CB seen_CB
Rule 121   CTEL2 -> CTEL COMMA CTEL2
Rule 122   CTEL2 -> CB seen_CB
Rule 123   seen_OB -> <empty>
Rule 124   seen_CB -> <empty>
Rule 125   SAY -> SAYW OP CONCAT CP PC
Rule 126   CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT
Rule 127   CONCAT -> EXPRESSION seen_EXP_SAY
Rule 128   seen_EXP_SAY -> <empty>
Rule 129   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 130   CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
Rule 131   CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC
Rule 132   SEEN_IDM_CALL -> IDM
Rule 133   SEEN_CALL -> <empty>
Rule 134   PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS
Rule 135   PARAMETERS -> SEEN_EXPRESSION_PARAM
Rule 136   SEEN_EXPRESSION_PARAM -> EXPRESSION
Rule 137   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
Rule 138   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
Rule 139   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
Rule 140   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
Rule 141   seen_CP_LOOP1 -> <empty>
Rule 142   seen_CP_LOOP2 -> <empty>
Rule 143   seen_VAR_LOOP -> IDV
Rule 144   LOOP2 -> seen_INT_LOOP
Rule 145   LOOP2 -> seen_FLOAT_LOOP
Rule 146   seen_INT_LOOP -> INT
Rule 147   seen_FLOAT_LOOP -> FLOAT
Rule 148   LOOP3 -> PLUS
Rule 149   LOOP3 -> MINUS
Rule 150   LOOP3 -> <empty>
Rule 151   seen_LOOP -> <empty>
Rule 152   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
Rule 153   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
Rule 154   seen_LOOPIF -> <empty>
Rule 155   seen_CP_LOOPIF -> <empty>

Terminals, with rules where they appear

AND                  : 99
ASKUSER              : 129
BOX                  : 1 2
BY                   : 137 139
CALLBOXW             : 130 131
CB                   : 27 28 114 119 120 122
CC                   : 1 2 34 35 36 37 48 49 50 51 55 56 137 138 139 140 152 153
COMMA                : 12 14 17 19 22 24 28 29 32 83 121 129 130 134
CP                   : 1 2 48 49 50 51 73 74 100 125 129 130 131 137 138 139 140 152 153
DIVISION             : 98
DOT                  : 126
DOUBLEEQUALS         : 65
ELSE                 : 54
EQUALS               : 12 13 17 18 22 23 27 28 87
FLOAT                : 12 13 107 116 147
FROM                 : 137 138 139 140
GT                   : 61
GTE                  : 62
IDM                  : 76 132
IDV                  : 12 13 14 15 17 18 19 20 22 23 24 25 27 28 29 30 68 87 113 114 118 119 129 143
IF                   : 48 49 50 51
INT                  : 17 18 106 114 115 119 146
LOOPIFW              : 152 153
LOOPW                : 137 138 139 140
LT                   : 63
LTE                  : 64
LTGT                 : 66
MAINBOX              : 1 2
MINUS                : 92 105 149
MULTIPLY             : 97
OB                   : 27 28 114 119
OC                   : 1 2 34 35 36 37 48 49 50 51 54 137 138 139 140 152 153
OP                   : 1 2 48 49 50 51 73 74 100 125 129 130 131 137 138 139 140 152 153
OR                   : 93
PC                   : 11 16 21 26 86 87 125 129 130 131
PLUS                 : 91 104 148
RECURSIVEBOX         : 77
RETURNW              : 86
SAYW                 : 125
STRING               : 22 23 108 117 129
TO                   : 137 138 139 140
VARFBOX              : 80
VARFSMALL            : 11 71
VARIBOX              : 79
VARISMALL            : 16 69
VARLBOX              : 82
VARLSMALL            : 26 72
VARSBOX              : 81
VARSTSMALL           : 21 70
VOIDBOX              : 78
error                : 

Nonterminals, with rules where they appear

ASK                  : 45
ASSIGNATION          : 41
BLOCKS               : 1 2 73 74
BLOCKS2              : 34 36 39 48 50 55 137 138 152
BOXES                : 0
CALLBOX              : 47
CODE                 : 38 39
CONCAT               : 125 126
CONDITION            : 44
CONDITION2           : 48 49
CONDITION3           : 54
CTE                  : 103 104 105
CTEL                 : 31 32 120 121
CTEL2                : 121
EXPRESSION           : 59 59 60 86 87 89 126 127 136
LOOP                 : 42
LOOP2                : 137 137 137 138 138 139 139 139 140 140
LOOP3                : 137 139
LOOPIF               : 43
METHODS              : 1 74
METHODS2             : 73 74
METHODS3             : 73 74 83
METHOD_UPDATE        : 73 74
OPER                 : 88 89 95
PARAM                : 83 84
PARAM2               : 68
PARAMETERS           : 130 134
RETURN               : 40
SAY                  : 46
SEEN_CALL            : 130
SEEN_EXPRESSION_PARAM : 134 135
SEEN_IDM_CALL        : 130 131
STM                  : 48 49 50 51 100 152 153
STM2                 : 59
TERM                 : 94 95
TERM2                : 101
VARF                 : 7
VARF3                : 11 12 14
VARI                 : 6
VARI3                : 16 17 19
VARL                 : 9
VARL3                : 26 28 29
VARL4                : 27 28 32
VARS                 : 1 2 6 7 8 9 34 35
VARST                : 8
VARST3               : 21 22 24
before_vars          : 1 2
seen_CB              : 120 122
seen_CC_ELSE         : 55 56
seen_CC_IF           : 50 51
seen_CP_LOOP1        : 137 139
seen_CP_LOOP2        : 138 140
seen_CP_LOOPIF       : 152 153
seen_ELSE            : 54
seen_EXPF            : 88 89
seen_EXP_SAY         : 126 127
seen_FLOAT           : 107
seen_FLOAT_LOOP      : 145
seen_ID              : 109
seen_IDM             : 73 74
seen_INT             : 106
seen_INT_LOOP        : 144
seen_LOOP            : 137 138 139 140
seen_LOOPIF          : 152 153
seen_OB              : 
seen_OC_IF           : 48 49 50 51
seen_OPER            : 89
seen_OP_TERM         : 100
seen_STM             : 59
seen_STRING          : 108
seen_TERM            : 95
seen_TERMF           : 94 95
seen_VAR_LOOP        : 137 138 139 140
seen_globalvars      : 1 2
seen_methods         : 1 2

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> . BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX . OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC . before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (3) before_vars -> .

    VARISMALL       reduce using rule 3 (before_vars -> .)
    VARFSMALL       reduce using rule 3 (before_vars -> .)
    VARSTSMALL      reduce using rule 3 (before_vars -> .)
    VARLSMALL       reduce using rule 3 (before_vars -> .)
    RECURSIVEBOX    reduce using rule 3 (before_vars -> .)
    VOIDBOX         reduce using rule 3 (before_vars -> .)
    VARIBOX         reduce using rule 3 (before_vars -> .)
    VARFBOX         reduce using rule 3 (before_vars -> .)
    VARSBOX         reduce using rule 3 (before_vars -> .)
    VARLBOX         reduce using rule 3 (before_vars -> .)
    MAINBOX         reduce using rule 3 (before_vars -> .)

    before_vars                    shift and go to state 4

state 4

    (1) BOXES -> BOX OC before_vars . VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars . VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 10 (VARS -> .)
    VOIDBOX         reduce using rule 10 (VARS -> .)
    VARIBOX         reduce using rule 10 (VARS -> .)
    VARFBOX         reduce using rule 10 (VARS -> .)
    VARSBOX         reduce using rule 10 (VARS -> .)
    VARLBOX         reduce using rule 10 (VARS -> .)
    MAINBOX         reduce using rule 10 (VARS -> .)
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    VARS                           shift and go to state 5
    VARF                           shift and go to state 6
    VARST                          shift and go to state 11
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 5

    (1) BOXES -> BOX OC before_vars VARS . seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars VARS . seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (4) seen_globalvars -> .

    RECURSIVEBOX    reduce using rule 4 (seen_globalvars -> .)
    VOIDBOX         reduce using rule 4 (seen_globalvars -> .)
    VARIBOX         reduce using rule 4 (seen_globalvars -> .)
    VARFBOX         reduce using rule 4 (seen_globalvars -> .)
    VARSBOX         reduce using rule 4 (seen_globalvars -> .)
    VARLBOX         reduce using rule 4 (seen_globalvars -> .)
    MAINBOX         reduce using rule 4 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 14

state 6

    (7) VARS -> VARF . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 10 (VARS -> .)
    VOIDBOX         reduce using rule 10 (VARS -> .)
    VARIBOX         reduce using rule 10 (VARS -> .)
    VARFBOX         reduce using rule 10 (VARS -> .)
    VARSBOX         reduce using rule 10 (VARS -> .)
    VARLBOX         reduce using rule 10 (VARS -> .)
    MAINBOX         reduce using rule 10 (VARS -> .)
    CC              reduce using rule 10 (VARS -> .)
    RETURNW         reduce using rule 10 (VARS -> .)
    IDV             reduce using rule 10 (VARS -> .)
    LOOPW           reduce using rule 10 (VARS -> .)
    LOOPIFW         reduce using rule 10 (VARS -> .)
    IF              reduce using rule 10 (VARS -> .)
    ASKUSER         reduce using rule 10 (VARS -> .)
    SAYW            reduce using rule 10 (VARS -> .)
    CALLBOXW        reduce using rule 10 (VARS -> .)
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    VARS                           shift and go to state 15
    VARF                           shift and go to state 6
    VARST                          shift and go to state 11
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 7

    (9) VARS -> VARL . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 10 (VARS -> .)
    VOIDBOX         reduce using rule 10 (VARS -> .)
    VARIBOX         reduce using rule 10 (VARS -> .)
    VARFBOX         reduce using rule 10 (VARS -> .)
    VARSBOX         reduce using rule 10 (VARS -> .)
    VARLBOX         reduce using rule 10 (VARS -> .)
    MAINBOX         reduce using rule 10 (VARS -> .)
    CC              reduce using rule 10 (VARS -> .)
    RETURNW         reduce using rule 10 (VARS -> .)
    IDV             reduce using rule 10 (VARS -> .)
    LOOPW           reduce using rule 10 (VARS -> .)
    LOOPIFW         reduce using rule 10 (VARS -> .)
    IF              reduce using rule 10 (VARS -> .)
    ASKUSER         reduce using rule 10 (VARS -> .)
    SAYW            reduce using rule 10 (VARS -> .)
    CALLBOXW        reduce using rule 10 (VARS -> .)
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    VARS                           shift and go to state 16
    VARF                           shift and go to state 6
    VARST                          shift and go to state 11
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 8

    (26) VARL -> VARLSMALL . VARL3 PC
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB
    (28) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (29) VARL3 -> . IDV COMMA VARL3
    (30) VARL3 -> . IDV

    IDV             shift and go to state 18

    VARL3                          shift and go to state 17

state 9

    (6) VARS -> VARI . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 10 (VARS -> .)
    VOIDBOX         reduce using rule 10 (VARS -> .)
    VARIBOX         reduce using rule 10 (VARS -> .)
    VARFBOX         reduce using rule 10 (VARS -> .)
    VARSBOX         reduce using rule 10 (VARS -> .)
    VARLBOX         reduce using rule 10 (VARS -> .)
    MAINBOX         reduce using rule 10 (VARS -> .)
    CC              reduce using rule 10 (VARS -> .)
    RETURNW         reduce using rule 10 (VARS -> .)
    IDV             reduce using rule 10 (VARS -> .)
    LOOPW           reduce using rule 10 (VARS -> .)
    LOOPIFW         reduce using rule 10 (VARS -> .)
    IF              reduce using rule 10 (VARS -> .)
    ASKUSER         reduce using rule 10 (VARS -> .)
    SAYW            reduce using rule 10 (VARS -> .)
    CALLBOXW        reduce using rule 10 (VARS -> .)
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    VARS                           shift and go to state 19
    VARF                           shift and go to state 6
    VARST                          shift and go to state 11
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 10

    (21) VARST -> VARSTSMALL . VARST3 PC
    (22) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (23) VARST3 -> . IDV EQUALS STRING
    (24) VARST3 -> . IDV COMMA VARST3
    (25) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 20

state 11

    (8) VARS -> VARST . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 10 (VARS -> .)
    VOIDBOX         reduce using rule 10 (VARS -> .)
    VARIBOX         reduce using rule 10 (VARS -> .)
    VARFBOX         reduce using rule 10 (VARS -> .)
    VARSBOX         reduce using rule 10 (VARS -> .)
    VARLBOX         reduce using rule 10 (VARS -> .)
    MAINBOX         reduce using rule 10 (VARS -> .)
    CC              reduce using rule 10 (VARS -> .)
    RETURNW         reduce using rule 10 (VARS -> .)
    IDV             reduce using rule 10 (VARS -> .)
    LOOPW           reduce using rule 10 (VARS -> .)
    LOOPIFW         reduce using rule 10 (VARS -> .)
    IF              reduce using rule 10 (VARS -> .)
    ASKUSER         reduce using rule 10 (VARS -> .)
    SAYW            reduce using rule 10 (VARS -> .)
    CALLBOXW        reduce using rule 10 (VARS -> .)
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    VARS                           shift and go to state 22
    VARF                           shift and go to state 6
    VARST                          shift and go to state 11
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 12

    (16) VARI -> VARISMALL . VARI3 PC
    (17) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (18) VARI3 -> . IDV EQUALS INT
    (19) VARI3 -> . IDV COMMA VARI3
    (20) VARI3 -> . IDV

    IDV             shift and go to state 23

    VARI3                          shift and go to state 24

state 13

    (11) VARF -> VARFSMALL . VARF3 PC
    (12) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (13) VARF3 -> . IDV EQUALS FLOAT
    (14) VARF3 -> . IDV COMMA VARF3
    (15) VARF3 -> . IDV

    IDV             shift and go to state 25

    VARF3                          shift and go to state 26

state 14

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars . METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars VARS seen_globalvars . seen_methods MAINBOX OP CP BLOCKS CC
    (73) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (74) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (5) seen_methods -> .
    (77) METHODS2 -> . RECURSIVEBOX
    (78) METHODS2 -> . VOIDBOX
    (79) METHODS2 -> . VARIBOX
    (80) METHODS2 -> . VARFBOX
    (81) METHODS2 -> . VARSBOX
    (82) METHODS2 -> . VARLBOX

    MAINBOX         reduce using rule 5 (seen_methods -> .)
    RECURSIVEBOX    shift and go to state 29
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 33
    VARFBOX         shift and go to state 32
    VARSBOX         shift and go to state 28
    VARLBOX         shift and go to state 27

    seen_methods                   shift and go to state 31
    METHODS2                       shift and go to state 34
    METHODS                        shift and go to state 30

state 15

    (7) VARS -> VARF VARS .

    RECURSIVEBOX    reduce using rule 7 (VARS -> VARF VARS .)
    VOIDBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARIBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARFBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARSBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARLBOX         reduce using rule 7 (VARS -> VARF VARS .)
    MAINBOX         reduce using rule 7 (VARS -> VARF VARS .)
    CC              reduce using rule 7 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARF VARS .)
    IDV             reduce using rule 7 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARF VARS .)
    IF              reduce using rule 7 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARF VARS .)
    SAYW            reduce using rule 7 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARF VARS .)


state 16

    (9) VARS -> VARL VARS .

    RECURSIVEBOX    reduce using rule 9 (VARS -> VARL VARS .)
    VOIDBOX         reduce using rule 9 (VARS -> VARL VARS .)
    VARIBOX         reduce using rule 9 (VARS -> VARL VARS .)
    VARFBOX         reduce using rule 9 (VARS -> VARL VARS .)
    VARSBOX         reduce using rule 9 (VARS -> VARL VARS .)
    VARLBOX         reduce using rule 9 (VARS -> VARL VARS .)
    MAINBOX         reduce using rule 9 (VARS -> VARL VARS .)
    CC              reduce using rule 9 (VARS -> VARL VARS .)
    RETURNW         reduce using rule 9 (VARS -> VARL VARS .)
    IDV             reduce using rule 9 (VARS -> VARL VARS .)
    LOOPW           reduce using rule 9 (VARS -> VARL VARS .)
    LOOPIFW         reduce using rule 9 (VARS -> VARL VARS .)
    IF              reduce using rule 9 (VARS -> VARL VARS .)
    ASKUSER         reduce using rule 9 (VARS -> VARL VARS .)
    SAYW            reduce using rule 9 (VARS -> VARL VARS .)
    CALLBOXW        reduce using rule 9 (VARS -> VARL VARS .)


state 17

    (26) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 36


state 18

    (27) VARL3 -> IDV . EQUALS OB VARL4 CB
    (28) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (29) VARL3 -> IDV . COMMA VARL3
    (30) VARL3 -> IDV .

    EQUALS          shift and go to state 37
    COMMA           shift and go to state 38
    PC              reduce using rule 30 (VARL3 -> IDV .)


state 19

    (6) VARS -> VARI VARS .

    RECURSIVEBOX    reduce using rule 6 (VARS -> VARI VARS .)
    VOIDBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARIBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARFBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARSBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARLBOX         reduce using rule 6 (VARS -> VARI VARS .)
    MAINBOX         reduce using rule 6 (VARS -> VARI VARS .)
    CC              reduce using rule 6 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARI VARS .)
    IDV             reduce using rule 6 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARI VARS .)
    IF              reduce using rule 6 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARI VARS .)
    SAYW            reduce using rule 6 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARI VARS .)


state 20

    (21) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 39


state 21

    (22) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (23) VARST3 -> IDV . EQUALS STRING
    (24) VARST3 -> IDV . COMMA VARST3
    (25) VARST3 -> IDV .

    EQUALS          shift and go to state 41
    COMMA           shift and go to state 40
    PC              reduce using rule 25 (VARST3 -> IDV .)


state 22

    (8) VARS -> VARST VARS .

    RECURSIVEBOX    reduce using rule 8 (VARS -> VARST VARS .)
    VOIDBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARIBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARFBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARSBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARLBOX         reduce using rule 8 (VARS -> VARST VARS .)
    MAINBOX         reduce using rule 8 (VARS -> VARST VARS .)
    CC              reduce using rule 8 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 8 (VARS -> VARST VARS .)
    IDV             reduce using rule 8 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 8 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 8 (VARS -> VARST VARS .)
    IF              reduce using rule 8 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 8 (VARS -> VARST VARS .)
    SAYW            reduce using rule 8 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 8 (VARS -> VARST VARS .)


state 23

    (17) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (18) VARI3 -> IDV . EQUALS INT
    (19) VARI3 -> IDV . COMMA VARI3
    (20) VARI3 -> IDV .

    EQUALS          shift and go to state 43
    COMMA           shift and go to state 42
    PC              reduce using rule 20 (VARI3 -> IDV .)


state 24

    (16) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 44


state 25

    (12) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (13) VARF3 -> IDV . EQUALS FLOAT
    (14) VARF3 -> IDV . COMMA VARF3
    (15) VARF3 -> IDV .

    EQUALS          shift and go to state 46
    COMMA           shift and go to state 45
    PC              reduce using rule 15 (VARF3 -> IDV .)


state 26

    (11) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 47


state 27

    (82) METHODS2 -> VARLBOX .

    IDM             reduce using rule 82 (METHODS2 -> VARLBOX .)


state 28

    (81) METHODS2 -> VARSBOX .

    IDM             reduce using rule 81 (METHODS2 -> VARSBOX .)


state 29

    (77) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 77 (METHODS2 -> RECURSIVEBOX .)


state 30

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS . seen_methods MAINBOX OP CP BLOCKS CC
    (5) seen_methods -> .

    MAINBOX         reduce using rule 5 (seen_methods -> .)

    seen_methods                   shift and go to state 48

state 31

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 49


state 32

    (80) METHODS2 -> VARFBOX .

    IDM             reduce using rule 80 (METHODS2 -> VARFBOX .)


state 33

    (79) METHODS2 -> VARIBOX .

    IDM             reduce using rule 79 (METHODS2 -> VARIBOX .)


state 34

    (73) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (74) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (76) seen_IDM -> . IDM

    IDM             shift and go to state 51

    seen_IDM                       shift and go to state 50

state 35

    (78) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 78 (METHODS2 -> VOIDBOX .)


state 36

    (26) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    RECURSIVEBOX    reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VOIDBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARIBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARFBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARSBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    VARLBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    RETURNW         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 26 (VARL -> VARLSMALL VARL3 PC .)


state 37

    (27) VARL3 -> IDV EQUALS . OB VARL4 CB
    (28) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 52


state 38

    (29) VARL3 -> IDV COMMA . VARL3
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB
    (28) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (29) VARL3 -> . IDV COMMA VARL3
    (30) VARL3 -> . IDV

    IDV             shift and go to state 18

    VARL3                          shift and go to state 53

state 39

    (21) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    RECURSIVEBOX    reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VOIDBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARIBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARFBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARSBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    VARLBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 21 (VARST -> VARSTSMALL VARST3 PC .)


state 40

    (24) VARST3 -> IDV COMMA . VARST3
    (22) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (23) VARST3 -> . IDV EQUALS STRING
    (24) VARST3 -> . IDV COMMA VARST3
    (25) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 54

state 41

    (22) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (23) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 55


state 42

    (19) VARI3 -> IDV COMMA . VARI3
    (17) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (18) VARI3 -> . IDV EQUALS INT
    (19) VARI3 -> . IDV COMMA VARI3
    (20) VARI3 -> . IDV

    IDV             shift and go to state 23

    VARI3                          shift and go to state 56

state 43

    (17) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (18) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 57


state 44

    (16) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    RECURSIVEBOX    reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VOIDBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARIBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARFBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARSBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    VARLBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 16 (VARI -> VARISMALL VARI3 PC .)


state 45

    (14) VARF3 -> IDV COMMA . VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (13) VARF3 -> . IDV EQUALS FLOAT
    (14) VARF3 -> . IDV COMMA VARF3
    (15) VARF3 -> . IDV

    IDV             shift and go to state 25

    VARF3                          shift and go to state 58

state 46

    (12) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (13) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 59


state 47

    (11) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    RECURSIVEBOX    reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VOIDBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARIBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARFBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARSBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    VARLBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 11 (VARF -> VARFSMALL VARF3 PC .)


state 48

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 60


state 49

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 61


state 50

    (73) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHOD_UPDATE
    (74) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS

    OP              shift and go to state 62


state 51

    (76) seen_IDM -> IDM .

    OP              reduce using rule 76 (seen_IDM -> IDM .)


state 52

    (27) VARL3 -> IDV EQUALS OB . VARL4 CB
    (28) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (31) VARL4 -> . CTEL
    (32) VARL4 -> . CTEL COMMA VARL4
    (33) VARL4 -> .
    (115) CTEL -> . INT
    (116) CTEL -> . FLOAT
    (117) CTEL -> . STRING
    (118) CTEL -> . IDV
    (119) CTEL -> . IDV OB INT CB

    CB              reduce using rule 33 (VARL4 -> .)
    INT             shift and go to state 67
    FLOAT           shift and go to state 66
    STRING          shift and go to state 63
    IDV             shift and go to state 65

    CTEL                           shift and go to state 68
    VARL4                          shift and go to state 64

state 53

    (29) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 29 (VARL3 -> IDV COMMA VARL3 .)


state 54

    (24) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 24 (VARST3 -> IDV COMMA VARST3 .)


state 55

    (22) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (23) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 69
    PC              reduce using rule 23 (VARST3 -> IDV EQUALS STRING .)


state 56

    (19) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 19 (VARI3 -> IDV COMMA VARI3 .)


state 57

    (17) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (18) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 70
    PC              reduce using rule 18 (VARI3 -> IDV EQUALS INT .)


state 58

    (14) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 14 (VARF3 -> IDV COMMA VARF3 .)


state 59

    (12) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (13) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 71
    PC              reduce using rule 13 (VARF3 -> IDV EQUALS FLOAT .)


state 60

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 72


state 61

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 73


state 62

    (73) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHOD_UPDATE
    (74) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (83) METHODS3 -> . PARAM COMMA METHODS3
    (84) METHODS3 -> . PARAM
    (85) METHODS3 -> .
    (68) PARAM -> . PARAM2 IDV
    (69) PARAM2 -> . VARISMALL
    (70) PARAM2 -> . VARSTSMALL
    (71) PARAM2 -> . VARFSMALL
    (72) PARAM2 -> . VARLSMALL

    CP              reduce using rule 85 (METHODS3 -> .)
    VARISMALL       shift and go to state 75
    VARSTSMALL      shift and go to state 76
    VARFSMALL       shift and go to state 78
    VARLSMALL       shift and go to state 74

    PARAM                          shift and go to state 77
    PARAM2                         shift and go to state 79
    METHODS3                       shift and go to state 80

state 63

    (117) CTEL -> STRING .

    COMMA           reduce using rule 117 (CTEL -> STRING .)
    CB              reduce using rule 117 (CTEL -> STRING .)


state 64

    (27) VARL3 -> IDV EQUALS OB VARL4 . CB
    (28) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 81


state 65

    (118) CTEL -> IDV .
    (119) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 118 (CTEL -> IDV .)
    CB              reduce using rule 118 (CTEL -> IDV .)
    OB              shift and go to state 82


state 66

    (116) CTEL -> FLOAT .

    COMMA           reduce using rule 116 (CTEL -> FLOAT .)
    CB              reduce using rule 116 (CTEL -> FLOAT .)


state 67

    (115) CTEL -> INT .

    COMMA           reduce using rule 115 (CTEL -> INT .)
    CB              reduce using rule 115 (CTEL -> INT .)


state 68

    (31) VARL4 -> CTEL .
    (32) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 31 (VARL4 -> CTEL .)
    COMMA           shift and go to state 83


state 69

    (22) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (22) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (23) VARST3 -> . IDV EQUALS STRING
    (24) VARST3 -> . IDV COMMA VARST3
    (25) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 84

state 70

    (17) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (17) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (18) VARI3 -> . IDV EQUALS INT
    (19) VARI3 -> . IDV COMMA VARI3
    (20) VARI3 -> . IDV

    IDV             shift and go to state 23

    VARI3                          shift and go to state 85

state 71

    (12) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (13) VARF3 -> . IDV EQUALS FLOAT
    (14) VARF3 -> . IDV COMMA VARF3
    (15) VARF3 -> . IDV

    IDV             shift and go to state 25

    VARF3                          shift and go to state 86

state 72

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 87


state 73

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP . BLOCKS CC
    (34) BLOCKS -> . OC VARS BLOCKS2 CC
    (35) BLOCKS -> . OC VARS CC
    (36) BLOCKS -> . OC BLOCKS2 CC
    (37) BLOCKS -> . OC CC

    OC              shift and go to state 89

    BLOCKS                         shift and go to state 88

state 74

    (72) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 72 (PARAM2 -> VARLSMALL .)


state 75

    (69) PARAM2 -> VARISMALL .

    IDV             reduce using rule 69 (PARAM2 -> VARISMALL .)


state 76

    (70) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 70 (PARAM2 -> VARSTSMALL .)


state 77

    (83) METHODS3 -> PARAM . COMMA METHODS3
    (84) METHODS3 -> PARAM .

    COMMA           shift and go to state 90
    CP              reduce using rule 84 (METHODS3 -> PARAM .)


state 78

    (71) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 71 (PARAM2 -> VARFSMALL .)


state 79

    (68) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 91


state 80

    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHOD_UPDATE
    (74) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHOD_UPDATE METHODS

    CP              shift and go to state 92


state 81

    (27) VARL3 -> IDV EQUALS OB VARL4 CB .
    (28) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 27 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 93


state 82

    (119) CTEL -> IDV OB . INT CB

    INT             shift and go to state 94


state 83

    (32) VARL4 -> CTEL COMMA . VARL4
    (31) VARL4 -> . CTEL
    (32) VARL4 -> . CTEL COMMA VARL4
    (33) VARL4 -> .
    (115) CTEL -> . INT
    (116) CTEL -> . FLOAT
    (117) CTEL -> . STRING
    (118) CTEL -> . IDV
    (119) CTEL -> . IDV OB INT CB

    CB              reduce using rule 33 (VARL4 -> .)
    INT             shift and go to state 67
    FLOAT           shift and go to state 66
    STRING          shift and go to state 63
    IDV             shift and go to state 65

    VARL4                          shift and go to state 95
    CTEL                           shift and go to state 68

state 84

    (22) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 22 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 85

    (17) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 17 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 86

    (12) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 12 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 87

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP . BLOCKS CC
    (34) BLOCKS -> . OC VARS BLOCKS2 CC
    (35) BLOCKS -> . OC VARS CC
    (36) BLOCKS -> . OC BLOCKS2 CC
    (37) BLOCKS -> . OC CC

    OC              shift and go to state 89

    BLOCKS                         shift and go to state 96

state 88

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 97


state 89

    (34) BLOCKS -> OC . VARS BLOCKS2 CC
    (35) BLOCKS -> OC . VARS CC
    (36) BLOCKS -> OC . BLOCKS2 CC
    (37) BLOCKS -> OC . CC
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> . VARL VARS
    (10) VARS -> .
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (16) VARI -> . VARISMALL VARI3 PC
    (11) VARF -> . VARFSMALL VARF3 PC
    (21) VARST -> . VARSTSMALL VARST3 PC
    (26) VARL -> . VARLSMALL VARL3 PC
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
    CC              shift and go to state 108
    VARISMALL       shift and go to state 12
    VARFSMALL       shift and go to state 13
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

  ! CC              [ reduce using rule 10 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 10 (VARS -> .) ]
  ! IDV             [ reduce using rule 10 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 10 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 10 (VARS -> .) ]
  ! IF              [ reduce using rule 10 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 10 (VARS -> .) ]
  ! SAYW            [ reduce using rule 10 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 10 (VARS -> .) ]

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    VARS                           shift and go to state 101
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    VARST                          shift and go to state 11
    BLOCKS2                        shift and go to state 113
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 90

    (83) METHODS3 -> PARAM COMMA . METHODS3
    (83) METHODS3 -> . PARAM COMMA METHODS3
    (84) METHODS3 -> . PARAM
    (85) METHODS3 -> .
    (68) PARAM -> . PARAM2 IDV
    (69) PARAM2 -> . VARISMALL
    (70) PARAM2 -> . VARSTSMALL
    (71) PARAM2 -> . VARFSMALL
    (72) PARAM2 -> . VARLSMALL

    CP              reduce using rule 85 (METHODS3 -> .)
    VARISMALL       shift and go to state 75
    VARSTSMALL      shift and go to state 76
    VARFSMALL       shift and go to state 78
    VARLSMALL       shift and go to state 74

    METHODS3                       shift and go to state 118
    PARAM                          shift and go to state 77
    PARAM2                         shift and go to state 79

state 91

    (68) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 68 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 68 (PARAM -> PARAM2 IDV .)


state 92

    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHOD_UPDATE
    (74) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHOD_UPDATE METHODS
    (34) BLOCKS -> . OC VARS BLOCKS2 CC
    (35) BLOCKS -> . OC VARS CC
    (36) BLOCKS -> . OC BLOCKS2 CC
    (37) BLOCKS -> . OC CC

    OC              shift and go to state 89

    BLOCKS                         shift and go to state 119

state 93

    (28) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB
    (28) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (29) VARL3 -> . IDV COMMA VARL3
    (30) VARL3 -> . IDV

    IDV             shift and go to state 18

    VARL3                          shift and go to state 120

state 94

    (119) CTEL -> IDV OB INT . CB

    CB              shift and go to state 121


state 95

    (32) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 32 (VARL4 -> CTEL COMMA VARL4 .)


state 96

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 122


state 97

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .)


state 98

    (125) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 123


state 99

    (38) BLOCKS2 -> CODE .
    (39) BLOCKS2 -> CODE . BLOCKS2
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              reduce using rule 38 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 124
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 100

    (40) CODE -> RETURN .

    RETURNW         reduce using rule 40 (CODE -> RETURN .)
    IDV             reduce using rule 40 (CODE -> RETURN .)
    LOOPW           reduce using rule 40 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 40 (CODE -> RETURN .)
    IF              reduce using rule 40 (CODE -> RETURN .)
    ASKUSER         reduce using rule 40 (CODE -> RETURN .)
    SAYW            reduce using rule 40 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 40 (CODE -> RETURN .)
    CC              reduce using rule 40 (CODE -> RETURN .)


state 101

    (34) BLOCKS -> OC VARS . BLOCKS2 CC
    (35) BLOCKS -> OC VARS . CC
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 125
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 126
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 102

    (87) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 127


state 103

    (130) CALLBOX -> CALLBOXW . OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> CALLBOXW . OP SEEN_IDM_CALL CP PC

    OP              shift and go to state 128


state 104

    (46) CODE -> SAY .

    RETURNW         reduce using rule 46 (CODE -> SAY .)
    IDV             reduce using rule 46 (CODE -> SAY .)
    LOOPW           reduce using rule 46 (CODE -> SAY .)
    LOOPIFW         reduce using rule 46 (CODE -> SAY .)
    IF              reduce using rule 46 (CODE -> SAY .)
    ASKUSER         reduce using rule 46 (CODE -> SAY .)
    SAYW            reduce using rule 46 (CODE -> SAY .)
    CALLBOXW        reduce using rule 46 (CODE -> SAY .)
    CC              reduce using rule 46 (CODE -> SAY .)


state 105

    (45) CODE -> ASK .

    RETURNW         reduce using rule 45 (CODE -> ASK .)
    IDV             reduce using rule 45 (CODE -> ASK .)
    LOOPW           reduce using rule 45 (CODE -> ASK .)
    LOOPIFW         reduce using rule 45 (CODE -> ASK .)
    IF              reduce using rule 45 (CODE -> ASK .)
    ASKUSER         reduce using rule 45 (CODE -> ASK .)
    SAYW            reduce using rule 45 (CODE -> ASK .)
    CALLBOXW        reduce using rule 45 (CODE -> ASK .)
    CC              reduce using rule 45 (CODE -> ASK .)


state 106

    (44) CODE -> CONDITION .

    RETURNW         reduce using rule 44 (CODE -> CONDITION .)
    IDV             reduce using rule 44 (CODE -> CONDITION .)
    LOOPW           reduce using rule 44 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 44 (CODE -> CONDITION .)
    IF              reduce using rule 44 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 44 (CODE -> CONDITION .)
    SAYW            reduce using rule 44 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 44 (CODE -> CONDITION .)
    CC              reduce using rule 44 (CODE -> CONDITION .)


state 107

    (41) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 41 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 41 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 41 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 41 (CODE -> ASSIGNATION .)
    IF              reduce using rule 41 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 41 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 41 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 41 (CODE -> ASSIGNATION .)
    CC              reduce using rule 41 (CODE -> ASSIGNATION .)


state 108

    (37) BLOCKS -> OC CC .

    CC              reduce using rule 37 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 37 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 37 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 37 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 37 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 37 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 37 (BLOCKS -> OC CC .)
    MAINBOX         reduce using rule 37 (BLOCKS -> OC CC .)


state 109

    (152) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (154) seen_LOOPIF -> .

    OP              reduce using rule 154 (seen_LOOPIF -> .)

    seen_LOOPIF                    shift and go to state 129

state 110

    (86) RETURN -> RETURNW . EXPRESSION PC
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 138

state 111

    (48) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF . OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF . OP STM CP OC seen_OC_IF CC seen_CC_IF

    OP              shift and go to state 143


state 112

    (137) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (151) seen_LOOP -> .

    OP              reduce using rule 151 (seen_LOOP -> .)

    seen_LOOP                      shift and go to state 144

state 113

    (36) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 145


state 114

    (47) CODE -> CALLBOX .

    RETURNW         reduce using rule 47 (CODE -> CALLBOX .)
    IDV             reduce using rule 47 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 47 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 47 (CODE -> CALLBOX .)
    IF              reduce using rule 47 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 47 (CODE -> CALLBOX .)
    SAYW            reduce using rule 47 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 47 (CODE -> CALLBOX .)
    CC              reduce using rule 47 (CODE -> CALLBOX .)


state 115

    (43) CODE -> LOOPIF .

    RETURNW         reduce using rule 43 (CODE -> LOOPIF .)
    IDV             reduce using rule 43 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 43 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 43 (CODE -> LOOPIF .)
    IF              reduce using rule 43 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 43 (CODE -> LOOPIF .)
    SAYW            reduce using rule 43 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 43 (CODE -> LOOPIF .)
    CC              reduce using rule 43 (CODE -> LOOPIF .)


state 116

    (129) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 146


state 117

    (42) CODE -> LOOP .

    RETURNW         reduce using rule 42 (CODE -> LOOP .)
    IDV             reduce using rule 42 (CODE -> LOOP .)
    LOOPW           reduce using rule 42 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 42 (CODE -> LOOP .)
    IF              reduce using rule 42 (CODE -> LOOP .)
    ASKUSER         reduce using rule 42 (CODE -> LOOP .)
    SAYW            reduce using rule 42 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 42 (CODE -> LOOP .)
    CC              reduce using rule 42 (CODE -> LOOP .)


state 118

    (83) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 83 (METHODS3 -> PARAM COMMA METHODS3 .)


state 119

    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHOD_UPDATE
    (74) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHOD_UPDATE METHODS
    (75) METHOD_UPDATE -> .

    RECURSIVEBOX    reduce using rule 75 (METHOD_UPDATE -> .)
    VOIDBOX         reduce using rule 75 (METHOD_UPDATE -> .)
    VARIBOX         reduce using rule 75 (METHOD_UPDATE -> .)
    VARFBOX         reduce using rule 75 (METHOD_UPDATE -> .)
    VARSBOX         reduce using rule 75 (METHOD_UPDATE -> .)
    VARLBOX         reduce using rule 75 (METHOD_UPDATE -> .)
    MAINBOX         reduce using rule 75 (METHOD_UPDATE -> .)

    METHOD_UPDATE                  shift and go to state 147

state 120

    (28) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 28 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 121

    (119) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 119 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 119 (CTEL -> IDV OB INT CB .)


state 122

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .)


state 123

    (125) SAY -> SAYW OP . CONCAT CP PC
    (126) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (127) CONCAT -> . EXPRESSION seen_EXP_SAY
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 148
    CONCAT                         shift and go to state 149

state 124

    (39) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 39 (BLOCKS2 -> CODE BLOCKS2 .)


state 125

    (35) BLOCKS -> OC VARS CC .

    CC              reduce using rule 35 (BLOCKS -> OC VARS CC .)
    RECURSIVEBOX    reduce using rule 35 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)
    VARLBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)
    MAINBOX         reduce using rule 35 (BLOCKS -> OC VARS CC .)


state 126

    (34) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 150


state 127

    (87) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 151

state 128

    (130) CALLBOX -> CALLBOXW OP . SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> CALLBOXW OP . SEEN_IDM_CALL CP PC
    (132) SEEN_IDM_CALL -> . IDM

    IDM             shift and go to state 153

    SEEN_IDM_CALL                  shift and go to state 152

state 129

    (152) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC CC

    OP              shift and go to state 154


state 130

    (88) EXPRESSION -> OPER . seen_EXPF
    (89) EXPRESSION -> OPER . seen_EXPF seen_OPER EXPRESSION
    (90) seen_EXPF -> .

    PLUS            reduce using rule 90 (seen_EXPF -> .)
    MINUS           reduce using rule 90 (seen_EXPF -> .)
    OR              reduce using rule 90 (seen_EXPF -> .)
    PC              reduce using rule 90 (seen_EXPF -> .)
    DOT             reduce using rule 90 (seen_EXPF -> .)
    CP              reduce using rule 90 (seen_EXPF -> .)
    GT              reduce using rule 90 (seen_EXPF -> .)
    GTE             reduce using rule 90 (seen_EXPF -> .)
    LT              reduce using rule 90 (seen_EXPF -> .)
    LTE             reduce using rule 90 (seen_EXPF -> .)
    DOUBLEEQUALS    reduce using rule 90 (seen_EXPF -> .)
    LTGT            reduce using rule 90 (seen_EXPF -> .)
    COMMA           reduce using rule 90 (seen_EXPF -> .)

    seen_EXPF                      shift and go to state 155

state 131

    (113) seen_ID -> IDV .
    (114) seen_ID -> IDV . OB INT CB

    MULTIPLY        reduce using rule 113 (seen_ID -> IDV .)
    DIVISION        reduce using rule 113 (seen_ID -> IDV .)
    AND             reduce using rule 113 (seen_ID -> IDV .)
    PLUS            reduce using rule 113 (seen_ID -> IDV .)
    MINUS           reduce using rule 113 (seen_ID -> IDV .)
    OR              reduce using rule 113 (seen_ID -> IDV .)
    DOT             reduce using rule 113 (seen_ID -> IDV .)
    CP              reduce using rule 113 (seen_ID -> IDV .)
    COMMA           reduce using rule 113 (seen_ID -> IDV .)
    PC              reduce using rule 113 (seen_ID -> IDV .)
    GT              reduce using rule 113 (seen_ID -> IDV .)
    GTE             reduce using rule 113 (seen_ID -> IDV .)
    LT              reduce using rule 113 (seen_ID -> IDV .)
    LTE             reduce using rule 113 (seen_ID -> IDV .)
    DOUBLEEQUALS    reduce using rule 113 (seen_ID -> IDV .)
    LTGT            reduce using rule 113 (seen_ID -> IDV .)
    OB              shift and go to state 156


state 132

    (103) TERM2 -> CTE .

    MULTIPLY        reduce using rule 103 (TERM2 -> CTE .)
    DIVISION        reduce using rule 103 (TERM2 -> CTE .)
    AND             reduce using rule 103 (TERM2 -> CTE .)
    PLUS            reduce using rule 103 (TERM2 -> CTE .)
    MINUS           reduce using rule 103 (TERM2 -> CTE .)
    OR              reduce using rule 103 (TERM2 -> CTE .)
    PC              reduce using rule 103 (TERM2 -> CTE .)
    DOT             reduce using rule 103 (TERM2 -> CTE .)
    CP              reduce using rule 103 (TERM2 -> CTE .)
    GT              reduce using rule 103 (TERM2 -> CTE .)
    GTE             reduce using rule 103 (TERM2 -> CTE .)
    LT              reduce using rule 103 (TERM2 -> CTE .)
    LTE             reduce using rule 103 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 103 (TERM2 -> CTE .)
    LTGT            reduce using rule 103 (TERM2 -> CTE .)
    COMMA           reduce using rule 103 (TERM2 -> CTE .)


state 133

    (105) TERM2 -> MINUS . CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    CTE                            shift and go to state 157
    seen_ID                        shift and go to state 136

state 134

    (108) CTE -> STRING . seen_STRING
    (112) seen_STRING -> .

    MULTIPLY        reduce using rule 112 (seen_STRING -> .)
    DIVISION        reduce using rule 112 (seen_STRING -> .)
    AND             reduce using rule 112 (seen_STRING -> .)
    PLUS            reduce using rule 112 (seen_STRING -> .)
    MINUS           reduce using rule 112 (seen_STRING -> .)
    OR              reduce using rule 112 (seen_STRING -> .)
    PC              reduce using rule 112 (seen_STRING -> .)
    DOT             reduce using rule 112 (seen_STRING -> .)
    CP              reduce using rule 112 (seen_STRING -> .)
    GT              reduce using rule 112 (seen_STRING -> .)
    GTE             reduce using rule 112 (seen_STRING -> .)
    LT              reduce using rule 112 (seen_STRING -> .)
    LTE             reduce using rule 112 (seen_STRING -> .)
    DOUBLEEQUALS    reduce using rule 112 (seen_STRING -> .)
    LTGT            reduce using rule 112 (seen_STRING -> .)
    COMMA           reduce using rule 112 (seen_STRING -> .)

    seen_STRING                    shift and go to state 158

state 135

    (94) OPER -> TERM . seen_TERMF
    (95) OPER -> TERM . seen_TERMF seen_TERM OPER
    (96) seen_TERMF -> .

    MULTIPLY        reduce using rule 96 (seen_TERMF -> .)
    DIVISION        reduce using rule 96 (seen_TERMF -> .)
    AND             reduce using rule 96 (seen_TERMF -> .)
    PLUS            reduce using rule 96 (seen_TERMF -> .)
    MINUS           reduce using rule 96 (seen_TERMF -> .)
    OR              reduce using rule 96 (seen_TERMF -> .)
    PC              reduce using rule 96 (seen_TERMF -> .)
    DOT             reduce using rule 96 (seen_TERMF -> .)
    CP              reduce using rule 96 (seen_TERMF -> .)
    GT              reduce using rule 96 (seen_TERMF -> .)
    GTE             reduce using rule 96 (seen_TERMF -> .)
    LT              reduce using rule 96 (seen_TERMF -> .)
    LTE             reduce using rule 96 (seen_TERMF -> .)
    DOUBLEEQUALS    reduce using rule 96 (seen_TERMF -> .)
    LTGT            reduce using rule 96 (seen_TERMF -> .)
    COMMA           reduce using rule 96 (seen_TERMF -> .)

    seen_TERMF                     shift and go to state 159

state 136

    (109) CTE -> seen_ID .

    MULTIPLY        reduce using rule 109 (CTE -> seen_ID .)
    DIVISION        reduce using rule 109 (CTE -> seen_ID .)
    AND             reduce using rule 109 (CTE -> seen_ID .)
    PLUS            reduce using rule 109 (CTE -> seen_ID .)
    MINUS           reduce using rule 109 (CTE -> seen_ID .)
    OR              reduce using rule 109 (CTE -> seen_ID .)
    COMMA           reduce using rule 109 (CTE -> seen_ID .)
    CP              reduce using rule 109 (CTE -> seen_ID .)
    PC              reduce using rule 109 (CTE -> seen_ID .)
    DOT             reduce using rule 109 (CTE -> seen_ID .)
    GT              reduce using rule 109 (CTE -> seen_ID .)
    GTE             reduce using rule 109 (CTE -> seen_ID .)
    LT              reduce using rule 109 (CTE -> seen_ID .)
    LTE             reduce using rule 109 (CTE -> seen_ID .)
    DOUBLEEQUALS    reduce using rule 109 (CTE -> seen_ID .)
    LTGT            reduce using rule 109 (CTE -> seen_ID .)


state 137

    (104) TERM2 -> PLUS . CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    CTE                            shift and go to state 160
    seen_ID                        shift and go to state 136

state 138

    (86) RETURN -> RETURNW EXPRESSION . PC

    PC              shift and go to state 161


state 139

    (101) TERM -> TERM2 .

    MULTIPLY        reduce using rule 101 (TERM -> TERM2 .)
    DIVISION        reduce using rule 101 (TERM -> TERM2 .)
    AND             reduce using rule 101 (TERM -> TERM2 .)
    PLUS            reduce using rule 101 (TERM -> TERM2 .)
    MINUS           reduce using rule 101 (TERM -> TERM2 .)
    OR              reduce using rule 101 (TERM -> TERM2 .)
    PC              reduce using rule 101 (TERM -> TERM2 .)
    DOT             reduce using rule 101 (TERM -> TERM2 .)
    CP              reduce using rule 101 (TERM -> TERM2 .)
    GT              reduce using rule 101 (TERM -> TERM2 .)
    GTE             reduce using rule 101 (TERM -> TERM2 .)
    LT              reduce using rule 101 (TERM -> TERM2 .)
    LTE             reduce using rule 101 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 101 (TERM -> TERM2 .)
    LTGT            reduce using rule 101 (TERM -> TERM2 .)
    COMMA           reduce using rule 101 (TERM -> TERM2 .)


state 140

    (106) CTE -> INT . seen_INT
    (110) seen_INT -> .

    MULTIPLY        reduce using rule 110 (seen_INT -> .)
    DIVISION        reduce using rule 110 (seen_INT -> .)
    AND             reduce using rule 110 (seen_INT -> .)
    PLUS            reduce using rule 110 (seen_INT -> .)
    MINUS           reduce using rule 110 (seen_INT -> .)
    OR              reduce using rule 110 (seen_INT -> .)
    PC              reduce using rule 110 (seen_INT -> .)
    DOT             reduce using rule 110 (seen_INT -> .)
    CP              reduce using rule 110 (seen_INT -> .)
    GT              reduce using rule 110 (seen_INT -> .)
    GTE             reduce using rule 110 (seen_INT -> .)
    LT              reduce using rule 110 (seen_INT -> .)
    LTE             reduce using rule 110 (seen_INT -> .)
    DOUBLEEQUALS    reduce using rule 110 (seen_INT -> .)
    LTGT            reduce using rule 110 (seen_INT -> .)
    COMMA           reduce using rule 110 (seen_INT -> .)

    seen_INT                       shift and go to state 162

state 141

    (107) CTE -> FLOAT . seen_FLOAT
    (111) seen_FLOAT -> .

    MULTIPLY        reduce using rule 111 (seen_FLOAT -> .)
    DIVISION        reduce using rule 111 (seen_FLOAT -> .)
    AND             reduce using rule 111 (seen_FLOAT -> .)
    PLUS            reduce using rule 111 (seen_FLOAT -> .)
    MINUS           reduce using rule 111 (seen_FLOAT -> .)
    OR              reduce using rule 111 (seen_FLOAT -> .)
    PC              reduce using rule 111 (seen_FLOAT -> .)
    DOT             reduce using rule 111 (seen_FLOAT -> .)
    CP              reduce using rule 111 (seen_FLOAT -> .)
    GT              reduce using rule 111 (seen_FLOAT -> .)
    GTE             reduce using rule 111 (seen_FLOAT -> .)
    LT              reduce using rule 111 (seen_FLOAT -> .)
    LTE             reduce using rule 111 (seen_FLOAT -> .)
    DOUBLEEQUALS    reduce using rule 111 (seen_FLOAT -> .)
    LTGT            reduce using rule 111 (seen_FLOAT -> .)
    COMMA           reduce using rule 111 (seen_FLOAT -> .)

    seen_FLOAT                     shift and go to state 163

state 142

    (100) TERM -> OP . seen_OP_TERM STM CP
    (102) seen_OP_TERM -> .

    OP              reduce using rule 102 (seen_OP_TERM -> .)
    PLUS            reduce using rule 102 (seen_OP_TERM -> .)
    MINUS           reduce using rule 102 (seen_OP_TERM -> .)
    INT             reduce using rule 102 (seen_OP_TERM -> .)
    FLOAT           reduce using rule 102 (seen_OP_TERM -> .)
    STRING          reduce using rule 102 (seen_OP_TERM -> .)
    IDV             reduce using rule 102 (seen_OP_TERM -> .)

    seen_OP_TERM                   shift and go to state 164

state 143

    (48) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF OP . STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF OP . STM CP OC seen_OC_IF CC seen_CC_IF
    (59) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (60) STM -> . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    STM                            shift and go to state 166
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 165

state 144

    (137) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    OP              shift and go to state 167


state 145

    (36) BLOCKS -> OC BLOCKS2 CC .

    CC              reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)
    MAINBOX         reduce using rule 36 (BLOCKS -> OC BLOCKS2 CC .)


state 146

    (129) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 168


state 147

    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE .
    (74) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE . METHODS
    (73) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (74) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (77) METHODS2 -> . RECURSIVEBOX
    (78) METHODS2 -> . VOIDBOX
    (79) METHODS2 -> . VARIBOX
    (80) METHODS2 -> . VARFBOX
    (81) METHODS2 -> . VARSBOX
    (82) METHODS2 -> . VARLBOX

    MAINBOX         reduce using rule 73 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE .)
    RECURSIVEBOX    shift and go to state 29
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 33
    VARFBOX         shift and go to state 32
    VARSBOX         shift and go to state 28
    VARLBOX         shift and go to state 27

    METHODS                        shift and go to state 169
    METHODS2                       shift and go to state 34

state 148

    (126) CONCAT -> EXPRESSION . seen_EXP_SAY DOT CONCAT
    (127) CONCAT -> EXPRESSION . seen_EXP_SAY
    (128) seen_EXP_SAY -> .

    DOT             reduce using rule 128 (seen_EXP_SAY -> .)
    CP              reduce using rule 128 (seen_EXP_SAY -> .)

    seen_EXP_SAY                   shift and go to state 170

state 149

    (125) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 171


state 150

    (34) BLOCKS -> OC VARS BLOCKS2 CC .

    CC              reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARLBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)
    MAINBOX         reduce using rule 34 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 151

    (87) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 172


state 152

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL . COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL . CP PC

    COMMA           shift and go to state 173
    CP              shift and go to state 174


state 153

    (132) SEEN_IDM_CALL -> IDM .

    COMMA           reduce using rule 132 (SEEN_IDM_CALL -> IDM .)
    CP              reduce using rule 132 (SEEN_IDM_CALL -> IDM .)


state 154

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC CC
    (59) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (60) STM -> . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    CTE                            shift and go to state 132
    STM                            shift and go to state 175
    EXPRESSION                     shift and go to state 165
    seen_ID                        shift and go to state 136

state 155

    (88) EXPRESSION -> OPER seen_EXPF .
    (89) EXPRESSION -> OPER seen_EXPF . seen_OPER EXPRESSION
    (91) seen_OPER -> . PLUS
    (92) seen_OPER -> . MINUS
    (93) seen_OPER -> . OR

    GT              reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    GTE             reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    LT              reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    LTE             reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    DOUBLEEQUALS    reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    LTGT            reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    CP              reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    DOT             reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    COMMA           reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    PC              reduce using rule 88 (EXPRESSION -> OPER seen_EXPF .)
    PLUS            shift and go to state 177
    MINUS           shift and go to state 179
    OR              shift and go to state 176

    seen_OPER                      shift and go to state 178

state 156

    (114) seen_ID -> IDV OB . INT CB

    INT             shift and go to state 180


state 157

    (105) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 105 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 105 (TERM2 -> MINUS CTE .)
    AND             reduce using rule 105 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 105 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 105 (TERM2 -> MINUS CTE .)
    OR              reduce using rule 105 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 105 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 105 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 105 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 105 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 105 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 105 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 105 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 105 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 105 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 105 (TERM2 -> MINUS CTE .)


state 158

    (108) CTE -> STRING seen_STRING .

    MULTIPLY        reduce using rule 108 (CTE -> STRING seen_STRING .)
    DIVISION        reduce using rule 108 (CTE -> STRING seen_STRING .)
    AND             reduce using rule 108 (CTE -> STRING seen_STRING .)
    PLUS            reduce using rule 108 (CTE -> STRING seen_STRING .)
    MINUS           reduce using rule 108 (CTE -> STRING seen_STRING .)
    OR              reduce using rule 108 (CTE -> STRING seen_STRING .)
    COMMA           reduce using rule 108 (CTE -> STRING seen_STRING .)
    CP              reduce using rule 108 (CTE -> STRING seen_STRING .)
    PC              reduce using rule 108 (CTE -> STRING seen_STRING .)
    DOT             reduce using rule 108 (CTE -> STRING seen_STRING .)
    GT              reduce using rule 108 (CTE -> STRING seen_STRING .)
    GTE             reduce using rule 108 (CTE -> STRING seen_STRING .)
    LT              reduce using rule 108 (CTE -> STRING seen_STRING .)
    LTE             reduce using rule 108 (CTE -> STRING seen_STRING .)
    DOUBLEEQUALS    reduce using rule 108 (CTE -> STRING seen_STRING .)
    LTGT            reduce using rule 108 (CTE -> STRING seen_STRING .)


state 159

    (94) OPER -> TERM seen_TERMF .
    (95) OPER -> TERM seen_TERMF . seen_TERM OPER
    (97) seen_TERM -> . MULTIPLY
    (98) seen_TERM -> . DIVISION
    (99) seen_TERM -> . AND

    PLUS            reduce using rule 94 (OPER -> TERM seen_TERMF .)
    MINUS           reduce using rule 94 (OPER -> TERM seen_TERMF .)
    OR              reduce using rule 94 (OPER -> TERM seen_TERMF .)
    PC              reduce using rule 94 (OPER -> TERM seen_TERMF .)
    DOT             reduce using rule 94 (OPER -> TERM seen_TERMF .)
    CP              reduce using rule 94 (OPER -> TERM seen_TERMF .)
    GT              reduce using rule 94 (OPER -> TERM seen_TERMF .)
    GTE             reduce using rule 94 (OPER -> TERM seen_TERMF .)
    LT              reduce using rule 94 (OPER -> TERM seen_TERMF .)
    LTE             reduce using rule 94 (OPER -> TERM seen_TERMF .)
    DOUBLEEQUALS    reduce using rule 94 (OPER -> TERM seen_TERMF .)
    LTGT            reduce using rule 94 (OPER -> TERM seen_TERMF .)
    COMMA           reduce using rule 94 (OPER -> TERM seen_TERMF .)
    MULTIPLY        shift and go to state 184
    DIVISION        shift and go to state 181
    AND             shift and go to state 182

    seen_TERM                      shift and go to state 183

state 160

    (104) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 104 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 104 (TERM2 -> PLUS CTE .)
    AND             reduce using rule 104 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 104 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 104 (TERM2 -> PLUS CTE .)
    OR              reduce using rule 104 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 104 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 104 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 104 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 104 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 104 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 104 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 104 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 104 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 104 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 104 (TERM2 -> PLUS CTE .)


state 161

    (86) RETURN -> RETURNW EXPRESSION PC .

    RETURNW         reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    IDV             reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    LOOPW           reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    LOOPIFW         reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    IF              reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    ASKUSER         reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    SAYW            reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    CALLBOXW        reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)
    CC              reduce using rule 86 (RETURN -> RETURNW EXPRESSION PC .)


state 162

    (106) CTE -> INT seen_INT .

    MULTIPLY        reduce using rule 106 (CTE -> INT seen_INT .)
    DIVISION        reduce using rule 106 (CTE -> INT seen_INT .)
    AND             reduce using rule 106 (CTE -> INT seen_INT .)
    PLUS            reduce using rule 106 (CTE -> INT seen_INT .)
    MINUS           reduce using rule 106 (CTE -> INT seen_INT .)
    OR              reduce using rule 106 (CTE -> INT seen_INT .)
    COMMA           reduce using rule 106 (CTE -> INT seen_INT .)
    CP              reduce using rule 106 (CTE -> INT seen_INT .)
    PC              reduce using rule 106 (CTE -> INT seen_INT .)
    DOT             reduce using rule 106 (CTE -> INT seen_INT .)
    GT              reduce using rule 106 (CTE -> INT seen_INT .)
    GTE             reduce using rule 106 (CTE -> INT seen_INT .)
    LT              reduce using rule 106 (CTE -> INT seen_INT .)
    LTE             reduce using rule 106 (CTE -> INT seen_INT .)
    DOUBLEEQUALS    reduce using rule 106 (CTE -> INT seen_INT .)
    LTGT            reduce using rule 106 (CTE -> INT seen_INT .)


state 163

    (107) CTE -> FLOAT seen_FLOAT .

    MULTIPLY        reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    DIVISION        reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    AND             reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    PLUS            reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    MINUS           reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    OR              reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    COMMA           reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    CP              reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    PC              reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    DOT             reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    GT              reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    GTE             reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    LT              reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    LTE             reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    DOUBLEEQUALS    reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)
    LTGT            reduce using rule 107 (CTE -> FLOAT seen_FLOAT .)


state 164

    (100) TERM -> OP seen_OP_TERM . STM CP
    (59) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (60) STM -> . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    STM                            shift and go to state 185
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 165

state 165

    (59) STM -> EXPRESSION . STM2 EXPRESSION seen_STM
    (60) STM -> EXPRESSION .
    (61) STM2 -> . GT
    (62) STM2 -> . GTE
    (63) STM2 -> . LT
    (64) STM2 -> . LTE
    (65) STM2 -> . DOUBLEEQUALS
    (66) STM2 -> . LTGT

    CP              reduce using rule 60 (STM -> EXPRESSION .)
    GT              shift and go to state 186
    GTE             shift and go to state 187
    LT              shift and go to state 189
    LTE             shift and go to state 191
    DOUBLEEQUALS    shift and go to state 192
    LTGT            shift and go to state 190

    STM2                           shift and go to state 188

state 166

    (48) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF OP STM . CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF OP STM . CP OC seen_OC_IF CC seen_CC_IF

    CP              shift and go to state 193


state 167

    (137) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (143) seen_VAR_LOOP -> . IDV

    IDV             shift and go to state 195

    seen_VAR_LOOP                  shift and go to state 194

state 168

    (129) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 196


state 169

    (74) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS .

    MAINBOX         reduce using rule 74 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS .)


state 170

    (126) CONCAT -> EXPRESSION seen_EXP_SAY . DOT CONCAT
    (127) CONCAT -> EXPRESSION seen_EXP_SAY .

    DOT             shift and go to state 197
    CP              reduce using rule 127 (CONCAT -> EXPRESSION seen_EXP_SAY .)


state 171

    (125) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 198


state 172

    (87) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 87 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 173

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA . SEEN_CALL PARAMETERS CP PC
    (133) SEEN_CALL -> .

    OP              reduce using rule 133 (SEEN_CALL -> .)
    PLUS            reduce using rule 133 (SEEN_CALL -> .)
    MINUS           reduce using rule 133 (SEEN_CALL -> .)
    INT             reduce using rule 133 (SEEN_CALL -> .)
    FLOAT           reduce using rule 133 (SEEN_CALL -> .)
    STRING          reduce using rule 133 (SEEN_CALL -> .)
    IDV             reduce using rule 133 (SEEN_CALL -> .)

    SEEN_CALL                      shift and go to state 199

state 174

    (131) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP . PC

    PC              shift and go to state 200


state 175

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC CC

    CP              shift and go to state 201


state 176

    (93) seen_OPER -> OR .

    OP              reduce using rule 93 (seen_OPER -> OR .)
    PLUS            reduce using rule 93 (seen_OPER -> OR .)
    MINUS           reduce using rule 93 (seen_OPER -> OR .)
    INT             reduce using rule 93 (seen_OPER -> OR .)
    FLOAT           reduce using rule 93 (seen_OPER -> OR .)
    STRING          reduce using rule 93 (seen_OPER -> OR .)
    IDV             reduce using rule 93 (seen_OPER -> OR .)


state 177

    (91) seen_OPER -> PLUS .

    OP              reduce using rule 91 (seen_OPER -> PLUS .)
    PLUS            reduce using rule 91 (seen_OPER -> PLUS .)
    MINUS           reduce using rule 91 (seen_OPER -> PLUS .)
    INT             reduce using rule 91 (seen_OPER -> PLUS .)
    FLOAT           reduce using rule 91 (seen_OPER -> PLUS .)
    STRING          reduce using rule 91 (seen_OPER -> PLUS .)
    IDV             reduce using rule 91 (seen_OPER -> PLUS .)


state 178

    (89) EXPRESSION -> OPER seen_EXPF seen_OPER . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 202

state 179

    (92) seen_OPER -> MINUS .

    OP              reduce using rule 92 (seen_OPER -> MINUS .)
    PLUS            reduce using rule 92 (seen_OPER -> MINUS .)
    MINUS           reduce using rule 92 (seen_OPER -> MINUS .)
    INT             reduce using rule 92 (seen_OPER -> MINUS .)
    FLOAT           reduce using rule 92 (seen_OPER -> MINUS .)
    STRING          reduce using rule 92 (seen_OPER -> MINUS .)
    IDV             reduce using rule 92 (seen_OPER -> MINUS .)


state 180

    (114) seen_ID -> IDV OB INT . CB

    CB              shift and go to state 203


state 181

    (98) seen_TERM -> DIVISION .

    OP              reduce using rule 98 (seen_TERM -> DIVISION .)
    PLUS            reduce using rule 98 (seen_TERM -> DIVISION .)
    MINUS           reduce using rule 98 (seen_TERM -> DIVISION .)
    INT             reduce using rule 98 (seen_TERM -> DIVISION .)
    FLOAT           reduce using rule 98 (seen_TERM -> DIVISION .)
    STRING          reduce using rule 98 (seen_TERM -> DIVISION .)
    IDV             reduce using rule 98 (seen_TERM -> DIVISION .)


state 182

    (99) seen_TERM -> AND .

    OP              reduce using rule 99 (seen_TERM -> AND .)
    PLUS            reduce using rule 99 (seen_TERM -> AND .)
    MINUS           reduce using rule 99 (seen_TERM -> AND .)
    INT             reduce using rule 99 (seen_TERM -> AND .)
    FLOAT           reduce using rule 99 (seen_TERM -> AND .)
    STRING          reduce using rule 99 (seen_TERM -> AND .)
    IDV             reduce using rule 99 (seen_TERM -> AND .)


state 183

    (95) OPER -> TERM seen_TERMF seen_TERM . OPER
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 204
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132

state 184

    (97) seen_TERM -> MULTIPLY .

    OP              reduce using rule 97 (seen_TERM -> MULTIPLY .)
    PLUS            reduce using rule 97 (seen_TERM -> MULTIPLY .)
    MINUS           reduce using rule 97 (seen_TERM -> MULTIPLY .)
    INT             reduce using rule 97 (seen_TERM -> MULTIPLY .)
    FLOAT           reduce using rule 97 (seen_TERM -> MULTIPLY .)
    STRING          reduce using rule 97 (seen_TERM -> MULTIPLY .)
    IDV             reduce using rule 97 (seen_TERM -> MULTIPLY .)


state 185

    (100) TERM -> OP seen_OP_TERM STM . CP

    CP              shift and go to state 205


state 186

    (61) STM2 -> GT .

    OP              reduce using rule 61 (STM2 -> GT .)
    PLUS            reduce using rule 61 (STM2 -> GT .)
    MINUS           reduce using rule 61 (STM2 -> GT .)
    INT             reduce using rule 61 (STM2 -> GT .)
    FLOAT           reduce using rule 61 (STM2 -> GT .)
    STRING          reduce using rule 61 (STM2 -> GT .)
    IDV             reduce using rule 61 (STM2 -> GT .)


state 187

    (62) STM2 -> GTE .

    OP              reduce using rule 62 (STM2 -> GTE .)
    PLUS            reduce using rule 62 (STM2 -> GTE .)
    MINUS           reduce using rule 62 (STM2 -> GTE .)
    INT             reduce using rule 62 (STM2 -> GTE .)
    FLOAT           reduce using rule 62 (STM2 -> GTE .)
    STRING          reduce using rule 62 (STM2 -> GTE .)
    IDV             reduce using rule 62 (STM2 -> GTE .)


state 188

    (59) STM -> EXPRESSION STM2 . EXPRESSION seen_STM
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 206

state 189

    (63) STM2 -> LT .

    OP              reduce using rule 63 (STM2 -> LT .)
    PLUS            reduce using rule 63 (STM2 -> LT .)
    MINUS           reduce using rule 63 (STM2 -> LT .)
    INT             reduce using rule 63 (STM2 -> LT .)
    FLOAT           reduce using rule 63 (STM2 -> LT .)
    STRING          reduce using rule 63 (STM2 -> LT .)
    IDV             reduce using rule 63 (STM2 -> LT .)


state 190

    (66) STM2 -> LTGT .

    OP              reduce using rule 66 (STM2 -> LTGT .)
    PLUS            reduce using rule 66 (STM2 -> LTGT .)
    MINUS           reduce using rule 66 (STM2 -> LTGT .)
    INT             reduce using rule 66 (STM2 -> LTGT .)
    FLOAT           reduce using rule 66 (STM2 -> LTGT .)
    STRING          reduce using rule 66 (STM2 -> LTGT .)
    IDV             reduce using rule 66 (STM2 -> LTGT .)


state 191

    (64) STM2 -> LTE .

    OP              reduce using rule 64 (STM2 -> LTE .)
    PLUS            reduce using rule 64 (STM2 -> LTE .)
    MINUS           reduce using rule 64 (STM2 -> LTE .)
    INT             reduce using rule 64 (STM2 -> LTE .)
    FLOAT           reduce using rule 64 (STM2 -> LTE .)
    STRING          reduce using rule 64 (STM2 -> LTE .)
    IDV             reduce using rule 64 (STM2 -> LTE .)


state 192

    (65) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 65 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 65 (STM2 -> DOUBLEEQUALS .)


state 193

    (48) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF OP STM CP . OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF OP STM CP . OC seen_OC_IF CC seen_CC_IF

    OC              shift and go to state 207


state 194

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    FROM            shift and go to state 208


state 195

    (143) seen_VAR_LOOP -> IDV .

    FROM            reduce using rule 143 (seen_VAR_LOOP -> IDV .)


state 196

    (129) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 209


state 197

    (126) CONCAT -> EXPRESSION seen_EXP_SAY DOT . CONCAT
    (126) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (127) CONCAT -> . EXPRESSION seen_EXP_SAY
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 148
    CONCAT                         shift and go to state 210

state 198

    (125) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 125 (SAY -> SAYW OP CONCAT CP PC .)


state 199

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL . PARAMETERS CP PC
    (134) PARAMETERS -> . SEEN_EXPRESSION_PARAM COMMA PARAMETERS
    (135) PARAMETERS -> . SEEN_EXPRESSION_PARAM
    (136) SEEN_EXPRESSION_PARAM -> . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    SEEN_EXPRESSION_PARAM          shift and go to state 213
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    PARAMETERS                     shift and go to state 211
    CTE                            shift and go to state 132
    seen_ID                        shift and go to state 136
    EXPRESSION                     shift and go to state 212

state 200

    (131) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .

    RETURNW         reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    IDV             reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    LOOPW           reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    LOOPIFW         reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    IF              reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    ASKUSER         reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    SAYW            reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    CALLBOXW        reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    CC              reduce using rule 131 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)


state 201

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC CC
    (155) seen_CP_LOOPIF -> .

    OC              reduce using rule 155 (seen_CP_LOOPIF -> .)

    seen_CP_LOOPIF                 shift and go to state 214

state 202

    (89) EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .

    GT              reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GTE             reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LT              reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTE             reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTGT            reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    CP              reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOT             reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    COMMA           reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    PC              reduce using rule 89 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)


state 203

    (114) seen_ID -> IDV OB INT CB .

    MULTIPLY        reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    DIVISION        reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    AND             reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    PLUS            reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    MINUS           reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    OR              reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    DOT             reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    CP              reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    COMMA           reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    PC              reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    GT              reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    GTE             reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    LT              reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    LTE             reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 114 (seen_ID -> IDV OB INT CB .)
    LTGT            reduce using rule 114 (seen_ID -> IDV OB INT CB .)


state 204

    (95) OPER -> TERM seen_TERMF seen_TERM OPER .

    PLUS            reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    MINUS           reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    OR              reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    PC              reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOT             reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CP              reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GT              reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GTE             reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LT              reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTE             reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOUBLEEQUALS    reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTGT            reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    COMMA           reduce using rule 95 (OPER -> TERM seen_TERMF seen_TERM OPER .)


state 205

    (100) TERM -> OP seen_OP_TERM STM CP .

    MULTIPLY        reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    DIVISION        reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    AND             reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    PLUS            reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    MINUS           reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    OR              reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    PC              reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    DOT             reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    CP              reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    GT              reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    GTE             reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    LT              reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    LTE             reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    DOUBLEEQUALS    reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    LTGT            reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)
    COMMA           reduce using rule 100 (TERM -> OP seen_OP_TERM STM CP .)


state 206

    (59) STM -> EXPRESSION STM2 EXPRESSION . seen_STM
    (67) seen_STM -> .

    CP              reduce using rule 67 (seen_STM -> .)

    seen_STM                       shift and go to state 215

state 207

    (48) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF OP STM CP OC . seen_OC_IF CC CONDITION2
    (50) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF OP STM CP OC . seen_OC_IF CC seen_CC_IF
    (52) seen_OC_IF -> .

    CC              reduce using rule 52 (seen_OC_IF -> .)
    RETURNW         reduce using rule 52 (seen_OC_IF -> .)
    IDV             reduce using rule 52 (seen_OC_IF -> .)
    LOOPW           reduce using rule 52 (seen_OC_IF -> .)
    LOOPIFW         reduce using rule 52 (seen_OC_IF -> .)
    IF              reduce using rule 52 (seen_OC_IF -> .)
    ASKUSER         reduce using rule 52 (seen_OC_IF -> .)
    SAYW            reduce using rule 52 (seen_OC_IF -> .)
    CALLBOXW        reduce using rule 52 (seen_OC_IF -> .)

    seen_OC_IF                     shift and go to state 216

state 208

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (144) LOOP2 -> . seen_INT_LOOP
    (145) LOOP2 -> . seen_FLOAT_LOOP
    (146) seen_INT_LOOP -> . INT
    (147) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 220
    FLOAT           shift and go to state 217

    seen_FLOAT_LOOP                shift and go to state 219
    LOOP2                          shift and go to state 221
    seen_INT_LOOP                  shift and go to state 218

state 209

    (129) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 222


state 210

    (126) CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .

    CP              reduce using rule 126 (CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .)


state 211

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS . CP PC

    CP              shift and go to state 223


state 212

    (136) SEEN_EXPRESSION_PARAM -> EXPRESSION .

    COMMA           reduce using rule 136 (SEEN_EXPRESSION_PARAM -> EXPRESSION .)
    CP              reduce using rule 136 (SEEN_EXPRESSION_PARAM -> EXPRESSION .)


state 213

    (134) PARAMETERS -> SEEN_EXPRESSION_PARAM . COMMA PARAMETERS
    (135) PARAMETERS -> SEEN_EXPRESSION_PARAM .

    COMMA           shift and go to state 224
    CP              reduce using rule 135 (PARAMETERS -> SEEN_EXPRESSION_PARAM .)


state 214

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC CC

    OC              shift and go to state 225


state 215

    (59) STM -> EXPRESSION STM2 EXPRESSION seen_STM .

    CP              reduce using rule 59 (STM -> EXPRESSION STM2 EXPRESSION seen_STM .)


state 216

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF . CC CONDITION2
    (50) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> IF OP STM CP OC seen_OC_IF . CC seen_CC_IF
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 226
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 227
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 217

    (147) seen_FLOAT_LOOP -> FLOAT .

    BY              reduce using rule 147 (seen_FLOAT_LOOP -> FLOAT .)
    CP              reduce using rule 147 (seen_FLOAT_LOOP -> FLOAT .)
    TO              reduce using rule 147 (seen_FLOAT_LOOP -> FLOAT .)


state 218

    (144) LOOP2 -> seen_INT_LOOP .

    TO              reduce using rule 144 (LOOP2 -> seen_INT_LOOP .)
    CP              reduce using rule 144 (LOOP2 -> seen_INT_LOOP .)
    BY              reduce using rule 144 (LOOP2 -> seen_INT_LOOP .)


state 219

    (145) LOOP2 -> seen_FLOAT_LOOP .

    TO              reduce using rule 145 (LOOP2 -> seen_FLOAT_LOOP .)
    CP              reduce using rule 145 (LOOP2 -> seen_FLOAT_LOOP .)
    BY              reduce using rule 145 (LOOP2 -> seen_FLOAT_LOOP .)


state 220

    (146) seen_INT_LOOP -> INT .

    CP              reduce using rule 146 (seen_INT_LOOP -> INT .)
    TO              reduce using rule 146 (seen_INT_LOOP -> INT .)
    BY              reduce using rule 146 (seen_INT_LOOP -> INT .)


state 221

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC CC

    TO              shift and go to state 228


state 222

    (129) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 229


state 223

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP . PC

    PC              shift and go to state 230


state 224

    (134) PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA . PARAMETERS
    (134) PARAMETERS -> . SEEN_EXPRESSION_PARAM COMMA PARAMETERS
    (135) PARAMETERS -> . SEEN_EXPRESSION_PARAM
    (136) SEEN_EXPRESSION_PARAM -> . EXPRESSION
    (88) EXPRESSION -> . OPER seen_EXPF
    (89) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (94) OPER -> . TERM seen_TERMF
    (95) OPER -> . TERM seen_TERMF seen_TERM OPER
    (100) TERM -> . OP seen_OP_TERM STM CP
    (101) TERM -> . TERM2
    (103) TERM2 -> . CTE
    (104) TERM2 -> . PLUS CTE
    (105) TERM2 -> . MINUS CTE
    (106) CTE -> . INT seen_INT
    (107) CTE -> . FLOAT seen_FLOAT
    (108) CTE -> . STRING seen_STRING
    (109) CTE -> . seen_ID
    (113) seen_ID -> . IDV
    (114) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 133
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 134
    IDV             shift and go to state 131

    OPER                           shift and go to state 130
    SEEN_EXPRESSION_PARAM          shift and go to state 213
    TERM                           shift and go to state 135
    TERM2                          shift and go to state 139
    PARAMETERS                     shift and go to state 231
    seen_ID                        shift and go to state 136
    CTE                            shift and go to state 132
    EXPRESSION                     shift and go to state 212

state 225

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . BLOCKS2 CC
    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . CC
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 232
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 233
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 226

    (49) CONDITION -> IF OP STM CP OC seen_OC_IF CC . CONDITION2
    (51) CONDITION -> IF OP STM CP OC seen_OC_IF CC . seen_CC_IF
    (54) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (53) seen_CC_IF -> .

    ELSE            shift and go to state 234
    RETURNW         reduce using rule 53 (seen_CC_IF -> .)
    IDV             reduce using rule 53 (seen_CC_IF -> .)
    LOOPW           reduce using rule 53 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 53 (seen_CC_IF -> .)
    IF              reduce using rule 53 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 53 (seen_CC_IF -> .)
    SAYW            reduce using rule 53 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 53 (seen_CC_IF -> .)
    CC              reduce using rule 53 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 235
    CONDITION2                     shift and go to state 236

state 227

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC CONDITION2
    (50) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC seen_CC_IF

    CC              shift and go to state 237


state 228

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC CC
    (144) LOOP2 -> . seen_INT_LOOP
    (145) LOOP2 -> . seen_FLOAT_LOOP
    (146) seen_INT_LOOP -> . INT
    (147) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 220
    FLOAT           shift and go to state 217

    seen_FLOAT_LOOP                shift and go to state 219
    LOOP2                          shift and go to state 238
    seen_INT_LOOP                  shift and go to state 218

state 229

    (129) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 129 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 230

    (130) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .

    RETURNW         reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    IDV             reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    LOOPW           reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    IF              reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    ASKUSER         reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    SAYW            reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    CC              reduce using rule 130 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)


state 231

    (134) PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS .

    CP              reduce using rule 134 (PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS .)


state 232

    (153) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .

    RETURNW         reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IDV             reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPW           reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPIFW         reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IF              reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    ASKUSER         reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    SAYW            reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CALLBOXW        reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CC              reduce using rule 153 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)


state 233

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 . CC

    CC              shift and go to state 239


state 234

    (54) CONDITION2 -> ELSE . seen_ELSE OC CONDITION3
    (57) seen_ELSE -> .

    OC              reduce using rule 57 (seen_ELSE -> .)

    seen_ELSE                      shift and go to state 240

state 235

    (51) CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .

    RETURNW         reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IDV             reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPW           reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPIFW         reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IF              reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    ASKUSER         reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    SAYW            reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CALLBOXW        reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CC              reduce using rule 51 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)


state 236

    (49) CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .

    RETURNW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IDV             reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPW           reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPIFW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IF              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    ASKUSER         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    SAYW            reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CALLBOXW        reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CC              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)


state 237

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . CONDITION2
    (50) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . seen_CC_IF
    (54) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (53) seen_CC_IF -> .

    ELSE            shift and go to state 234
    RETURNW         reduce using rule 53 (seen_CC_IF -> .)
    IDV             reduce using rule 53 (seen_CC_IF -> .)
    LOOPW           reduce using rule 53 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 53 (seen_CC_IF -> .)
    IF              reduce using rule 53 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 53 (seen_CC_IF -> .)
    SAYW            reduce using rule 53 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 53 (seen_CC_IF -> .)
    CC              reduce using rule 53 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 241
    CONDITION2                     shift and go to state 242

state 238

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC CC

    BY              shift and go to state 244
    CP              shift and go to state 243


state 239

    (152) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .

    RETURNW         reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IDV             reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPW           reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IF              reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    SAYW            reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CC              reduce using rule 152 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)


state 240

    (54) CONDITION2 -> ELSE seen_ELSE . OC CONDITION3

    OC              shift and go to state 245


state 241

    (50) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .

    RETURNW         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IDV             reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPW           reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPIFW         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IF              reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    ASKUSER         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    SAYW            reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CALLBOXW        reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CC              reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)


state 242

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)


state 243

    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC BLOCKS2 CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC CC
    (142) seen_CP_LOOP2 -> .

    OC              reduce using rule 142 (seen_CP_LOOP2 -> .)

    seen_CP_LOOP2                  shift and go to state 246

state 244

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (148) LOOP3 -> . PLUS
    (149) LOOP3 -> . MINUS
    (150) LOOP3 -> .

    PLUS            shift and go to state 248
    MINUS           shift and go to state 247
    INT             reduce using rule 150 (LOOP3 -> .)
    FLOAT           reduce using rule 150 (LOOP3 -> .)

    LOOP3                          shift and go to state 249

state 245

    (54) CONDITION2 -> ELSE seen_ELSE OC . CONDITION3
    (55) CONDITION3 -> . BLOCKS2 CC seen_CC_ELSE
    (56) CONDITION3 -> . CC seen_CC_ELSE
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 250
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    CONDITION3                     shift and go to state 251
    BLOCKS2                        shift and go to state 252
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 246

    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC BLOCKS2 CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC CC

    OC              shift and go to state 253


state 247

    (149) LOOP3 -> MINUS .

    INT             reduce using rule 149 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 149 (LOOP3 -> MINUS .)


state 248

    (148) LOOP3 -> PLUS .

    INT             reduce using rule 148 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 148 (LOOP3 -> PLUS .)


state 249

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC CC
    (144) LOOP2 -> . seen_INT_LOOP
    (145) LOOP2 -> . seen_FLOAT_LOOP
    (146) seen_INT_LOOP -> . INT
    (147) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 220
    FLOAT           shift and go to state 217

    seen_FLOAT_LOOP                shift and go to state 219
    LOOP2                          shift and go to state 254
    seen_INT_LOOP                  shift and go to state 218

state 250

    (56) CONDITION3 -> CC . seen_CC_ELSE
    (58) seen_CC_ELSE -> .

    RETURNW         reduce using rule 58 (seen_CC_ELSE -> .)
    IDV             reduce using rule 58 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 58 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 58 (seen_CC_ELSE -> .)
    IF              reduce using rule 58 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 58 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 58 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 58 (seen_CC_ELSE -> .)
    CC              reduce using rule 58 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 255

state 251

    (54) CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .

    RETURNW         reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IDV             reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPW           reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPIFW         reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IF              reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    ASKUSER         reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    SAYW            reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CALLBOXW        reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CC              reduce using rule 54 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)


state 252

    (55) CONDITION3 -> BLOCKS2 . CC seen_CC_ELSE

    CC              shift and go to state 256


state 253

    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . BLOCKS2 CC
    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . CC
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 257
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 258
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 254

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC CC

    CP              shift and go to state 259


state 255

    (56) CONDITION3 -> CC seen_CC_ELSE .

    RETURNW         reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    IDV             reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPW           reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    IF              reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    SAYW            reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)
    CC              reduce using rule 56 (CONDITION3 -> CC seen_CC_ELSE .)


state 256

    (55) CONDITION3 -> BLOCKS2 CC . seen_CC_ELSE
    (58) seen_CC_ELSE -> .

    RETURNW         reduce using rule 58 (seen_CC_ELSE -> .)
    IDV             reduce using rule 58 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 58 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 58 (seen_CC_ELSE -> .)
    IF              reduce using rule 58 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 58 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 58 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 58 (seen_CC_ELSE -> .)
    CC              reduce using rule 58 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 260

state 257

    (140) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .

    RETURNW         reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IDV             reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPW           reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPIFW         reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IF              reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    ASKUSER         reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    SAYW            reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CALLBOXW        reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CC              reduce using rule 140 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)


state 258

    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 . CC

    CC              shift and go to state 261


state 259

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC CC
    (141) seen_CP_LOOP1 -> .

    OC              reduce using rule 141 (seen_CP_LOOP1 -> .)

    seen_CP_LOOP1                  shift and go to state 262

state 260

    (55) CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .

    RETURNW         reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IDV             reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPW           reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IF              reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    SAYW            reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CC              reduce using rule 55 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)


state 261

    (138) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .

    RETURNW         reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IDV             reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IF              reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    SAYW            reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CC              reduce using rule 138 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)


state 262

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC CC

    OC              shift and go to state 263


state 263

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . BLOCKS2 CC
    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . CC
    (38) BLOCKS2 -> . CODE
    (39) BLOCKS2 -> . CODE BLOCKS2
    (40) CODE -> . RETURN
    (41) CODE -> . ASSIGNATION
    (42) CODE -> . LOOP
    (43) CODE -> . LOOPIF
    (44) CODE -> . CONDITION
    (45) CODE -> . ASK
    (46) CODE -> . SAY
    (47) CODE -> . CALLBOX
    (86) RETURN -> . RETURNW EXPRESSION PC
    (87) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (137) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (138) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (139) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (140) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (152) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (153) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (51) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (129) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (125) SAY -> . SAYW OP CONCAT CP PC
    (130) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (131) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC

    CC              shift and go to state 264
    RETURNW         shift and go to state 110
    IDV             shift and go to state 102
    LOOPW           shift and go to state 112
    LOOPIFW         shift and go to state 109
    IF              shift and go to state 111
    ASKUSER         shift and go to state 116
    SAYW            shift and go to state 98
    CALLBOXW        shift and go to state 103

    CODE                           shift and go to state 99
    RETURN                         shift and go to state 100
    SAY                            shift and go to state 104
    ASK                            shift and go to state 105
    CONDITION                      shift and go to state 106
    ASSIGNATION                    shift and go to state 107
    BLOCKS2                        shift and go to state 265
    CALLBOX                        shift and go to state 114
    LOOPIF                         shift and go to state 115
    LOOP                           shift and go to state 117

state 264

    (139) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .

    RETURNW         reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IDV             reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPW           reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPIFW         reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IF              reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    ASKUSER         reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    SAYW            reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CALLBOXW        reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CC              reduce using rule 139 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)


state 265

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 . CC

    CC              shift and go to state 266


state 266

    (137) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .

    RETURNW         reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IDV             reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IF              reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    SAYW            reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CC              reduce using rule 137 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 89 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 89 resolved as shift
WARNING: shift/reduce conflict for IDV in state 89 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 89 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 89 resolved as shift
WARNING: shift/reduce conflict for IF in state 89 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 89 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 89 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 89 resolved as shift
