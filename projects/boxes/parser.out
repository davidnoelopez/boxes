Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC BLOCKS METHODS CC
Rule 3     BOXES -> BOX OC VARS BLOCKS CC
Rule 4     BOXES -> BOX OC BLOCKS CC
Rule 5     VARS -> VARI
Rule 6     VARS -> VARF
Rule 7     VARS -> VARST
Rule 8     VARS -> VARL
Rule 9     VARF -> VARFSMALL VARF3 PC
Rule 10    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 11    VARF3 -> IDV EQUALS FLOAT
Rule 12    VARF3 -> IDV COMMA VARF3
Rule 13    VARF3 -> IDV
Rule 14    VARI -> VARISMALL VARI3 PC
Rule 15    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 16    VARI3 -> IDV EQUALS INT
Rule 17    VARI3 -> IDV COMMA VARI3
Rule 18    VARI3 -> IDV
Rule 19    VARST -> VARSTSMALL VARST3 PC
Rule 20    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 21    VARST3 -> IDV EQUALS STRING
Rule 22    VARST3 -> IDV COMMA VARST3
Rule 23    VARST3 -> IDV
Rule 24    VARL -> VARLSMALL VARL3 PC
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 26    VARL3 -> IDV EQUALS OB VARL4 CB VARL3
Rule 27    VARL4 -> CTE
Rule 28    VARL4 -> CTE COMMA VARL4
Rule 29    BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC
Rule 30    BLOCKS -> OC CC
Rule 31    BLOCKS2 -> CODE
Rule 32    BLOCKS2 -> CODE BLOCKS2
Rule 33    CODE -> RETURN
Rule 34    CODE -> VARS
Rule 35    CODE -> ASSIGNATION
Rule 36    CODE -> LOOP
Rule 37    CODE -> LOOPIF
Rule 38    CODE -> CONDITION
Rule 39    CODE -> ASK
Rule 40    CODE -> SAY
Rule 41    CODE -> CALLBOX
Rule 42    CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2
Rule 43    CONDITION -> IF OP STM CP OC CC CONDITION2
Rule 44    CONDITION -> IF OP STM CP OC BLOCKS2 CC
Rule 45    CONDITION -> IF OP STM CP OC CC
Rule 46    CONDITION2 -> ELSE OC BLOCKS2 CC
Rule 47    CONDITION2 -> ELSE OC CC
Rule 48    STM -> EXPRESSION STM2 EXPRESSION
Rule 49    STM -> EXPRESSION
Rule 50    STM2 -> GT
Rule 51    STM2 -> GTE
Rule 52    STM2 -> LT
Rule 53    STM2 -> LTE
Rule 54    STM2 -> DOUBLEEQUALS
Rule 55    STM2 -> LTGT
Rule 56    PARAM -> PARAM2 IDV
Rule 57    PARAM2 -> VARISMALL
Rule 58    PARAM2 -> VARSTSMALL
Rule 59    PARAM2 -> VARFSMALL
Rule 60    PARAM2 -> VARLSMALL
Rule 61    METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
Rule 62    METHODS -> METHODS2 IDM OP METHODS3 CP OC CC
Rule 63    METHODS2 -> RECURSIVEBOX
Rule 64    METHODS2 -> VOIDBOX
Rule 65    METHODS2 -> VARIBOX
Rule 66    METHODS2 -> VARFBOX
Rule 67    METHODS2 -> VARSBOX
Rule 68    METHODS2 -> VARLBOX
Rule 69    METHODS3 -> PARAM COMMA METHODS3
Rule 70    METHODS3 -> PARAM
Rule 71    RETURN -> RETURNW EQUALS PC
Rule 72    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 73    EXPRESSION -> OPER
Rule 74    EXPRESSION -> OPER PLUS EXPRESSION
Rule 75    EXPRESSION -> OPER MINUS EXPRESSION
Rule 76    OPER -> TERM
Rule 77    OPER -> TERM MULTIPLY OPER
Rule 78    OPER -> TERM DIVISION OPER
Rule 79    TERM -> OP EXPRESSION CP
Rule 80    TERM -> TERM2
Rule 81    TERM2 -> CTE
Rule 82    TERM2 -> PLUS CTE
Rule 83    TERM2 -> MINUS CTE
Rule 84    CTE -> INT
Rule 85    CTE -> FLOAT
Rule 86    CTE -> STRING
Rule 87    CTE -> IDV
Rule 88    CTE -> IDV OB INT CB
Rule 89    SAY -> SAYW OP CONCAT CP PC
Rule 90    CONCAT -> EXPRESSION DOT CONCAT
Rule 91    CONCAT -> EXPRESSION
Rule 92    ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 93    CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 94    PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 95    PARAMETERS -> EXPRESSION
Rule 96    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
Rule 97    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
Rule 98    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
Rule 99    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
Rule 100   LOOP2 -> INT
Rule 101   LOOP2 -> FLOAT
Rule 102   LOOP3 -> PLUS
Rule 103   LOOP3 -> MINUS
Rule 104   LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
Rule 105   LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC

Terminals, with rules where they appear

ASKUSER              : 92
BOX                  : 1 2 3 4
BY                   : 96 98
CALLBOXW             : 93
CB                   : 25 26 88
CC                   : 1 2 3 4 29 30 42 43 44 45 46 47 61 62 96 97 98 99 104 105
COMMA                : 10 12 15 17 20 22 28 69 92 93 94
CP                   : 29 42 43 44 45 61 62 79 89 92 93 96 97 98 99 104 105
DIVISION             : 78
DOT                  : 90
DOUBLEEQUALS         : 54
ELSE                 : 46 47
EQUALS               : 10 11 15 16 20 21 25 26 71 72
FLOAT                : 10 11 85 101
FROM                 : 96 97 98 99
GT                   : 50
GTE                  : 51
IDM                  : 61 62 93
IDV                  : 10 11 12 13 15 16 17 18 20 21 22 23 25 26 56 72 87 88 92 96 97 98 99
IF                   : 42 43 44 45
INT                  : 15 16 84 88 100
LOOPIFW              : 104 105
LOOPW                : 96 97 98 99
LT                   : 52
LTE                  : 53
LTGT                 : 55
MAINBOX              : 29
MINUS                : 75 83 103
MULTIPLY             : 77
OB                   : 25 26 88
OC                   : 1 2 3 4 29 30 42 43 44 45 46 47 61 62 96 97 98 99 104 105
OP                   : 29 42 43 44 45 61 62 79 89 92 93 96 97 98 99 104 105
PC                   : 9 14 19 24 71 72 89 92 93
PLUS                 : 74 82 102
RECURSIVEBOX         : 63
RETURNW              : 71
SAYW                 : 89
STRING               : 20 21 86 92
TO                   : 96 97 98 99
VARFBOX              : 66
VARFSMALL            : 9 59
VARIBOX              : 65
VARISMALL            : 14 57
VARLBOX              : 68
VARLSMALL            : 24 60
VARSBOX              : 67
VARSTSMALL           : 19 58
VOIDBOX              : 64
error                : 

Nonterminals, with rules where they appear

ASK                  : 39
ASSIGNATION          : 35
BLOCKS               : 1 2 3 4
BLOCKS2              : 29 32 42 44 46 61 96 97 104
BOXES                : 0
CALLBOX              : 41
CODE                 : 31 32
CONCAT               : 89 90
CONDITION            : 38
CONDITION2           : 42 43
CTE                  : 27 28 81 82 83
EXPRESSION           : 48 48 49 72 74 75 79 90 91 94 95 104 105
LOOP                 : 36
LOOP2                : 96 96 96 97 97 98 98 98 99 99
LOOP3                : 96 98
LOOPIF               : 37
METHODS              : 1 2
METHODS2             : 61 62
METHODS3             : 61 62 69
OPER                 : 73 74 75 77 78
PARAM                : 69 70
PARAM2               : 56
PARAMETERS           : 93 94
RETURN               : 33
SAY                  : 40
STM                  : 42 43 44 45
STM2                 : 48
TERM                 : 76 77 78
TERM2                : 80
VARF                 : 6
VARF3                : 9 10 12
VARI                 : 5
VARI3                : 14 15 17
VARL                 : 8
VARL3                : 24 26
VARL4                : 25 26 28
VARS                 : 1 3 34
VARST                : 7
VARST3               : 19 20 22

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS BLOCKS METHODS CC
    (2) BOXES -> . BOX OC BLOCKS METHODS CC
    (3) BOXES -> . BOX OC VARS BLOCKS CC
    (4) BOXES -> . BOX OC BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS BLOCKS METHODS CC
    (2) BOXES -> BOX . OC BLOCKS METHODS CC
    (3) BOXES -> BOX . OC VARS BLOCKS CC
    (4) BOXES -> BOX . OC BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS BLOCKS METHODS CC
    (2) BOXES -> BOX OC . BLOCKS METHODS CC
    (3) BOXES -> BOX OC . VARS BLOCKS CC
    (4) BOXES -> BOX OC . BLOCKS CC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (29) BLOCKS -> . MAINBOX OP CP OC BLOCKS2 CC
    (30) BLOCKS -> . OC CC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         shift and go to state 5
    OC              shift and go to state 15
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    BLOCKS                         shift and go to state 11
    VARS                           shift and go to state 4
    VARF                           shift and go to state 6
    VARST                          shift and go to state 12
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9

state 4

    (1) BOXES -> BOX OC VARS . BLOCKS METHODS CC
    (3) BOXES -> BOX OC VARS . BLOCKS CC
    (29) BLOCKS -> . MAINBOX OP CP OC BLOCKS2 CC
    (30) BLOCKS -> . OC CC

    MAINBOX         shift and go to state 5
    OC              shift and go to state 15

    BLOCKS                         shift and go to state 16

state 5

    (29) BLOCKS -> MAINBOX . OP CP OC BLOCKS2 CC

    OP              shift and go to state 17


state 6

    (6) VARS -> VARF .

    MAINBOX         reduce using rule 6 (VARS -> VARF .)
    OC              reduce using rule 6 (VARS -> VARF .)
    RETURNW         reduce using rule 6 (VARS -> VARF .)
    IDV             reduce using rule 6 (VARS -> VARF .)
    LOOPW           reduce using rule 6 (VARS -> VARF .)
    LOOPIFW         reduce using rule 6 (VARS -> VARF .)
    IF              reduce using rule 6 (VARS -> VARF .)
    ASKUSER         reduce using rule 6 (VARS -> VARF .)
    SAYW            reduce using rule 6 (VARS -> VARF .)
    CALLBOXW        reduce using rule 6 (VARS -> VARF .)
    VARISMALL       reduce using rule 6 (VARS -> VARF .)
    VARFSMALL       reduce using rule 6 (VARS -> VARF .)
    VARSTSMALL      reduce using rule 6 (VARS -> VARF .)
    VARLSMALL       reduce using rule 6 (VARS -> VARF .)
    CC              reduce using rule 6 (VARS -> VARF .)


state 7

    (8) VARS -> VARL .

    MAINBOX         reduce using rule 8 (VARS -> VARL .)
    OC              reduce using rule 8 (VARS -> VARL .)
    RETURNW         reduce using rule 8 (VARS -> VARL .)
    IDV             reduce using rule 8 (VARS -> VARL .)
    LOOPW           reduce using rule 8 (VARS -> VARL .)
    LOOPIFW         reduce using rule 8 (VARS -> VARL .)
    IF              reduce using rule 8 (VARS -> VARL .)
    ASKUSER         reduce using rule 8 (VARS -> VARL .)
    SAYW            reduce using rule 8 (VARS -> VARL .)
    CALLBOXW        reduce using rule 8 (VARS -> VARL .)
    VARISMALL       reduce using rule 8 (VARS -> VARL .)
    VARFSMALL       reduce using rule 8 (VARS -> VARL .)
    VARSTSMALL      reduce using rule 8 (VARS -> VARL .)
    VARLSMALL       reduce using rule 8 (VARS -> VARL .)
    CC              reduce using rule 8 (VARS -> VARL .)


state 8

    (24) VARL -> VARLSMALL . VARL3 PC
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB VARL3

    IDV             shift and go to state 19

    VARL3                          shift and go to state 18

state 9

    (5) VARS -> VARI .

    MAINBOX         reduce using rule 5 (VARS -> VARI .)
    OC              reduce using rule 5 (VARS -> VARI .)
    RETURNW         reduce using rule 5 (VARS -> VARI .)
    IDV             reduce using rule 5 (VARS -> VARI .)
    LOOPW           reduce using rule 5 (VARS -> VARI .)
    LOOPIFW         reduce using rule 5 (VARS -> VARI .)
    IF              reduce using rule 5 (VARS -> VARI .)
    ASKUSER         reduce using rule 5 (VARS -> VARI .)
    SAYW            reduce using rule 5 (VARS -> VARI .)
    CALLBOXW        reduce using rule 5 (VARS -> VARI .)
    VARISMALL       reduce using rule 5 (VARS -> VARI .)
    VARFSMALL       reduce using rule 5 (VARS -> VARI .)
    VARSTSMALL      reduce using rule 5 (VARS -> VARI .)
    VARLSMALL       reduce using rule 5 (VARS -> VARI .)
    CC              reduce using rule 5 (VARS -> VARI .)


state 10

    (19) VARST -> VARSTSMALL . VARST3 PC
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 20

state 11

    (2) BOXES -> BOX OC BLOCKS . METHODS CC
    (4) BOXES -> BOX OC BLOCKS . CC
    (61) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (63) METHODS2 -> . RECURSIVEBOX
    (64) METHODS2 -> . VOIDBOX
    (65) METHODS2 -> . VARIBOX
    (66) METHODS2 -> . VARFBOX
    (67) METHODS2 -> . VARSBOX
    (68) METHODS2 -> . VARLBOX

    CC              shift and go to state 24
    RECURSIVEBOX    shift and go to state 22
    VOIDBOX         shift and go to state 29
    VARIBOX         shift and go to state 25
    VARFBOX         shift and go to state 27
    VARSBOX         shift and go to state 28
    VARLBOX         shift and go to state 26

    METHODS2                       shift and go to state 30
    METHODS                        shift and go to state 23

state 12

    (7) VARS -> VARST .

    MAINBOX         reduce using rule 7 (VARS -> VARST .)
    OC              reduce using rule 7 (VARS -> VARST .)
    RETURNW         reduce using rule 7 (VARS -> VARST .)
    IDV             reduce using rule 7 (VARS -> VARST .)
    LOOPW           reduce using rule 7 (VARS -> VARST .)
    LOOPIFW         reduce using rule 7 (VARS -> VARST .)
    IF              reduce using rule 7 (VARS -> VARST .)
    ASKUSER         reduce using rule 7 (VARS -> VARST .)
    SAYW            reduce using rule 7 (VARS -> VARST .)
    CALLBOXW        reduce using rule 7 (VARS -> VARST .)
    VARISMALL       reduce using rule 7 (VARS -> VARST .)
    VARFSMALL       reduce using rule 7 (VARS -> VARST .)
    VARSTSMALL      reduce using rule 7 (VARS -> VARST .)
    VARLSMALL       reduce using rule 7 (VARS -> VARST .)
    CC              reduce using rule 7 (VARS -> VARST .)


state 13

    (14) VARI -> VARISMALL . VARI3 PC
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 31

    VARI3                          shift and go to state 32

state 14

    (9) VARF -> VARFSMALL . VARF3 PC
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 33

    VARF3                          shift and go to state 34

state 15

    (30) BLOCKS -> OC . CC

    CC              shift and go to state 35


state 16

    (1) BOXES -> BOX OC VARS BLOCKS . METHODS CC
    (3) BOXES -> BOX OC VARS BLOCKS . CC
    (61) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (63) METHODS2 -> . RECURSIVEBOX
    (64) METHODS2 -> . VOIDBOX
    (65) METHODS2 -> . VARIBOX
    (66) METHODS2 -> . VARFBOX
    (67) METHODS2 -> . VARSBOX
    (68) METHODS2 -> . VARLBOX

    CC              shift and go to state 37
    RECURSIVEBOX    shift and go to state 22
    VOIDBOX         shift and go to state 29
    VARIBOX         shift and go to state 25
    VARFBOX         shift and go to state 27
    VARSBOX         shift and go to state 28
    VARLBOX         shift and go to state 26

    METHODS                        shift and go to state 36
    METHODS2                       shift and go to state 30

state 17

    (29) BLOCKS -> MAINBOX OP . CP OC BLOCKS2 CC

    CP              shift and go to state 38


state 18

    (24) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 39


state 19

    (25) VARL3 -> IDV . EQUALS OB VARL4 CB
    (26) VARL3 -> IDV . EQUALS OB VARL4 CB VARL3

    EQUALS          shift and go to state 40


state 20

    (19) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 41


state 21

    (20) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (21) VARST3 -> IDV . EQUALS STRING
    (22) VARST3 -> IDV . COMMA VARST3
    (23) VARST3 -> IDV .

    EQUALS          shift and go to state 43
    COMMA           shift and go to state 42
    PC              reduce using rule 23 (VARST3 -> IDV .)


state 22

    (63) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 63 (METHODS2 -> RECURSIVEBOX .)


state 23

    (2) BOXES -> BOX OC BLOCKS METHODS . CC

    CC              shift and go to state 44


state 24

    (4) BOXES -> BOX OC BLOCKS CC .

    $end            reduce using rule 4 (BOXES -> BOX OC BLOCKS CC .)


state 25

    (65) METHODS2 -> VARIBOX .

    IDM             reduce using rule 65 (METHODS2 -> VARIBOX .)


state 26

    (68) METHODS2 -> VARLBOX .

    IDM             reduce using rule 68 (METHODS2 -> VARLBOX .)


state 27

    (66) METHODS2 -> VARFBOX .

    IDM             reduce using rule 66 (METHODS2 -> VARFBOX .)


state 28

    (67) METHODS2 -> VARSBOX .

    IDM             reduce using rule 67 (METHODS2 -> VARSBOX .)


state 29

    (64) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 64 (METHODS2 -> VOIDBOX .)


state 30

    (61) METHODS -> METHODS2 . IDM OP METHODS3 CP OC BLOCKS2 CC
    (62) METHODS -> METHODS2 . IDM OP METHODS3 CP OC CC

    IDM             shift and go to state 45


state 31

    (15) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (16) VARI3 -> IDV . EQUALS INT
    (17) VARI3 -> IDV . COMMA VARI3
    (18) VARI3 -> IDV .

    EQUALS          shift and go to state 47
    COMMA           shift and go to state 46
    PC              reduce using rule 18 (VARI3 -> IDV .)


state 32

    (14) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 48


state 33

    (10) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> IDV . EQUALS FLOAT
    (12) VARF3 -> IDV . COMMA VARF3
    (13) VARF3 -> IDV .

    EQUALS          shift and go to state 50
    COMMA           shift and go to state 49
    PC              reduce using rule 13 (VARF3 -> IDV .)


state 34

    (9) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 51


state 35

    (30) BLOCKS -> OC CC .

    CC              reduce using rule 30 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 30 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 30 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 30 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 30 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 30 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 30 (BLOCKS -> OC CC .)


state 36

    (1) BOXES -> BOX OC VARS BLOCKS METHODS . CC

    CC              shift and go to state 52


state 37

    (3) BOXES -> BOX OC VARS BLOCKS CC .

    $end            reduce using rule 3 (BOXES -> BOX OC VARS BLOCKS CC .)


state 38

    (29) BLOCKS -> MAINBOX OP CP . OC BLOCKS2 CC

    OC              shift and go to state 53


state 39

    (24) VARL -> VARLSMALL VARL3 PC .

    RETURNW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARISMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    OC              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)


state 40

    (25) VARL3 -> IDV EQUALS . OB VARL4 CB
    (26) VARL3 -> IDV EQUALS . OB VARL4 CB VARL3

    OB              shift and go to state 54


state 41

    (19) VARST -> VARSTSMALL VARST3 PC .

    RETURNW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARISMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    OC              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)


state 42

    (22) VARST3 -> IDV COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 55

state 43

    (20) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (21) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 56


state 44

    (2) BOXES -> BOX OC BLOCKS METHODS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC BLOCKS METHODS CC .)


state 45

    (61) METHODS -> METHODS2 IDM . OP METHODS3 CP OC BLOCKS2 CC
    (62) METHODS -> METHODS2 IDM . OP METHODS3 CP OC CC

    OP              shift and go to state 57


state 46

    (17) VARI3 -> IDV COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 31

    VARI3                          shift and go to state 58

state 47

    (15) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (16) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 59


state 48

    (14) VARI -> VARISMALL VARI3 PC .

    RETURNW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARISMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    OC              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)


state 49

    (12) VARF3 -> IDV COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 33

    VARF3                          shift and go to state 60

state 50

    (10) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (11) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 61


state 51

    (9) VARF -> VARFSMALL VARF3 PC .

    RETURNW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARISMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    OC              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)


state 52

    (1) BOXES -> BOX OC VARS BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS BLOCKS METHODS CC .)


state 53

    (29) BLOCKS -> MAINBOX OP CP OC . BLOCKS2 CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 76
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 54

    (25) VARL3 -> IDV EQUALS OB . VARL4 CB
    (26) VARL3 -> IDV EQUALS OB . VARL4 CB VARL3
    (27) VARL4 -> . CTE
    (28) VARL4 -> . CTE COMMA VARL4
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    VARL4                          shift and go to state 82
    CTE                            shift and go to state 85

state 55

    (22) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 22 (VARST3 -> IDV COMMA VARST3 .)


state 56

    (20) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (21) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 87
    PC              reduce using rule 21 (VARST3 -> IDV EQUALS STRING .)


state 57

    (61) METHODS -> METHODS2 IDM OP . METHODS3 CP OC BLOCKS2 CC
    (62) METHODS -> METHODS2 IDM OP . METHODS3 CP OC CC
    (69) METHODS3 -> . PARAM COMMA METHODS3
    (70) METHODS3 -> . PARAM
    (56) PARAM -> . PARAM2 IDV
    (57) PARAM2 -> . VARISMALL
    (58) PARAM2 -> . VARSTSMALL
    (59) PARAM2 -> . VARFSMALL
    (60) PARAM2 -> . VARLSMALL

    VARISMALL       shift and go to state 89
    VARSTSMALL      shift and go to state 90
    VARFSMALL       shift and go to state 92
    VARLSMALL       shift and go to state 88

    METHODS3                       shift and go to state 94
    PARAM                          shift and go to state 91
    PARAM2                         shift and go to state 93

state 58

    (17) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 17 (VARI3 -> IDV COMMA VARI3 .)


state 59

    (15) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (16) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 95
    PC              reduce using rule 16 (VARI3 -> IDV EQUALS INT .)


state 60

    (12) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 12 (VARF3 -> IDV COMMA VARF3 .)


state 61

    (10) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (11) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 96
    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT .)


state 62

    (89) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 97


state 63

    (31) BLOCKS2 -> CODE .
    (32) BLOCKS2 -> CODE . BLOCKS2
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              reduce using rule 31 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 98
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 64

    (33) CODE -> RETURN .

    RETURNW         reduce using rule 33 (CODE -> RETURN .)
    IDV             reduce using rule 33 (CODE -> RETURN .)
    LOOPW           reduce using rule 33 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 33 (CODE -> RETURN .)
    IF              reduce using rule 33 (CODE -> RETURN .)
    ASKUSER         reduce using rule 33 (CODE -> RETURN .)
    SAYW            reduce using rule 33 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 33 (CODE -> RETURN .)
    VARISMALL       reduce using rule 33 (CODE -> RETURN .)
    VARFSMALL       reduce using rule 33 (CODE -> RETURN .)
    VARSTSMALL      reduce using rule 33 (CODE -> RETURN .)
    VARLSMALL       reduce using rule 33 (CODE -> RETURN .)
    CC              reduce using rule 33 (CODE -> RETURN .)


state 65

    (34) CODE -> VARS .

    RETURNW         reduce using rule 34 (CODE -> VARS .)
    IDV             reduce using rule 34 (CODE -> VARS .)
    LOOPW           reduce using rule 34 (CODE -> VARS .)
    LOOPIFW         reduce using rule 34 (CODE -> VARS .)
    IF              reduce using rule 34 (CODE -> VARS .)
    ASKUSER         reduce using rule 34 (CODE -> VARS .)
    SAYW            reduce using rule 34 (CODE -> VARS .)
    CALLBOXW        reduce using rule 34 (CODE -> VARS .)
    VARISMALL       reduce using rule 34 (CODE -> VARS .)
    VARFSMALL       reduce using rule 34 (CODE -> VARS .)
    VARSTSMALL      reduce using rule 34 (CODE -> VARS .)
    VARLSMALL       reduce using rule 34 (CODE -> VARS .)
    CC              reduce using rule 34 (CODE -> VARS .)


state 66

    (72) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 99


state 67

    (40) CODE -> SAY .

    RETURNW         reduce using rule 40 (CODE -> SAY .)
    IDV             reduce using rule 40 (CODE -> SAY .)
    LOOPW           reduce using rule 40 (CODE -> SAY .)
    LOOPIFW         reduce using rule 40 (CODE -> SAY .)
    IF              reduce using rule 40 (CODE -> SAY .)
    ASKUSER         reduce using rule 40 (CODE -> SAY .)
    SAYW            reduce using rule 40 (CODE -> SAY .)
    CALLBOXW        reduce using rule 40 (CODE -> SAY .)
    VARISMALL       reduce using rule 40 (CODE -> SAY .)
    VARFSMALL       reduce using rule 40 (CODE -> SAY .)
    VARSTSMALL      reduce using rule 40 (CODE -> SAY .)
    VARLSMALL       reduce using rule 40 (CODE -> SAY .)
    CC              reduce using rule 40 (CODE -> SAY .)


state 68

    (39) CODE -> ASK .

    RETURNW         reduce using rule 39 (CODE -> ASK .)
    IDV             reduce using rule 39 (CODE -> ASK .)
    LOOPW           reduce using rule 39 (CODE -> ASK .)
    LOOPIFW         reduce using rule 39 (CODE -> ASK .)
    IF              reduce using rule 39 (CODE -> ASK .)
    ASKUSER         reduce using rule 39 (CODE -> ASK .)
    SAYW            reduce using rule 39 (CODE -> ASK .)
    CALLBOXW        reduce using rule 39 (CODE -> ASK .)
    VARISMALL       reduce using rule 39 (CODE -> ASK .)
    VARFSMALL       reduce using rule 39 (CODE -> ASK .)
    VARSTSMALL      reduce using rule 39 (CODE -> ASK .)
    VARLSMALL       reduce using rule 39 (CODE -> ASK .)
    CC              reduce using rule 39 (CODE -> ASK .)


state 69

    (38) CODE -> CONDITION .

    RETURNW         reduce using rule 38 (CODE -> CONDITION .)
    IDV             reduce using rule 38 (CODE -> CONDITION .)
    LOOPW           reduce using rule 38 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 38 (CODE -> CONDITION .)
    IF              reduce using rule 38 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 38 (CODE -> CONDITION .)
    SAYW            reduce using rule 38 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 38 (CODE -> CONDITION .)
    VARISMALL       reduce using rule 38 (CODE -> CONDITION .)
    VARFSMALL       reduce using rule 38 (CODE -> CONDITION .)
    VARSTSMALL      reduce using rule 38 (CODE -> CONDITION .)
    VARLSMALL       reduce using rule 38 (CODE -> CONDITION .)
    CC              reduce using rule 38 (CODE -> CONDITION .)


state 70

    (35) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 35 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 35 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 35 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 35 (CODE -> ASSIGNATION .)
    IF              reduce using rule 35 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 35 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 35 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 35 (CODE -> ASSIGNATION .)
    VARISMALL       reduce using rule 35 (CODE -> ASSIGNATION .)
    VARFSMALL       reduce using rule 35 (CODE -> ASSIGNATION .)
    VARSTSMALL      reduce using rule 35 (CODE -> ASSIGNATION .)
    VARLSMALL       reduce using rule 35 (CODE -> ASSIGNATION .)
    CC              reduce using rule 35 (CODE -> ASSIGNATION .)


state 71

    (93) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 100


state 72

    (104) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC CC

    OP              shift and go to state 101


state 73

    (71) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 102


state 74

    (42) CONDITION -> IF . OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF . OP STM CP OC CC CONDITION2
    (44) CONDITION -> IF . OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> IF . OP STM CP OC CC

    OP              shift and go to state 103


state 75

    (96) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC CC

    OP              shift and go to state 104


state 76

    (29) BLOCKS -> MAINBOX OP CP OC BLOCKS2 . CC

    CC              shift and go to state 105


state 77

    (41) CODE -> CALLBOX .

    RETURNW         reduce using rule 41 (CODE -> CALLBOX .)
    IDV             reduce using rule 41 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 41 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 41 (CODE -> CALLBOX .)
    IF              reduce using rule 41 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 41 (CODE -> CALLBOX .)
    SAYW            reduce using rule 41 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 41 (CODE -> CALLBOX .)
    VARISMALL       reduce using rule 41 (CODE -> CALLBOX .)
    VARFSMALL       reduce using rule 41 (CODE -> CALLBOX .)
    VARSTSMALL      reduce using rule 41 (CODE -> CALLBOX .)
    VARLSMALL       reduce using rule 41 (CODE -> CALLBOX .)
    CC              reduce using rule 41 (CODE -> CALLBOX .)


state 78

    (37) CODE -> LOOPIF .

    RETURNW         reduce using rule 37 (CODE -> LOOPIF .)
    IDV             reduce using rule 37 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 37 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 37 (CODE -> LOOPIF .)
    IF              reduce using rule 37 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 37 (CODE -> LOOPIF .)
    SAYW            reduce using rule 37 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 37 (CODE -> LOOPIF .)
    VARISMALL       reduce using rule 37 (CODE -> LOOPIF .)
    VARFSMALL       reduce using rule 37 (CODE -> LOOPIF .)
    VARSTSMALL      reduce using rule 37 (CODE -> LOOPIF .)
    VARLSMALL       reduce using rule 37 (CODE -> LOOPIF .)
    CC              reduce using rule 37 (CODE -> LOOPIF .)


state 79

    (92) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 106


state 80

    (36) CODE -> LOOP .

    RETURNW         reduce using rule 36 (CODE -> LOOP .)
    IDV             reduce using rule 36 (CODE -> LOOP .)
    LOOPW           reduce using rule 36 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 36 (CODE -> LOOP .)
    IF              reduce using rule 36 (CODE -> LOOP .)
    ASKUSER         reduce using rule 36 (CODE -> LOOP .)
    SAYW            reduce using rule 36 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 36 (CODE -> LOOP .)
    VARISMALL       reduce using rule 36 (CODE -> LOOP .)
    VARFSMALL       reduce using rule 36 (CODE -> LOOP .)
    VARSTSMALL      reduce using rule 36 (CODE -> LOOP .)
    VARLSMALL       reduce using rule 36 (CODE -> LOOP .)
    CC              reduce using rule 36 (CODE -> LOOP .)


state 81

    (86) CTE -> STRING .

    MULTIPLY        reduce using rule 86 (CTE -> STRING .)
    DIVISION        reduce using rule 86 (CTE -> STRING .)
    PLUS            reduce using rule 86 (CTE -> STRING .)
    MINUS           reduce using rule 86 (CTE -> STRING .)
    DOT             reduce using rule 86 (CTE -> STRING .)
    CP              reduce using rule 86 (CTE -> STRING .)
    PC              reduce using rule 86 (CTE -> STRING .)
    GT              reduce using rule 86 (CTE -> STRING .)
    GTE             reduce using rule 86 (CTE -> STRING .)
    LT              reduce using rule 86 (CTE -> STRING .)
    LTE             reduce using rule 86 (CTE -> STRING .)
    DOUBLEEQUALS    reduce using rule 86 (CTE -> STRING .)
    LTGT            reduce using rule 86 (CTE -> STRING .)
    COMMA           reduce using rule 86 (CTE -> STRING .)
    CB              reduce using rule 86 (CTE -> STRING .)


state 82

    (25) VARL3 -> IDV EQUALS OB VARL4 . CB
    (26) VARL3 -> IDV EQUALS OB VARL4 . CB VARL3

    CB              shift and go to state 107


state 83

    (87) CTE -> IDV .
    (88) CTE -> IDV . OB INT CB

    MULTIPLY        reduce using rule 87 (CTE -> IDV .)
    DIVISION        reduce using rule 87 (CTE -> IDV .)
    PLUS            reduce using rule 87 (CTE -> IDV .)
    MINUS           reduce using rule 87 (CTE -> IDV .)
    DOT             reduce using rule 87 (CTE -> IDV .)
    CP              reduce using rule 87 (CTE -> IDV .)
    PC              reduce using rule 87 (CTE -> IDV .)
    GT              reduce using rule 87 (CTE -> IDV .)
    GTE             reduce using rule 87 (CTE -> IDV .)
    LT              reduce using rule 87 (CTE -> IDV .)
    LTE             reduce using rule 87 (CTE -> IDV .)
    DOUBLEEQUALS    reduce using rule 87 (CTE -> IDV .)
    LTGT            reduce using rule 87 (CTE -> IDV .)
    COMMA           reduce using rule 87 (CTE -> IDV .)
    CB              reduce using rule 87 (CTE -> IDV .)
    OB              shift and go to state 108


state 84

    (85) CTE -> FLOAT .

    MULTIPLY        reduce using rule 85 (CTE -> FLOAT .)
    DIVISION        reduce using rule 85 (CTE -> FLOAT .)
    PLUS            reduce using rule 85 (CTE -> FLOAT .)
    MINUS           reduce using rule 85 (CTE -> FLOAT .)
    DOT             reduce using rule 85 (CTE -> FLOAT .)
    CP              reduce using rule 85 (CTE -> FLOAT .)
    PC              reduce using rule 85 (CTE -> FLOAT .)
    GT              reduce using rule 85 (CTE -> FLOAT .)
    GTE             reduce using rule 85 (CTE -> FLOAT .)
    LT              reduce using rule 85 (CTE -> FLOAT .)
    LTE             reduce using rule 85 (CTE -> FLOAT .)
    DOUBLEEQUALS    reduce using rule 85 (CTE -> FLOAT .)
    LTGT            reduce using rule 85 (CTE -> FLOAT .)
    COMMA           reduce using rule 85 (CTE -> FLOAT .)
    CB              reduce using rule 85 (CTE -> FLOAT .)


state 85

    (27) VARL4 -> CTE .
    (28) VARL4 -> CTE . COMMA VARL4

    CB              reduce using rule 27 (VARL4 -> CTE .)
    COMMA           shift and go to state 109


state 86

    (84) CTE -> INT .

    MULTIPLY        reduce using rule 84 (CTE -> INT .)
    DIVISION        reduce using rule 84 (CTE -> INT .)
    PLUS            reduce using rule 84 (CTE -> INT .)
    MINUS           reduce using rule 84 (CTE -> INT .)
    DOT             reduce using rule 84 (CTE -> INT .)
    CP              reduce using rule 84 (CTE -> INT .)
    PC              reduce using rule 84 (CTE -> INT .)
    GT              reduce using rule 84 (CTE -> INT .)
    GTE             reduce using rule 84 (CTE -> INT .)
    LT              reduce using rule 84 (CTE -> INT .)
    LTE             reduce using rule 84 (CTE -> INT .)
    DOUBLEEQUALS    reduce using rule 84 (CTE -> INT .)
    LTGT            reduce using rule 84 (CTE -> INT .)
    COMMA           reduce using rule 84 (CTE -> INT .)
    CB              reduce using rule 84 (CTE -> INT .)


state 87

    (20) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 21

    VARST3                         shift and go to state 110

state 88

    (60) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 60 (PARAM2 -> VARLSMALL .)


state 89

    (57) PARAM2 -> VARISMALL .

    IDV             reduce using rule 57 (PARAM2 -> VARISMALL .)


state 90

    (58) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 58 (PARAM2 -> VARSTSMALL .)


state 91

    (69) METHODS3 -> PARAM . COMMA METHODS3
    (70) METHODS3 -> PARAM .

    COMMA           shift and go to state 111
    CP              reduce using rule 70 (METHODS3 -> PARAM .)


state 92

    (59) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 59 (PARAM2 -> VARFSMALL .)


state 93

    (56) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 112


state 94

    (61) METHODS -> METHODS2 IDM OP METHODS3 . CP OC BLOCKS2 CC
    (62) METHODS -> METHODS2 IDM OP METHODS3 . CP OC CC

    CP              shift and go to state 113


state 95

    (15) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 31

    VARI3                          shift and go to state 114

state 96

    (10) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 33

    VARF3                          shift and go to state 115

state 97

    (89) SAY -> SAYW OP . CONCAT CP PC
    (90) CONCAT -> . EXPRESSION DOT CONCAT
    (91) CONCAT -> . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 121
    CONCAT                         shift and go to state 123

state 98

    (32) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 32 (BLOCKS2 -> CODE BLOCKS2 .)


state 99

    (72) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    EXPRESSION                     shift and go to state 125
    TERM2                          shift and go to state 118

state 100

    (93) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 126


state 101

    (104) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC CC
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 127

state 102

    (71) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 128


state 103

    (42) CONDITION -> IF OP . STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP . STM CP OC CC CONDITION2
    (44) CONDITION -> IF OP . STM CP OC BLOCKS2 CC
    (45) CONDITION -> IF OP . STM CP OC CC
    (48) STM -> . EXPRESSION STM2 EXPRESSION
    (49) STM -> . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    STM                            shift and go to state 130
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 129

state 104

    (96) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC CC

    IDV             shift and go to state 131


state 105

    (29) BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .

    CC              reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 29 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)


state 106

    (92) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 132


state 107

    (25) VARL3 -> IDV EQUALS OB VARL4 CB .
    (26) VARL3 -> IDV EQUALS OB VARL4 CB . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB VARL3

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    IDV             shift and go to state 19

    VARL3                          shift and go to state 133

state 108

    (88) CTE -> IDV OB . INT CB

    INT             shift and go to state 134


state 109

    (28) VARL4 -> CTE COMMA . VARL4
    (27) VARL4 -> . CTE
    (28) VARL4 -> . CTE COMMA VARL4
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    CTE                            shift and go to state 85
    VARL4                          shift and go to state 135

state 110

    (20) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 111

    (69) METHODS3 -> PARAM COMMA . METHODS3
    (69) METHODS3 -> . PARAM COMMA METHODS3
    (70) METHODS3 -> . PARAM
    (56) PARAM -> . PARAM2 IDV
    (57) PARAM2 -> . VARISMALL
    (58) PARAM2 -> . VARSTSMALL
    (59) PARAM2 -> . VARFSMALL
    (60) PARAM2 -> . VARLSMALL

    VARISMALL       shift and go to state 89
    VARSTSMALL      shift and go to state 90
    VARFSMALL       shift and go to state 92
    VARLSMALL       shift and go to state 88

    METHODS3                       shift and go to state 136
    PARAM                          shift and go to state 91
    PARAM2                         shift and go to state 93

state 112

    (56) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 56 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 56 (PARAM -> PARAM2 IDV .)


state 113

    (61) METHODS -> METHODS2 IDM OP METHODS3 CP . OC BLOCKS2 CC
    (62) METHODS -> METHODS2 IDM OP METHODS3 CP . OC CC

    OC              shift and go to state 137


state 114

    (15) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 115

    (10) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 116

    (73) EXPRESSION -> OPER .
    (74) EXPRESSION -> OPER . PLUS EXPRESSION
    (75) EXPRESSION -> OPER . MINUS EXPRESSION

    COMMA           reduce using rule 73 (EXPRESSION -> OPER .)
    CP              reduce using rule 73 (EXPRESSION -> OPER .)
    DOT             reduce using rule 73 (EXPRESSION -> OPER .)
    PC              reduce using rule 73 (EXPRESSION -> OPER .)
    GT              reduce using rule 73 (EXPRESSION -> OPER .)
    GTE             reduce using rule 73 (EXPRESSION -> OPER .)
    LT              reduce using rule 73 (EXPRESSION -> OPER .)
    LTE             reduce using rule 73 (EXPRESSION -> OPER .)
    DOUBLEEQUALS    reduce using rule 73 (EXPRESSION -> OPER .)
    LTGT            reduce using rule 73 (EXPRESSION -> OPER .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139


state 117

    (76) OPER -> TERM .
    (77) OPER -> TERM . MULTIPLY OPER
    (78) OPER -> TERM . DIVISION OPER

    PLUS            reduce using rule 76 (OPER -> TERM .)
    MINUS           reduce using rule 76 (OPER -> TERM .)
    CP              reduce using rule 76 (OPER -> TERM .)
    COMMA           reduce using rule 76 (OPER -> TERM .)
    DOT             reduce using rule 76 (OPER -> TERM .)
    PC              reduce using rule 76 (OPER -> TERM .)
    GT              reduce using rule 76 (OPER -> TERM .)
    GTE             reduce using rule 76 (OPER -> TERM .)
    LT              reduce using rule 76 (OPER -> TERM .)
    LTE             reduce using rule 76 (OPER -> TERM .)
    DOUBLEEQUALS    reduce using rule 76 (OPER -> TERM .)
    LTGT            reduce using rule 76 (OPER -> TERM .)
    MULTIPLY        shift and go to state 140
    DIVISION        shift and go to state 141


state 118

    (80) TERM -> TERM2 .

    MULTIPLY        reduce using rule 80 (TERM -> TERM2 .)
    DIVISION        reduce using rule 80 (TERM -> TERM2 .)
    PLUS            reduce using rule 80 (TERM -> TERM2 .)
    MINUS           reduce using rule 80 (TERM -> TERM2 .)
    COMMA           reduce using rule 80 (TERM -> TERM2 .)
    CP              reduce using rule 80 (TERM -> TERM2 .)
    DOT             reduce using rule 80 (TERM -> TERM2 .)
    PC              reduce using rule 80 (TERM -> TERM2 .)
    GT              reduce using rule 80 (TERM -> TERM2 .)
    GTE             reduce using rule 80 (TERM -> TERM2 .)
    LT              reduce using rule 80 (TERM -> TERM2 .)
    LTE             reduce using rule 80 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 80 (TERM -> TERM2 .)
    LTGT            reduce using rule 80 (TERM -> TERM2 .)


state 119

    (81) TERM2 -> CTE .

    MULTIPLY        reduce using rule 81 (TERM2 -> CTE .)
    DIVISION        reduce using rule 81 (TERM2 -> CTE .)
    PLUS            reduce using rule 81 (TERM2 -> CTE .)
    MINUS           reduce using rule 81 (TERM2 -> CTE .)
    DOT             reduce using rule 81 (TERM2 -> CTE .)
    CP              reduce using rule 81 (TERM2 -> CTE .)
    PC              reduce using rule 81 (TERM2 -> CTE .)
    GT              reduce using rule 81 (TERM2 -> CTE .)
    GTE             reduce using rule 81 (TERM2 -> CTE .)
    LT              reduce using rule 81 (TERM2 -> CTE .)
    LTE             reduce using rule 81 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 81 (TERM2 -> CTE .)
    LTGT            reduce using rule 81 (TERM2 -> CTE .)
    COMMA           reduce using rule 81 (TERM2 -> CTE .)


state 120

    (82) TERM2 -> PLUS . CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    CTE                            shift and go to state 142

state 121

    (90) CONCAT -> EXPRESSION . DOT CONCAT
    (91) CONCAT -> EXPRESSION .

    DOT             shift and go to state 143
    CP              reduce using rule 91 (CONCAT -> EXPRESSION .)


state 122

    (83) TERM2 -> MINUS . CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    CTE                            shift and go to state 144

state 123

    (89) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 145


state 124

    (79) TERM -> OP . EXPRESSION CP
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    EXPRESSION                     shift and go to state 146
    TERM2                          shift and go to state 118

state 125

    (72) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 147


state 126

    (93) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 148


state 127

    (104) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC BLOCKS2 CC
    (105) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC CC

    CP              shift and go to state 149


state 128

    (71) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    VARISMALL       reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    VARFSMALL       reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    VARSTSMALL      reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    VARLSMALL       reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 71 (RETURN -> RETURNW EQUALS PC .)


state 129

    (48) STM -> EXPRESSION . STM2 EXPRESSION
    (49) STM -> EXPRESSION .
    (50) STM2 -> . GT
    (51) STM2 -> . GTE
    (52) STM2 -> . LT
    (53) STM2 -> . LTE
    (54) STM2 -> . DOUBLEEQUALS
    (55) STM2 -> . LTGT

    CP              reduce using rule 49 (STM -> EXPRESSION .)
    GT              shift and go to state 150
    GTE             shift and go to state 151
    LT              shift and go to state 153
    LTE             shift and go to state 155
    DOUBLEEQUALS    shift and go to state 156
    LTGT            shift and go to state 154

    STM2                           shift and go to state 152

state 130

    (42) CONDITION -> IF OP STM . CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM . CP OC CC CONDITION2
    (44) CONDITION -> IF OP STM . CP OC BLOCKS2 CC
    (45) CONDITION -> IF OP STM . CP OC CC

    CP              shift and go to state 157


state 131

    (96) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC CC

    FROM            shift and go to state 158


state 132

    (92) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 159


state 133

    (26) VARL3 -> IDV EQUALS OB VARL4 CB VARL3 .

    PC              reduce using rule 26 (VARL3 -> IDV EQUALS OB VARL4 CB VARL3 .)


state 134

    (88) CTE -> IDV OB INT . CB

    CB              shift and go to state 160


state 135

    (28) VARL4 -> CTE COMMA VARL4 .

    CB              reduce using rule 28 (VARL4 -> CTE COMMA VARL4 .)


state 136

    (69) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 69 (METHODS3 -> PARAM COMMA METHODS3 .)


state 137

    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC . BLOCKS2 CC
    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 161
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 162
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 138

    (74) EXPRESSION -> OPER PLUS . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    EXPRESSION                     shift and go to state 163
    TERM2                          shift and go to state 118

state 139

    (75) EXPRESSION -> OPER MINUS . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    EXPRESSION                     shift and go to state 164
    TERM2                          shift and go to state 118

state 140

    (77) OPER -> TERM MULTIPLY . OPER
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 165
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118

state 141

    (78) OPER -> TERM DIVISION . OPER
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 166
    CTE                            shift and go to state 119
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118

state 142

    (82) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 82 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 82 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 82 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 82 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 82 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 82 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 82 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 82 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 82 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 82 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 82 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 82 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 82 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 82 (TERM2 -> PLUS CTE .)


state 143

    (90) CONCAT -> EXPRESSION DOT . CONCAT
    (90) CONCAT -> . EXPRESSION DOT CONCAT
    (91) CONCAT -> . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 121
    CONCAT                         shift and go to state 167

state 144

    (83) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 83 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 83 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 83 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 83 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 83 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 83 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 83 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 83 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 83 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 83 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 83 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 83 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 83 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 83 (TERM2 -> MINUS CTE .)


state 145

    (89) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 168


state 146

    (79) TERM -> OP EXPRESSION . CP

    CP              shift and go to state 169


state 147

    (72) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    VARISMALL       reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    VARFSMALL       reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    VARSTSMALL      reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    VARLSMALL       reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 72 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 148

    (93) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (94) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (95) PARAMETERS -> . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    PARAMETERS                     shift and go to state 170
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 171

state 149

    (104) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC BLOCKS2 CC
    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC CC

    OC              shift and go to state 172


state 150

    (50) STM2 -> GT .

    OP              reduce using rule 50 (STM2 -> GT .)
    PLUS            reduce using rule 50 (STM2 -> GT .)
    MINUS           reduce using rule 50 (STM2 -> GT .)
    INT             reduce using rule 50 (STM2 -> GT .)
    FLOAT           reduce using rule 50 (STM2 -> GT .)
    STRING          reduce using rule 50 (STM2 -> GT .)
    IDV             reduce using rule 50 (STM2 -> GT .)


state 151

    (51) STM2 -> GTE .

    OP              reduce using rule 51 (STM2 -> GTE .)
    PLUS            reduce using rule 51 (STM2 -> GTE .)
    MINUS           reduce using rule 51 (STM2 -> GTE .)
    INT             reduce using rule 51 (STM2 -> GTE .)
    FLOAT           reduce using rule 51 (STM2 -> GTE .)
    STRING          reduce using rule 51 (STM2 -> GTE .)
    IDV             reduce using rule 51 (STM2 -> GTE .)


state 152

    (48) STM -> EXPRESSION STM2 . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 173

state 153

    (52) STM2 -> LT .

    OP              reduce using rule 52 (STM2 -> LT .)
    PLUS            reduce using rule 52 (STM2 -> LT .)
    MINUS           reduce using rule 52 (STM2 -> LT .)
    INT             reduce using rule 52 (STM2 -> LT .)
    FLOAT           reduce using rule 52 (STM2 -> LT .)
    STRING          reduce using rule 52 (STM2 -> LT .)
    IDV             reduce using rule 52 (STM2 -> LT .)


state 154

    (55) STM2 -> LTGT .

    OP              reduce using rule 55 (STM2 -> LTGT .)
    PLUS            reduce using rule 55 (STM2 -> LTGT .)
    MINUS           reduce using rule 55 (STM2 -> LTGT .)
    INT             reduce using rule 55 (STM2 -> LTGT .)
    FLOAT           reduce using rule 55 (STM2 -> LTGT .)
    STRING          reduce using rule 55 (STM2 -> LTGT .)
    IDV             reduce using rule 55 (STM2 -> LTGT .)


state 155

    (53) STM2 -> LTE .

    OP              reduce using rule 53 (STM2 -> LTE .)
    PLUS            reduce using rule 53 (STM2 -> LTE .)
    MINUS           reduce using rule 53 (STM2 -> LTE .)
    INT             reduce using rule 53 (STM2 -> LTE .)
    FLOAT           reduce using rule 53 (STM2 -> LTE .)
    STRING          reduce using rule 53 (STM2 -> LTE .)
    IDV             reduce using rule 53 (STM2 -> LTE .)


state 156

    (54) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 54 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 54 (STM2 -> DOUBLEEQUALS .)


state 157

    (42) CONDITION -> IF OP STM CP . OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM CP . OC CC CONDITION2
    (44) CONDITION -> IF OP STM CP . OC BLOCKS2 CC
    (45) CONDITION -> IF OP STM CP . OC CC

    OC              shift and go to state 174


state 158

    (96) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC CC
    (100) LOOP2 -> . INT
    (101) LOOP2 -> . FLOAT

    INT             shift and go to state 176
    FLOAT           shift and go to state 175

    LOOP2                          shift and go to state 177

state 159

    (92) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 178


state 160

    (88) CTE -> IDV OB INT CB .

    MULTIPLY        reduce using rule 88 (CTE -> IDV OB INT CB .)
    DIVISION        reduce using rule 88 (CTE -> IDV OB INT CB .)
    PLUS            reduce using rule 88 (CTE -> IDV OB INT CB .)
    MINUS           reduce using rule 88 (CTE -> IDV OB INT CB .)
    DOT             reduce using rule 88 (CTE -> IDV OB INT CB .)
    CP              reduce using rule 88 (CTE -> IDV OB INT CB .)
    PC              reduce using rule 88 (CTE -> IDV OB INT CB .)
    GT              reduce using rule 88 (CTE -> IDV OB INT CB .)
    GTE             reduce using rule 88 (CTE -> IDV OB INT CB .)
    LT              reduce using rule 88 (CTE -> IDV OB INT CB .)
    LTE             reduce using rule 88 (CTE -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 88 (CTE -> IDV OB INT CB .)
    LTGT            reduce using rule 88 (CTE -> IDV OB INT CB .)
    COMMA           reduce using rule 88 (CTE -> IDV OB INT CB .)
    CB              reduce using rule 88 (CTE -> IDV OB INT CB .)


state 161

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .

    CC              reduce using rule 62 (METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .)


state 162

    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 . CC

    CC              shift and go to state 179


state 163

    (74) EXPRESSION -> OPER PLUS EXPRESSION .

    COMMA           reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    CP              reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOT             reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    PC              reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GT              reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GTE             reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LT              reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTE             reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTGT            reduce using rule 74 (EXPRESSION -> OPER PLUS EXPRESSION .)


state 164

    (75) EXPRESSION -> OPER MINUS EXPRESSION .

    COMMA           reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    CP              reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOT             reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    PC              reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GT              reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GTE             reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LT              reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTE             reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTGT            reduce using rule 75 (EXPRESSION -> OPER MINUS EXPRESSION .)


state 165

    (77) OPER -> TERM MULTIPLY OPER .

    PLUS            reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    MINUS           reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    CP              reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    COMMA           reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    DOT             reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    PC              reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    GT              reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    GTE             reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    LT              reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    LTE             reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    DOUBLEEQUALS    reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)
    LTGT            reduce using rule 77 (OPER -> TERM MULTIPLY OPER .)


state 166

    (78) OPER -> TERM DIVISION OPER .

    PLUS            reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    MINUS           reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    CP              reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    COMMA           reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    DOT             reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    PC              reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    GT              reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    GTE             reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    LT              reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    LTE             reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    DOUBLEEQUALS    reduce using rule 78 (OPER -> TERM DIVISION OPER .)
    LTGT            reduce using rule 78 (OPER -> TERM DIVISION OPER .)


state 167

    (90) CONCAT -> EXPRESSION DOT CONCAT .

    CP              reduce using rule 90 (CONCAT -> EXPRESSION DOT CONCAT .)


state 168

    (89) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    VARISMALL       reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    VARFSMALL       reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    VARSTSMALL      reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    VARLSMALL       reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 89 (SAY -> SAYW OP CONCAT CP PC .)


state 169

    (79) TERM -> OP EXPRESSION CP .

    MULTIPLY        reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    DIVISION        reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    PLUS            reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    MINUS           reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    COMMA           reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    CP              reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    DOT             reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    PC              reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    GT              reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    GTE             reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    LT              reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    LTE             reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 79 (TERM -> OP EXPRESSION CP .)
    LTGT            reduce using rule 79 (TERM -> OP EXPRESSION CP .)


state 170

    (93) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 180


state 171

    (94) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (95) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 181
    CP              reduce using rule 95 (PARAMETERS -> EXPRESSION .)


state 172

    (104) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . BLOCKS2 CC
    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 182
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 183
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 173

    (48) STM -> EXPRESSION STM2 EXPRESSION .

    CP              reduce using rule 48 (STM -> EXPRESSION STM2 EXPRESSION .)


state 174

    (42) CONDITION -> IF OP STM CP OC . BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM CP OC . CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC . BLOCKS2 CC
    (45) CONDITION -> IF OP STM CP OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 184
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 185
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 175

    (101) LOOP2 -> FLOAT .

    TO              reduce using rule 101 (LOOP2 -> FLOAT .)
    CP              reduce using rule 101 (LOOP2 -> FLOAT .)
    BY              reduce using rule 101 (LOOP2 -> FLOAT .)


state 176

    (100) LOOP2 -> INT .

    TO              reduce using rule 100 (LOOP2 -> INT .)
    CP              reduce using rule 100 (LOOP2 -> INT .)
    BY              reduce using rule 100 (LOOP2 -> INT .)


state 177

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC CC

    TO              shift and go to state 186


state 178

    (92) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 187


state 179

    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .

    CC              reduce using rule 61 (METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .)


state 180

    (93) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 188


state 181

    (94) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (94) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (95) PARAMETERS -> . EXPRESSION
    (73) EXPRESSION -> . OPER
    (74) EXPRESSION -> . OPER PLUS EXPRESSION
    (75) EXPRESSION -> . OPER MINUS EXPRESSION
    (76) OPER -> . TERM
    (77) OPER -> . TERM MULTIPLY OPER
    (78) OPER -> . TERM DIVISION OPER
    (79) TERM -> . OP EXPRESSION CP
    (80) TERM -> . TERM2
    (81) TERM2 -> . CTE
    (82) TERM2 -> . PLUS CTE
    (83) TERM2 -> . MINUS CTE
    (84) CTE -> . INT
    (85) CTE -> . FLOAT
    (86) CTE -> . STRING
    (87) CTE -> . IDV
    (88) CTE -> . IDV OB INT CB

    OP              shift and go to state 124
    PLUS            shift and go to state 120
    MINUS           shift and go to state 122
    INT             shift and go to state 86
    FLOAT           shift and go to state 84
    STRING          shift and go to state 81
    IDV             shift and go to state 83

    OPER                           shift and go to state 116
    TERM                           shift and go to state 117
    TERM2                          shift and go to state 118
    PARAMETERS                     shift and go to state 189
    CTE                            shift and go to state 119
    EXPRESSION                     shift and go to state 171

state 182

    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .

    RETURNW         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IDV             reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPW           reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPIFW         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IF              reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    ASKUSER         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    SAYW            reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CALLBOXW        reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    VARISMALL       reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    VARFSMALL       reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    VARSTSMALL      reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    VARLSMALL       reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CC              reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)


state 183

    (104) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 . CC

    CC              shift and go to state 190


state 184

    (43) CONDITION -> IF OP STM CP OC CC . CONDITION2
    (45) CONDITION -> IF OP STM CP OC CC .
    (46) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (47) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    IDV             reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    LOOPW           reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    LOOPIFW         reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    IF              reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    ASKUSER         reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    SAYW            reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    CALLBOXW        reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    VARISMALL       reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    VARFSMALL       reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    VARSTSMALL      reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    VARLSMALL       reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    CC              reduce using rule 45 (CONDITION -> IF OP STM CP OC CC .)
    ELSE            shift and go to state 191

    CONDITION2                     shift and go to state 192

state 185

    (42) CONDITION -> IF OP STM CP OC BLOCKS2 . CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC BLOCKS2 . CC

    CC              shift and go to state 193


state 186

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC CC
    (100) LOOP2 -> . INT
    (101) LOOP2 -> . FLOAT

    INT             shift and go to state 176
    FLOAT           shift and go to state 175

    LOOP2                          shift and go to state 194

state 187

    (92) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 195


state 188

    (93) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    VARISMALL       reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    VARFSMALL       reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    VARSTSMALL      reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    VARLSMALL       reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 93 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 189

    (94) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 94 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 190

    (104) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IDV             reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IF              reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    VARISMALL       reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    VARFSMALL       reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    VARSTSMALL      reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    VARLSMALL       reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CC              reduce using rule 104 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)


state 191

    (46) CONDITION2 -> ELSE . OC BLOCKS2 CC
    (47) CONDITION2 -> ELSE . OC CC

    OC              shift and go to state 196


state 192

    (43) CONDITION -> IF OP STM CP OC CC CONDITION2 .

    RETURNW         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IDV             reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPW           reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPIFW         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IF              reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    ASKUSER         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    SAYW            reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CALLBOXW        reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    VARISMALL       reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    VARFSMALL       reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    VARSTSMALL      reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    VARLSMALL       reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CC              reduce using rule 43 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)


state 193

    (42) CONDITION -> IF OP STM CP OC BLOCKS2 CC . CONDITION2
    (44) CONDITION -> IF OP STM CP OC BLOCKS2 CC .
    (46) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (47) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IDV             reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IF              reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    VARISMALL       reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    VARFSMALL       reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    VARSTSMALL      reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    VARLSMALL       reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CC              reduce using rule 44 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ELSE            shift and go to state 191

    CONDITION2                     shift and go to state 197

state 194

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC CC

    BY              shift and go to state 199
    CP              shift and go to state 198


state 195

    (92) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    VARISMALL       reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    VARFSMALL       reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    VARSTSMALL      reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    VARLSMALL       reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 92 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 196

    (46) CONDITION2 -> ELSE OC . BLOCKS2 CC
    (47) CONDITION2 -> ELSE OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 200
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 201
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 197

    (42) CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    VARISMALL       reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    VARFSMALL       reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    VARSTSMALL      reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    VARLSMALL       reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)


state 198

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC CC

    OC              shift and go to state 202


state 199

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC CC
    (102) LOOP3 -> . PLUS
    (103) LOOP3 -> . MINUS

    PLUS            shift and go to state 204
    MINUS           shift and go to state 203

    LOOP3                          shift and go to state 205

state 200

    (47) CONDITION2 -> ELSE OC CC .

    RETURNW         reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    IDV             reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    LOOPW           reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    LOOPIFW         reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    IF              reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    ASKUSER         reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    SAYW            reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    CALLBOXW        reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    VARISMALL       reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    VARFSMALL       reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    VARSTSMALL      reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    VARLSMALL       reduce using rule 47 (CONDITION2 -> ELSE OC CC .)
    CC              reduce using rule 47 (CONDITION2 -> ELSE OC CC .)


state 201

    (46) CONDITION2 -> ELSE OC BLOCKS2 . CC

    CC              shift and go to state 206


state 202

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 207
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 208
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 203

    (103) LOOP3 -> MINUS .

    INT             reduce using rule 103 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 103 (LOOP3 -> MINUS .)


state 204

    (102) LOOP3 -> PLUS .

    INT             reduce using rule 102 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 102 (LOOP3 -> PLUS .)


state 205

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC CC
    (100) LOOP2 -> . INT
    (101) LOOP2 -> . FLOAT

    INT             shift and go to state 176
    FLOAT           shift and go to state 175

    LOOP2                          shift and go to state 209

state 206

    (46) CONDITION2 -> ELSE OC BLOCKS2 CC .

    RETURNW         reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IDV             reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPW           reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IF              reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    SAYW            reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    VARISMALL       reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    VARFSMALL       reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    VARSTSMALL      reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    VARLSMALL       reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CC              reduce using rule 46 (CONDITION2 -> ELSE OC BLOCKS2 CC .)


state 207

    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .

    RETURNW         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IDV             reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPW           reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IF              reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    SAYW            reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    VARISMALL       reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    VARFSMALL       reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    VARSTSMALL      reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    VARLSMALL       reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CC              reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)


state 208

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 210


state 209

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC CC

    CP              shift and go to state 211


state 210

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    VARISMALL       reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    VARFSMALL       reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    VARSTSMALL      reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    VARLSMALL       reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)


state 211

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC CC

    OC              shift and go to state 212


state 212

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . CC
    (31) BLOCKS2 -> . CODE
    (32) BLOCKS2 -> . CODE BLOCKS2
    (33) CODE -> . RETURN
    (34) CODE -> . VARS
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (71) RETURN -> . RETURNW EQUALS PC
    (5) VARS -> . VARI
    (6) VARS -> . VARF
    (7) VARS -> . VARST
    (8) VARS -> . VARL
    (72) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (96) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (104) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (45) CONDITION -> . IF OP STM CP OC CC
    (92) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (89) SAY -> . SAYW OP CONCAT CP PC
    (93) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    CC              shift and go to state 213
    RETURNW         shift and go to state 73
    IDV             shift and go to state 66
    LOOPW           shift and go to state 75
    LOOPIFW         shift and go to state 72
    IF              shift and go to state 74
    ASKUSER         shift and go to state 79
    SAYW            shift and go to state 62
    CALLBOXW        shift and go to state 71
    VARISMALL       shift and go to state 13
    VARFSMALL       shift and go to state 14
    VARSTSMALL      shift and go to state 10
    VARLSMALL       shift and go to state 8

    CODE                           shift and go to state 63
    RETURN                         shift and go to state 64
    VARS                           shift and go to state 65
    VARF                           shift and go to state 6
    VARL                           shift and go to state 7
    VARI                           shift and go to state 9
    SAY                            shift and go to state 67
    ASK                            shift and go to state 68
    CONDITION                      shift and go to state 69
    ASSIGNATION                    shift and go to state 70
    VARST                          shift and go to state 12
    BLOCKS2                        shift and go to state 214
    CALLBOX                        shift and go to state 77
    LOOPIF                         shift and go to state 78
    LOOP                           shift and go to state 80

state 213

    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .

    RETURNW         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IDV             reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPW           reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IF              reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    SAYW            reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    VARISMALL       reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    VARFSMALL       reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    VARSTSMALL      reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    VARLSMALL       reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CC              reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)


state 214

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 215


state 215

    (96) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    VARISMALL       reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    VARFSMALL       reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    VARSTSMALL      reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    VARLSMALL       reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 96 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)

