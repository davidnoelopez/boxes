Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC
Rule 3     seen_globalvars -> <empty>
Rule 4     VARS -> VARI VARS
Rule 5     VARS -> VARF VARS
Rule 6     VARS -> VARST VARS
Rule 7     VARS -> VARL VARS
Rule 8     VARS -> <empty>
Rule 9     VARF -> VARFSMALL VARF3 PC
Rule 10    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 11    VARF3 -> IDV EQUALS FLOAT
Rule 12    VARF3 -> IDV COMMA VARF3
Rule 13    VARF3 -> IDV
Rule 14    VARI -> VARISMALL VARI3 PC
Rule 15    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 16    VARI3 -> IDV EQUALS INT
Rule 17    VARI3 -> IDV COMMA VARI3
Rule 18    VARI3 -> IDV
Rule 19    VARST -> VARSTSMALL VARST3 PC
Rule 20    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 21    VARST3 -> IDV EQUALS STRING
Rule 22    VARST3 -> IDV COMMA VARST3
Rule 23    VARST3 -> IDV
Rule 24    VARL -> VARLSMALL VARL3 PC
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 26    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 27    VARL3 -> IDV COMMA VARL3
Rule 28    VARL3 -> IDV
Rule 29    VARL4 -> CTEL
Rule 30    VARL4 -> CTEL COMMA VARL4
Rule 31    VARL4 -> <empty>
Rule 32    BLOCKS -> OC VARS BLOCKS2 CC
Rule 33    BLOCKS -> OC VARS CC
Rule 34    BLOCKS -> OC BLOCKS2 CC
Rule 35    BLOCKS -> OC CC
Rule 36    BLOCKS2 -> CODE
Rule 37    BLOCKS2 -> CODE BLOCKS2
Rule 38    CODE -> RETURN
Rule 39    CODE -> ASSIGNATION
Rule 40    CODE -> LOOP
Rule 41    CODE -> LOOPIF
Rule 42    CODE -> CONDITION
Rule 43    CODE -> ASK
Rule 44    CODE -> SAY
Rule 45    CODE -> CALLBOX
Rule 46    CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2
Rule 47    CONDITION -> IF OP STM CP OC CC CONDITION2
Rule 48    CONDITION -> IF OP STM CP OC BLOCKS2 CC
Rule 49    CONDITION -> IF OP STM CP OC CC
Rule 50    CONDITION2 -> ELSE OC BLOCKS2 CC
Rule 51    CONDITION2 -> ELSE OC CC
Rule 52    STM -> EXPRESSION STM2 EXPRESSION
Rule 53    STM -> EXPRESSION
Rule 54    STM2 -> GT
Rule 55    STM2 -> GTE
Rule 56    STM2 -> LT
Rule 57    STM2 -> LTE
Rule 58    STM2 -> DOUBLEEQUALS
Rule 59    STM2 -> LTGT
Rule 60    PARAM -> PARAM2 IDV
Rule 61    PARAM2 -> VARISMALL
Rule 62    PARAM2 -> VARSTSMALL
Rule 63    PARAM2 -> VARFSMALL
Rule 64    PARAM2 -> VARLSMALL
Rule 65    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS
Rule 66    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
Rule 67    seen_IDM -> IDM
Rule 68    METHODS2 -> RECURSIVEBOX
Rule 69    METHODS2 -> VOIDBOX
Rule 70    METHODS2 -> VARIBOX
Rule 71    METHODS2 -> VARFBOX
Rule 72    METHODS2 -> VARSBOX
Rule 73    METHODS2 -> VARLBOX
Rule 74    METHODS3 -> PARAM COMMA METHODS3
Rule 75    METHODS3 -> PARAM
Rule 76    METHODS3 -> <empty>
Rule 77    RETURN -> RETURNW EQUALS PC
Rule 78    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 79    EXPRESSION -> OPER
Rule 80    EXPRESSION -> OPER PLUS EXPRESSION
Rule 81    EXPRESSION -> OPER MINUS EXPRESSION
Rule 82    OPER -> TERM
Rule 83    OPER -> TERM MULTIPLY OPER
Rule 84    OPER -> TERM DIVISION OPER
Rule 85    TERM -> OP EXPRESSION CP
Rule 86    TERM -> TERM2
Rule 87    TERM2 -> CTE
Rule 88    TERM2 -> PLUS CTE
Rule 89    TERM2 -> MINUS CTE
Rule 90    CTE -> INT
Rule 91    CTE -> FLOAT
Rule 92    CTE -> STRING
Rule 93    CTE -> IDV
Rule 94    CTE -> IDV OB INT CB
Rule 95    CTEL -> INT
Rule 96    CTEL -> FLOAT
Rule 97    CTEL -> STRING
Rule 98    CTEL -> IDV
Rule 99    CTEL -> IDV OB INT CB
Rule 100   CTEL -> OB seen_OB CTEL2
Rule 101   CTEL2 -> CTEL CB seen_CB
Rule 102   CTEL2 -> CTEL COMMA CTEL2
Rule 103   CTEL2 -> CB seen_CB
Rule 104   seen_OB -> <empty>
Rule 105   seen_CB -> <empty>
Rule 106   SAY -> SAYW OP CONCAT CP PC
Rule 107   CONCAT -> EXPRESSION DOT CONCAT
Rule 108   CONCAT -> EXPRESSION
Rule 109   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 110   CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 111   PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 112   PARAMETERS -> EXPRESSION
Rule 113   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
Rule 114   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
Rule 115   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
Rule 116   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
Rule 117   LOOP2 -> INT
Rule 118   LOOP2 -> FLOAT
Rule 119   LOOP3 -> PLUS
Rule 120   LOOP3 -> MINUS
Rule 121   LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
Rule 122   LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC

Terminals, with rules where they appear

ASKUSER              : 109
BOX                  : 1 2
BY                   : 113 115
CALLBOXW             : 110
CB                   : 25 26 94 99 101 103
CC                   : 1 2 32 33 34 35 46 47 48 49 50 51 113 114 115 116 121 122
COMMA                : 10 12 15 17 20 22 26 27 30 74 102 109 110 111
CP                   : 1 2 46 47 48 49 65 66 85 106 109 110 113 114 115 116 121 122
DIVISION             : 84
DOT                  : 107
DOUBLEEQUALS         : 58
ELSE                 : 50 51
EQUALS               : 10 11 15 16 20 21 25 26 77 78
FLOAT                : 10 11 91 96 118
FROM                 : 113 114 115 116
GT                   : 54
GTE                  : 55
IDM                  : 67 110
IDV                  : 10 11 12 13 15 16 17 18 20 21 22 23 25 26 27 28 60 78 93 94 98 99 109 113 114 115 116
IF                   : 46 47 48 49
INT                  : 15 16 90 94 95 99 117
LOOPIFW              : 121 122
LOOPW                : 113 114 115 116
LT                   : 56
LTE                  : 57
LTGT                 : 59
MAINBOX              : 1 2
MINUS                : 81 89 120
MULTIPLY             : 83
OB                   : 25 26 94 99 100
OC                   : 1 2 32 33 34 35 46 47 48 49 50 51 113 114 115 116 121 122
OP                   : 1 2 46 47 48 49 65 66 85 106 109 110 113 114 115 116 121 122
PC                   : 9 14 19 24 77 78 106 109 110
PLUS                 : 80 88 119
RECURSIVEBOX         : 68
RETURNW              : 77
SAYW                 : 106
STRING               : 20 21 92 97 109
TO                   : 113 114 115 116
VARFBOX              : 71
VARFSMALL            : 9 63
VARIBOX              : 70
VARISMALL            : 14 61
VARLBOX              : 73
VARLSMALL            : 24 64
VARSBOX              : 72
VARSTSMALL           : 19 62
VOIDBOX              : 69
error                : 

Nonterminals, with rules where they appear

ASK                  : 43
ASSIGNATION          : 39
BLOCKS               : 1 2 65 66
BLOCKS2              : 32 34 37 46 48 50 113 114 121
BOXES                : 0
CALLBOX              : 45
CODE                 : 36 37
CONCAT               : 106 107
CONDITION            : 42
CONDITION2           : 46 47
CTE                  : 87 88 89
CTEL                 : 29 30 101 102
CTEL2                : 100 102
EXPRESSION           : 52 52 53 78 80 81 85 107 108 111 112 121 122
LOOP                 : 40
LOOP2                : 113 113 113 114 114 115 115 115 116 116
LOOP3                : 113 115
LOOPIF               : 41
METHODS              : 1 66
METHODS2             : 65 66
METHODS3             : 65 66 74
OPER                 : 79 80 81 83 84
PARAM                : 74 75
PARAM2               : 60
PARAMETERS           : 110 111
RETURN               : 38
SAY                  : 44
STM                  : 46 47 48 49
STM2                 : 52
TERM                 : 82 83 84
TERM2                : 86
VARF                 : 5
VARF3                : 9 10 12
VARI                 : 4
VARI3                : 14 15 17
VARL                 : 7
VARL3                : 24 26 27
VARL4                : 25 26 30
VARS                 : 1 2 4 5 6 7 32 33
VARST                : 6
VARST3               : 19 20 22
seen_CB              : 101 103
seen_IDM             : 65 66
seen_OB              : 100
seen_globalvars      : 1 2

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 4
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 4

    (1) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS CC
    (3) seen_globalvars -> .

    MAINBOX         reduce using rule 3 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 13

state 5

    (5) VARS -> VARF . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 14
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 6

    (7) VARS -> VARL . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 15
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 7

    (24) VARL -> VARLSMALL . VARL3 PC
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 16

state 8

    (4) VARS -> VARI . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 18
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 9

    (19) VARST -> VARSTSMALL . VARST3 PC
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 19

state 10

    (6) VARS -> VARST . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 21
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 11

    (14) VARI -> VARISMALL . VARI3 PC
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 23

state 12

    (9) VARF -> VARFSMALL . VARF3 PC
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 25

state 13

    (1) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 26


state 14

    (5) VARS -> VARF VARS .

    MAINBOX         reduce using rule 5 (VARS -> VARF VARS .)
    CC              reduce using rule 5 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 5 (VARS -> VARF VARS .)
    IDV             reduce using rule 5 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 5 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 5 (VARS -> VARF VARS .)
    IF              reduce using rule 5 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 5 (VARS -> VARF VARS .)
    SAYW            reduce using rule 5 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 5 (VARS -> VARF VARS .)


state 15

    (7) VARS -> VARL VARS .

    MAINBOX         reduce using rule 7 (VARS -> VARL VARS .)
    CC              reduce using rule 7 (VARS -> VARL VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARL VARS .)
    IDV             reduce using rule 7 (VARS -> VARL VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARL VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARL VARS .)
    IF              reduce using rule 7 (VARS -> VARL VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARL VARS .)
    SAYW            reduce using rule 7 (VARS -> VARL VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARL VARS .)


state 16

    (24) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 27


state 17

    (25) VARL3 -> IDV . EQUALS OB VARL4 CB
    (26) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> IDV . COMMA VARL3
    (28) VARL3 -> IDV .

    EQUALS          shift and go to state 28
    COMMA           shift and go to state 29
    PC              reduce using rule 28 (VARL3 -> IDV .)


state 18

    (4) VARS -> VARI VARS .

    MAINBOX         reduce using rule 4 (VARS -> VARI VARS .)
    CC              reduce using rule 4 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 4 (VARS -> VARI VARS .)
    IDV             reduce using rule 4 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 4 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 4 (VARS -> VARI VARS .)
    IF              reduce using rule 4 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 4 (VARS -> VARI VARS .)
    SAYW            reduce using rule 4 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 4 (VARS -> VARI VARS .)


state 19

    (19) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 30


state 20

    (20) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (21) VARST3 -> IDV . EQUALS STRING
    (22) VARST3 -> IDV . COMMA VARST3
    (23) VARST3 -> IDV .

    EQUALS          shift and go to state 32
    COMMA           shift and go to state 31
    PC              reduce using rule 23 (VARST3 -> IDV .)


state 21

    (6) VARS -> VARST VARS .

    MAINBOX         reduce using rule 6 (VARS -> VARST VARS .)
    CC              reduce using rule 6 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARST VARS .)
    IDV             reduce using rule 6 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARST VARS .)
    IF              reduce using rule 6 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARST VARS .)
    SAYW            reduce using rule 6 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARST VARS .)


state 22

    (15) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (16) VARI3 -> IDV . EQUALS INT
    (17) VARI3 -> IDV . COMMA VARI3
    (18) VARI3 -> IDV .

    EQUALS          shift and go to state 34
    COMMA           shift and go to state 33
    PC              reduce using rule 18 (VARI3 -> IDV .)


state 23

    (14) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 35


state 24

    (10) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> IDV . EQUALS FLOAT
    (12) VARF3 -> IDV . COMMA VARF3
    (13) VARF3 -> IDV .

    EQUALS          shift and go to state 37
    COMMA           shift and go to state 36
    PC              reduce using rule 13 (VARF3 -> IDV .)


state 25

    (9) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 38


state 26

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 39


state 27

    (24) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    RETURNW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)


state 28

    (25) VARL3 -> IDV EQUALS . OB VARL4 CB
    (26) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 40


state 29

    (27) VARL3 -> IDV COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 41

state 30

    (19) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)


state 31

    (22) VARST3 -> IDV COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 42

state 32

    (20) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (21) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 43


state 33

    (17) VARI3 -> IDV COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 44

state 34

    (15) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (16) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 45


state 35

    (14) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)


state 36

    (12) VARF3 -> IDV COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 46

state 37

    (10) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (11) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 47


state 38

    (9) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)


state 39

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 48


state 40

    (25) VARL3 -> IDV EQUALS OB . VARL4 CB
    (26) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (95) CTEL -> . INT
    (96) CTEL -> . FLOAT
    (97) CTEL -> . STRING
    (98) CTEL -> . IDV
    (99) CTEL -> . IDV OB INT CB
    (100) CTEL -> . OB seen_OB CTEL2

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 54
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51
    OB              shift and go to state 53

    CTEL                           shift and go to state 55
    VARL4                          shift and go to state 50

state 41

    (27) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 27 (VARL3 -> IDV COMMA VARL3 .)


state 42

    (22) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 22 (VARST3 -> IDV COMMA VARST3 .)


state 43

    (20) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (21) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 56
    PC              reduce using rule 21 (VARST3 -> IDV EQUALS STRING .)


state 44

    (17) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 17 (VARI3 -> IDV COMMA VARI3 .)


state 45

    (15) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (16) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 57
    PC              reduce using rule 16 (VARI3 -> IDV EQUALS INT .)


state 46

    (12) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 12 (VARF3 -> IDV COMMA VARF3 .)


state 47

    (10) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (11) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 58
    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT .)


state 48

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS CC
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 60

    BLOCKS                         shift and go to state 59

state 49

    (97) CTEL -> STRING .

    COMMA           reduce using rule 97 (CTEL -> STRING .)
    CB              reduce using rule 97 (CTEL -> STRING .)


state 50

    (25) VARL3 -> IDV EQUALS OB VARL4 . CB
    (26) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 61


state 51

    (98) CTEL -> IDV .
    (99) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 98 (CTEL -> IDV .)
    CB              reduce using rule 98 (CTEL -> IDV .)
    OB              shift and go to state 62


state 52

    (96) CTEL -> FLOAT .

    COMMA           reduce using rule 96 (CTEL -> FLOAT .)
    CB              reduce using rule 96 (CTEL -> FLOAT .)


state 53

    (100) CTEL -> OB . seen_OB CTEL2
    (104) seen_OB -> .

    CB              reduce using rule 104 (seen_OB -> .)
    INT             reduce using rule 104 (seen_OB -> .)
    FLOAT           reduce using rule 104 (seen_OB -> .)
    STRING          reduce using rule 104 (seen_OB -> .)
    IDV             reduce using rule 104 (seen_OB -> .)
    OB              reduce using rule 104 (seen_OB -> .)

    seen_OB                        shift and go to state 63

state 54

    (95) CTEL -> INT .

    COMMA           reduce using rule 95 (CTEL -> INT .)
    CB              reduce using rule 95 (CTEL -> INT .)


state 55

    (29) VARL4 -> CTEL .
    (30) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 29 (VARL4 -> CTEL .)
    COMMA           shift and go to state 64


state 56

    (20) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 65

state 57

    (15) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 66

state 58

    (10) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 67

state 59

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . CC
    (65) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (68) METHODS2 -> . RECURSIVEBOX
    (69) METHODS2 -> . VOIDBOX
    (70) METHODS2 -> . VARIBOX
    (71) METHODS2 -> . VARFBOX
    (72) METHODS2 -> . VARSBOX
    (73) METHODS2 -> . VARLBOX

    CC              shift and go to state 70
    RECURSIVEBOX    shift and go to state 68
    VOIDBOX         shift and go to state 75
    VARIBOX         shift and go to state 74
    VARFBOX         shift and go to state 72
    VARSBOX         shift and go to state 73
    VARLBOX         shift and go to state 71

    METHODS                        shift and go to state 69
    METHODS2                       shift and go to state 76

state 60

    (32) BLOCKS -> OC . VARS BLOCKS2 CC
    (33) BLOCKS -> OC . VARS CC
    (34) BLOCKS -> OC . BLOCKS2 CC
    (35) BLOCKS -> OC . CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
    CC              shift and go to state 87
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

  ! CC              [ reduce using rule 8 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 8 (VARS -> .) ]
  ! IDV             [ reduce using rule 8 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 8 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 8 (VARS -> .) ]
  ! IF              [ reduce using rule 8 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 8 (VARS -> .) ]
  ! SAYW            [ reduce using rule 8 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 8 (VARS -> .) ]

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    VARS                           shift and go to state 80
    VARF                           shift and go to state 5
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8
    SAY                            shift and go to state 82
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    ASSIGNATION                    shift and go to state 85
    VARST                          shift and go to state 10
    BLOCKS2                        shift and go to state 92
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    LOOP                           shift and go to state 96

state 61

    (25) VARL3 -> IDV EQUALS OB VARL4 CB .
    (26) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 97


state 62

    (99) CTEL -> IDV OB . INT CB

    INT             shift and go to state 98


state 63

    (100) CTEL -> OB seen_OB . CTEL2
    (101) CTEL2 -> . CTEL CB seen_CB
    (102) CTEL2 -> . CTEL COMMA CTEL2
    (103) CTEL2 -> . CB seen_CB
    (95) CTEL -> . INT
    (96) CTEL -> . FLOAT
    (97) CTEL -> . STRING
    (98) CTEL -> . IDV
    (99) CTEL -> . IDV OB INT CB
    (100) CTEL -> . OB seen_OB CTEL2

    CB              shift and go to state 99
    INT             shift and go to state 54
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51
    OB              shift and go to state 53

    CTEL2                          shift and go to state 100
    CTEL                           shift and go to state 101

state 64

    (30) VARL4 -> CTEL COMMA . VARL4
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (95) CTEL -> . INT
    (96) CTEL -> . FLOAT
    (97) CTEL -> . STRING
    (98) CTEL -> . IDV
    (99) CTEL -> . IDV OB INT CB
    (100) CTEL -> . OB seen_OB CTEL2

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 54
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51
    OB              shift and go to state 53

    VARL4                          shift and go to state 102
    CTEL                           shift and go to state 55

state 65

    (20) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 66

    (15) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 67

    (10) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 68

    (68) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 68 (METHODS2 -> RECURSIVEBOX .)


state 69

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS . CC

    CC              shift and go to state 103


state 70

    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .)


state 71

    (73) METHODS2 -> VARLBOX .

    IDM             reduce using rule 73 (METHODS2 -> VARLBOX .)


state 72

    (71) METHODS2 -> VARFBOX .

    IDM             reduce using rule 71 (METHODS2 -> VARFBOX .)


state 73

    (72) METHODS2 -> VARSBOX .

    IDM             reduce using rule 72 (METHODS2 -> VARSBOX .)


state 74

    (70) METHODS2 -> VARIBOX .

    IDM             reduce using rule 70 (METHODS2 -> VARIBOX .)


state 75

    (69) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 69 (METHODS2 -> VOIDBOX .)


state 76

    (65) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS
    (66) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHODS
    (67) seen_IDM -> . IDM

    IDM             shift and go to state 105

    seen_IDM                       shift and go to state 104

state 77

    (106) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 106


state 78

    (36) BLOCKS2 -> CODE .
    (37) BLOCKS2 -> CODE . BLOCKS2
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 36 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 107
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 79

    (38) CODE -> RETURN .

    RETURNW         reduce using rule 38 (CODE -> RETURN .)
    IDV             reduce using rule 38 (CODE -> RETURN .)
    LOOPW           reduce using rule 38 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 38 (CODE -> RETURN .)
    IF              reduce using rule 38 (CODE -> RETURN .)
    ASKUSER         reduce using rule 38 (CODE -> RETURN .)
    SAYW            reduce using rule 38 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 38 (CODE -> RETURN .)
    CC              reduce using rule 38 (CODE -> RETURN .)


state 80

    (32) BLOCKS -> OC VARS . BLOCKS2 CC
    (33) BLOCKS -> OC VARS . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 108
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 109
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 81

    (78) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 110


state 82

    (44) CODE -> SAY .

    RETURNW         reduce using rule 44 (CODE -> SAY .)
    IDV             reduce using rule 44 (CODE -> SAY .)
    LOOPW           reduce using rule 44 (CODE -> SAY .)
    LOOPIFW         reduce using rule 44 (CODE -> SAY .)
    IF              reduce using rule 44 (CODE -> SAY .)
    ASKUSER         reduce using rule 44 (CODE -> SAY .)
    SAYW            reduce using rule 44 (CODE -> SAY .)
    CALLBOXW        reduce using rule 44 (CODE -> SAY .)
    CC              reduce using rule 44 (CODE -> SAY .)


state 83

    (43) CODE -> ASK .

    RETURNW         reduce using rule 43 (CODE -> ASK .)
    IDV             reduce using rule 43 (CODE -> ASK .)
    LOOPW           reduce using rule 43 (CODE -> ASK .)
    LOOPIFW         reduce using rule 43 (CODE -> ASK .)
    IF              reduce using rule 43 (CODE -> ASK .)
    ASKUSER         reduce using rule 43 (CODE -> ASK .)
    SAYW            reduce using rule 43 (CODE -> ASK .)
    CALLBOXW        reduce using rule 43 (CODE -> ASK .)
    CC              reduce using rule 43 (CODE -> ASK .)


state 84

    (42) CODE -> CONDITION .

    RETURNW         reduce using rule 42 (CODE -> CONDITION .)
    IDV             reduce using rule 42 (CODE -> CONDITION .)
    LOOPW           reduce using rule 42 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 42 (CODE -> CONDITION .)
    IF              reduce using rule 42 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 42 (CODE -> CONDITION .)
    SAYW            reduce using rule 42 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 42 (CODE -> CONDITION .)
    CC              reduce using rule 42 (CODE -> CONDITION .)


state 85

    (39) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IF              reduce using rule 39 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 39 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 39 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 39 (CODE -> ASSIGNATION .)
    CC              reduce using rule 39 (CODE -> ASSIGNATION .)


state 86

    (110) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 111


state 87

    (35) BLOCKS -> OC CC .

    RECURSIVEBOX    reduce using rule 35 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    CC              reduce using rule 35 (BLOCKS -> OC CC .)


state 88

    (121) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC CC

    OP              shift and go to state 112


state 89

    (77) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 113


state 90

    (46) CONDITION -> IF . OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF . OP STM CP OC CC CONDITION2
    (48) CONDITION -> IF . OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> IF . OP STM CP OC CC

    OP              shift and go to state 114


state 91

    (113) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC CC

    OP              shift and go to state 115


state 92

    (34) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 116


state 93

    (45) CODE -> CALLBOX .

    RETURNW         reduce using rule 45 (CODE -> CALLBOX .)
    IDV             reduce using rule 45 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 45 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 45 (CODE -> CALLBOX .)
    IF              reduce using rule 45 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 45 (CODE -> CALLBOX .)
    SAYW            reduce using rule 45 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 45 (CODE -> CALLBOX .)
    CC              reduce using rule 45 (CODE -> CALLBOX .)


state 94

    (41) CODE -> LOOPIF .

    RETURNW         reduce using rule 41 (CODE -> LOOPIF .)
    IDV             reduce using rule 41 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 41 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 41 (CODE -> LOOPIF .)
    IF              reduce using rule 41 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 41 (CODE -> LOOPIF .)
    SAYW            reduce using rule 41 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 41 (CODE -> LOOPIF .)
    CC              reduce using rule 41 (CODE -> LOOPIF .)


state 95

    (109) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 117


state 96

    (40) CODE -> LOOP .

    RETURNW         reduce using rule 40 (CODE -> LOOP .)
    IDV             reduce using rule 40 (CODE -> LOOP .)
    LOOPW           reduce using rule 40 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 40 (CODE -> LOOP .)
    IF              reduce using rule 40 (CODE -> LOOP .)
    ASKUSER         reduce using rule 40 (CODE -> LOOP .)
    SAYW            reduce using rule 40 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 40 (CODE -> LOOP .)
    CC              reduce using rule 40 (CODE -> LOOP .)


state 97

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 118

state 98

    (99) CTEL -> IDV OB INT . CB

    CB              shift and go to state 119


state 99

    (103) CTEL2 -> CB . seen_CB
    (105) seen_CB -> .

    COMMA           reduce using rule 105 (seen_CB -> .)
    CB              reduce using rule 105 (seen_CB -> .)

    seen_CB                        shift and go to state 120

state 100

    (100) CTEL -> OB seen_OB CTEL2 .

    COMMA           reduce using rule 100 (CTEL -> OB seen_OB CTEL2 .)
    CB              reduce using rule 100 (CTEL -> OB seen_OB CTEL2 .)


state 101

    (101) CTEL2 -> CTEL . CB seen_CB
    (102) CTEL2 -> CTEL . COMMA CTEL2

    CB              shift and go to state 121
    COMMA           shift and go to state 122


state 102

    (30) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 30 (VARL4 -> CTEL COMMA VARL4 .)


state 103

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .)


state 104

    (65) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS
    (66) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHODS

    OP              shift and go to state 123


state 105

    (67) seen_IDM -> IDM .

    OP              reduce using rule 67 (seen_IDM -> IDM .)


state 106

    (106) SAY -> SAYW OP . CONCAT CP PC
    (107) CONCAT -> . EXPRESSION DOT CONCAT
    (108) CONCAT -> . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 133
    CONCAT                         shift and go to state 135

state 107

    (37) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 37 (BLOCKS2 -> CODE BLOCKS2 .)


state 108

    (33) BLOCKS -> OC VARS CC .

    RECURSIVEBOX    reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARLBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    CC              reduce using rule 33 (BLOCKS -> OC VARS CC .)


state 109

    (32) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 137


state 110

    (78) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    EXPRESSION                     shift and go to state 138
    TERM2                          shift and go to state 126

state 111

    (110) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 139


state 112

    (121) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC CC
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 140

state 113

    (77) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 141


state 114

    (46) CONDITION -> IF OP . STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP . STM CP OC CC CONDITION2
    (48) CONDITION -> IF OP . STM CP OC BLOCKS2 CC
    (49) CONDITION -> IF OP . STM CP OC CC
    (52) STM -> . EXPRESSION STM2 EXPRESSION
    (53) STM -> . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    STM                            shift and go to state 143
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 142

state 115

    (113) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC CC

    IDV             shift and go to state 144


state 116

    (34) BLOCKS -> OC BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    CC              reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)


state 117

    (109) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 145


state 118

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 26 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 119

    (99) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 99 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 99 (CTEL -> IDV OB INT CB .)


state 120

    (103) CTEL2 -> CB seen_CB .

    COMMA           reduce using rule 103 (CTEL2 -> CB seen_CB .)
    CB              reduce using rule 103 (CTEL2 -> CB seen_CB .)


state 121

    (101) CTEL2 -> CTEL CB . seen_CB
    (105) seen_CB -> .

    COMMA           reduce using rule 105 (seen_CB -> .)
    CB              reduce using rule 105 (seen_CB -> .)

    seen_CB                        shift and go to state 146

state 122

    (102) CTEL2 -> CTEL COMMA . CTEL2
    (101) CTEL2 -> . CTEL CB seen_CB
    (102) CTEL2 -> . CTEL COMMA CTEL2
    (103) CTEL2 -> . CB seen_CB
    (95) CTEL -> . INT
    (96) CTEL -> . FLOAT
    (97) CTEL -> . STRING
    (98) CTEL -> . IDV
    (99) CTEL -> . IDV OB INT CB
    (100) CTEL -> . OB seen_OB CTEL2

    CB              shift and go to state 99
    INT             shift and go to state 54
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51
    OB              shift and go to state 53

    CTEL2                          shift and go to state 147
    CTEL                           shift and go to state 101

state 123

    (65) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS
    (66) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHODS
    (74) METHODS3 -> . PARAM COMMA METHODS3
    (75) METHODS3 -> . PARAM
    (76) METHODS3 -> .
    (60) PARAM -> . PARAM2 IDV
    (61) PARAM2 -> . VARISMALL
    (62) PARAM2 -> . VARSTSMALL
    (63) PARAM2 -> . VARFSMALL
    (64) PARAM2 -> . VARLSMALL

    CP              reduce using rule 76 (METHODS3 -> .)
    VARISMALL       shift and go to state 149
    VARSTSMALL      shift and go to state 150
    VARFSMALL       shift and go to state 152
    VARLSMALL       shift and go to state 148

    PARAM                          shift and go to state 151
    PARAM2                         shift and go to state 153
    METHODS3                       shift and go to state 154

state 124

    (79) EXPRESSION -> OPER .
    (80) EXPRESSION -> OPER . PLUS EXPRESSION
    (81) EXPRESSION -> OPER . MINUS EXPRESSION

    CP              reduce using rule 79 (EXPRESSION -> OPER .)
    DOT             reduce using rule 79 (EXPRESSION -> OPER .)
    PC              reduce using rule 79 (EXPRESSION -> OPER .)
    GT              reduce using rule 79 (EXPRESSION -> OPER .)
    GTE             reduce using rule 79 (EXPRESSION -> OPER .)
    LT              reduce using rule 79 (EXPRESSION -> OPER .)
    LTE             reduce using rule 79 (EXPRESSION -> OPER .)
    DOUBLEEQUALS    reduce using rule 79 (EXPRESSION -> OPER .)
    LTGT            reduce using rule 79 (EXPRESSION -> OPER .)
    COMMA           reduce using rule 79 (EXPRESSION -> OPER .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156


state 125

    (82) OPER -> TERM .
    (83) OPER -> TERM . MULTIPLY OPER
    (84) OPER -> TERM . DIVISION OPER

    PLUS            reduce using rule 82 (OPER -> TERM .)
    MINUS           reduce using rule 82 (OPER -> TERM .)
    DOT             reduce using rule 82 (OPER -> TERM .)
    CP              reduce using rule 82 (OPER -> TERM .)
    PC              reduce using rule 82 (OPER -> TERM .)
    GT              reduce using rule 82 (OPER -> TERM .)
    GTE             reduce using rule 82 (OPER -> TERM .)
    LT              reduce using rule 82 (OPER -> TERM .)
    LTE             reduce using rule 82 (OPER -> TERM .)
    DOUBLEEQUALS    reduce using rule 82 (OPER -> TERM .)
    LTGT            reduce using rule 82 (OPER -> TERM .)
    COMMA           reduce using rule 82 (OPER -> TERM .)
    MULTIPLY        shift and go to state 157
    DIVISION        shift and go to state 158


state 126

    (86) TERM -> TERM2 .

    MULTIPLY        reduce using rule 86 (TERM -> TERM2 .)
    DIVISION        reduce using rule 86 (TERM -> TERM2 .)
    PLUS            reduce using rule 86 (TERM -> TERM2 .)
    MINUS           reduce using rule 86 (TERM -> TERM2 .)
    CP              reduce using rule 86 (TERM -> TERM2 .)
    DOT             reduce using rule 86 (TERM -> TERM2 .)
    PC              reduce using rule 86 (TERM -> TERM2 .)
    GT              reduce using rule 86 (TERM -> TERM2 .)
    GTE             reduce using rule 86 (TERM -> TERM2 .)
    LT              reduce using rule 86 (TERM -> TERM2 .)
    LTE             reduce using rule 86 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 86 (TERM -> TERM2 .)
    LTGT            reduce using rule 86 (TERM -> TERM2 .)
    COMMA           reduce using rule 86 (TERM -> TERM2 .)


state 127

    (90) CTE -> INT .

    MULTIPLY        reduce using rule 90 (CTE -> INT .)
    DIVISION        reduce using rule 90 (CTE -> INT .)
    PLUS            reduce using rule 90 (CTE -> INT .)
    MINUS           reduce using rule 90 (CTE -> INT .)
    CP              reduce using rule 90 (CTE -> INT .)
    PC              reduce using rule 90 (CTE -> INT .)
    DOT             reduce using rule 90 (CTE -> INT .)
    GT              reduce using rule 90 (CTE -> INT .)
    GTE             reduce using rule 90 (CTE -> INT .)
    LT              reduce using rule 90 (CTE -> INT .)
    LTE             reduce using rule 90 (CTE -> INT .)
    DOUBLEEQUALS    reduce using rule 90 (CTE -> INT .)
    LTGT            reduce using rule 90 (CTE -> INT .)
    COMMA           reduce using rule 90 (CTE -> INT .)


state 128

    (91) CTE -> FLOAT .

    MULTIPLY        reduce using rule 91 (CTE -> FLOAT .)
    DIVISION        reduce using rule 91 (CTE -> FLOAT .)
    PLUS            reduce using rule 91 (CTE -> FLOAT .)
    MINUS           reduce using rule 91 (CTE -> FLOAT .)
    CP              reduce using rule 91 (CTE -> FLOAT .)
    PC              reduce using rule 91 (CTE -> FLOAT .)
    DOT             reduce using rule 91 (CTE -> FLOAT .)
    GT              reduce using rule 91 (CTE -> FLOAT .)
    GTE             reduce using rule 91 (CTE -> FLOAT .)
    LT              reduce using rule 91 (CTE -> FLOAT .)
    LTE             reduce using rule 91 (CTE -> FLOAT .)
    DOUBLEEQUALS    reduce using rule 91 (CTE -> FLOAT .)
    LTGT            reduce using rule 91 (CTE -> FLOAT .)
    COMMA           reduce using rule 91 (CTE -> FLOAT .)


state 129

    (87) TERM2 -> CTE .

    MULTIPLY        reduce using rule 87 (TERM2 -> CTE .)
    DIVISION        reduce using rule 87 (TERM2 -> CTE .)
    PLUS            reduce using rule 87 (TERM2 -> CTE .)
    MINUS           reduce using rule 87 (TERM2 -> CTE .)
    DOT             reduce using rule 87 (TERM2 -> CTE .)
    CP              reduce using rule 87 (TERM2 -> CTE .)
    PC              reduce using rule 87 (TERM2 -> CTE .)
    GT              reduce using rule 87 (TERM2 -> CTE .)
    GTE             reduce using rule 87 (TERM2 -> CTE .)
    LT              reduce using rule 87 (TERM2 -> CTE .)
    LTE             reduce using rule 87 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 87 (TERM2 -> CTE .)
    LTGT            reduce using rule 87 (TERM2 -> CTE .)
    COMMA           reduce using rule 87 (TERM2 -> CTE .)


state 130

    (93) CTE -> IDV .
    (94) CTE -> IDV . OB INT CB

    MULTIPLY        reduce using rule 93 (CTE -> IDV .)
    DIVISION        reduce using rule 93 (CTE -> IDV .)
    PLUS            reduce using rule 93 (CTE -> IDV .)
    MINUS           reduce using rule 93 (CTE -> IDV .)
    CP              reduce using rule 93 (CTE -> IDV .)
    PC              reduce using rule 93 (CTE -> IDV .)
    DOT             reduce using rule 93 (CTE -> IDV .)
    GT              reduce using rule 93 (CTE -> IDV .)
    GTE             reduce using rule 93 (CTE -> IDV .)
    LT              reduce using rule 93 (CTE -> IDV .)
    LTE             reduce using rule 93 (CTE -> IDV .)
    DOUBLEEQUALS    reduce using rule 93 (CTE -> IDV .)
    LTGT            reduce using rule 93 (CTE -> IDV .)
    COMMA           reduce using rule 93 (CTE -> IDV .)
    OB              shift and go to state 159


state 131

    (88) TERM2 -> PLUS . CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    CTE                            shift and go to state 160

state 132

    (92) CTE -> STRING .

    MULTIPLY        reduce using rule 92 (CTE -> STRING .)
    DIVISION        reduce using rule 92 (CTE -> STRING .)
    PLUS            reduce using rule 92 (CTE -> STRING .)
    MINUS           reduce using rule 92 (CTE -> STRING .)
    CP              reduce using rule 92 (CTE -> STRING .)
    PC              reduce using rule 92 (CTE -> STRING .)
    DOT             reduce using rule 92 (CTE -> STRING .)
    GT              reduce using rule 92 (CTE -> STRING .)
    GTE             reduce using rule 92 (CTE -> STRING .)
    LT              reduce using rule 92 (CTE -> STRING .)
    LTE             reduce using rule 92 (CTE -> STRING .)
    DOUBLEEQUALS    reduce using rule 92 (CTE -> STRING .)
    LTGT            reduce using rule 92 (CTE -> STRING .)
    COMMA           reduce using rule 92 (CTE -> STRING .)


state 133

    (107) CONCAT -> EXPRESSION . DOT CONCAT
    (108) CONCAT -> EXPRESSION .

    DOT             shift and go to state 161
    CP              reduce using rule 108 (CONCAT -> EXPRESSION .)


state 134

    (89) TERM2 -> MINUS . CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    CTE                            shift and go to state 162

state 135

    (106) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 163


state 136

    (85) TERM -> OP . EXPRESSION CP
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    EXPRESSION                     shift and go to state 164
    TERM2                          shift and go to state 126

state 137

    (32) BLOCKS -> OC VARS BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARLBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    CC              reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 138

    (78) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 165


state 139

    (110) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 166


state 140

    (121) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC BLOCKS2 CC
    (122) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC CC

    CP              shift and go to state 167


state 141

    (77) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 77 (RETURN -> RETURNW EQUALS PC .)


state 142

    (52) STM -> EXPRESSION . STM2 EXPRESSION
    (53) STM -> EXPRESSION .
    (54) STM2 -> . GT
    (55) STM2 -> . GTE
    (56) STM2 -> . LT
    (57) STM2 -> . LTE
    (58) STM2 -> . DOUBLEEQUALS
    (59) STM2 -> . LTGT

    CP              reduce using rule 53 (STM -> EXPRESSION .)
    GT              shift and go to state 168
    GTE             shift and go to state 169
    LT              shift and go to state 171
    LTE             shift and go to state 173
    DOUBLEEQUALS    shift and go to state 174
    LTGT            shift and go to state 172

    STM2                           shift and go to state 170

state 143

    (46) CONDITION -> IF OP STM . CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM . CP OC CC CONDITION2
    (48) CONDITION -> IF OP STM . CP OC BLOCKS2 CC
    (49) CONDITION -> IF OP STM . CP OC CC

    CP              shift and go to state 175


state 144

    (113) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC CC

    FROM            shift and go to state 176


state 145

    (109) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 177


state 146

    (101) CTEL2 -> CTEL CB seen_CB .

    COMMA           reduce using rule 101 (CTEL2 -> CTEL CB seen_CB .)
    CB              reduce using rule 101 (CTEL2 -> CTEL CB seen_CB .)


state 147

    (102) CTEL2 -> CTEL COMMA CTEL2 .

    COMMA           reduce using rule 102 (CTEL2 -> CTEL COMMA CTEL2 .)
    CB              reduce using rule 102 (CTEL2 -> CTEL COMMA CTEL2 .)


state 148

    (64) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 64 (PARAM2 -> VARLSMALL .)


state 149

    (61) PARAM2 -> VARISMALL .

    IDV             reduce using rule 61 (PARAM2 -> VARISMALL .)


state 150

    (62) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 62 (PARAM2 -> VARSTSMALL .)


state 151

    (74) METHODS3 -> PARAM . COMMA METHODS3
    (75) METHODS3 -> PARAM .

    COMMA           shift and go to state 178
    CP              reduce using rule 75 (METHODS3 -> PARAM .)


state 152

    (63) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 63 (PARAM2 -> VARFSMALL .)


state 153

    (60) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 179


state 154

    (65) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS
    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHODS

    CP              shift and go to state 180


state 155

    (80) EXPRESSION -> OPER PLUS . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    EXPRESSION                     shift and go to state 181
    TERM2                          shift and go to state 126

state 156

    (81) EXPRESSION -> OPER MINUS . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    EXPRESSION                     shift and go to state 182
    TERM2                          shift and go to state 126

state 157

    (83) OPER -> TERM MULTIPLY . OPER
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 183
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126

state 158

    (84) OPER -> TERM DIVISION . OPER
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 184
    CTE                            shift and go to state 129
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126

state 159

    (94) CTE -> IDV OB . INT CB

    INT             shift and go to state 185


state 160

    (88) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 88 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 88 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 88 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 88 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 88 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 88 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 88 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 88 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 88 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 88 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 88 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 88 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 88 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 88 (TERM2 -> PLUS CTE .)


state 161

    (107) CONCAT -> EXPRESSION DOT . CONCAT
    (107) CONCAT -> . EXPRESSION DOT CONCAT
    (108) CONCAT -> . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 133
    CONCAT                         shift and go to state 186

state 162

    (89) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 89 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 89 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 89 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 89 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 89 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 89 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 89 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 89 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 89 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 89 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 89 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 89 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 89 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 89 (TERM2 -> MINUS CTE .)


state 163

    (106) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 187


state 164

    (85) TERM -> OP EXPRESSION . CP

    CP              shift and go to state 188


state 165

    (78) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 78 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 166

    (110) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (111) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (112) PARAMETERS -> . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    PARAMETERS                     shift and go to state 189
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 190

state 167

    (121) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC BLOCKS2 CC
    (122) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC CC

    OC              shift and go to state 191


state 168

    (54) STM2 -> GT .

    OP              reduce using rule 54 (STM2 -> GT .)
    PLUS            reduce using rule 54 (STM2 -> GT .)
    MINUS           reduce using rule 54 (STM2 -> GT .)
    INT             reduce using rule 54 (STM2 -> GT .)
    FLOAT           reduce using rule 54 (STM2 -> GT .)
    STRING          reduce using rule 54 (STM2 -> GT .)
    IDV             reduce using rule 54 (STM2 -> GT .)


state 169

    (55) STM2 -> GTE .

    OP              reduce using rule 55 (STM2 -> GTE .)
    PLUS            reduce using rule 55 (STM2 -> GTE .)
    MINUS           reduce using rule 55 (STM2 -> GTE .)
    INT             reduce using rule 55 (STM2 -> GTE .)
    FLOAT           reduce using rule 55 (STM2 -> GTE .)
    STRING          reduce using rule 55 (STM2 -> GTE .)
    IDV             reduce using rule 55 (STM2 -> GTE .)


state 170

    (52) STM -> EXPRESSION STM2 . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 192

state 171

    (56) STM2 -> LT .

    OP              reduce using rule 56 (STM2 -> LT .)
    PLUS            reduce using rule 56 (STM2 -> LT .)
    MINUS           reduce using rule 56 (STM2 -> LT .)
    INT             reduce using rule 56 (STM2 -> LT .)
    FLOAT           reduce using rule 56 (STM2 -> LT .)
    STRING          reduce using rule 56 (STM2 -> LT .)
    IDV             reduce using rule 56 (STM2 -> LT .)


state 172

    (59) STM2 -> LTGT .

    OP              reduce using rule 59 (STM2 -> LTGT .)
    PLUS            reduce using rule 59 (STM2 -> LTGT .)
    MINUS           reduce using rule 59 (STM2 -> LTGT .)
    INT             reduce using rule 59 (STM2 -> LTGT .)
    FLOAT           reduce using rule 59 (STM2 -> LTGT .)
    STRING          reduce using rule 59 (STM2 -> LTGT .)
    IDV             reduce using rule 59 (STM2 -> LTGT .)


state 173

    (57) STM2 -> LTE .

    OP              reduce using rule 57 (STM2 -> LTE .)
    PLUS            reduce using rule 57 (STM2 -> LTE .)
    MINUS           reduce using rule 57 (STM2 -> LTE .)
    INT             reduce using rule 57 (STM2 -> LTE .)
    FLOAT           reduce using rule 57 (STM2 -> LTE .)
    STRING          reduce using rule 57 (STM2 -> LTE .)
    IDV             reduce using rule 57 (STM2 -> LTE .)


state 174

    (58) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 58 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 58 (STM2 -> DOUBLEEQUALS .)


state 175

    (46) CONDITION -> IF OP STM CP . OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP . OC CC CONDITION2
    (48) CONDITION -> IF OP STM CP . OC BLOCKS2 CC
    (49) CONDITION -> IF OP STM CP . OC CC

    OC              shift and go to state 193


state 176

    (113) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC CC
    (117) LOOP2 -> . INT
    (118) LOOP2 -> . FLOAT

    INT             shift and go to state 195
    FLOAT           shift and go to state 194

    LOOP2                          shift and go to state 196

state 177

    (109) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 197


state 178

    (74) METHODS3 -> PARAM COMMA . METHODS3
    (74) METHODS3 -> . PARAM COMMA METHODS3
    (75) METHODS3 -> . PARAM
    (76) METHODS3 -> .
    (60) PARAM -> . PARAM2 IDV
    (61) PARAM2 -> . VARISMALL
    (62) PARAM2 -> . VARSTSMALL
    (63) PARAM2 -> . VARFSMALL
    (64) PARAM2 -> . VARLSMALL

    CP              reduce using rule 76 (METHODS3 -> .)
    VARISMALL       shift and go to state 149
    VARSTSMALL      shift and go to state 150
    VARFSMALL       shift and go to state 152
    VARLSMALL       shift and go to state 148

    METHODS3                       shift and go to state 198
    PARAM                          shift and go to state 151
    PARAM2                         shift and go to state 153

state 179

    (60) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 60 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 60 (PARAM -> PARAM2 IDV .)


state 180

    (65) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS
    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHODS
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 60

    BLOCKS                         shift and go to state 199

state 181

    (80) EXPRESSION -> OPER PLUS EXPRESSION .

    CP              reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOT             reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    PC              reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GT              reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GTE             reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LT              reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTE             reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTGT            reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)
    COMMA           reduce using rule 80 (EXPRESSION -> OPER PLUS EXPRESSION .)


state 182

    (81) EXPRESSION -> OPER MINUS EXPRESSION .

    CP              reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOT             reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    PC              reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GT              reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GTE             reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LT              reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTE             reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTGT            reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)
    COMMA           reduce using rule 81 (EXPRESSION -> OPER MINUS EXPRESSION .)


state 183

    (83) OPER -> TERM MULTIPLY OPER .

    PLUS            reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    MINUS           reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    DOT             reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    CP              reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    PC              reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    GT              reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    GTE             reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    LT              reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    LTE             reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    DOUBLEEQUALS    reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    LTGT            reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)
    COMMA           reduce using rule 83 (OPER -> TERM MULTIPLY OPER .)


state 184

    (84) OPER -> TERM DIVISION OPER .

    PLUS            reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    MINUS           reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    DOT             reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    CP              reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    PC              reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    GT              reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    GTE             reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    LT              reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    LTE             reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    DOUBLEEQUALS    reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    LTGT            reduce using rule 84 (OPER -> TERM DIVISION OPER .)
    COMMA           reduce using rule 84 (OPER -> TERM DIVISION OPER .)


state 185

    (94) CTE -> IDV OB INT . CB

    CB              shift and go to state 200


state 186

    (107) CONCAT -> EXPRESSION DOT CONCAT .

    CP              reduce using rule 107 (CONCAT -> EXPRESSION DOT CONCAT .)


state 187

    (106) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 106 (SAY -> SAYW OP CONCAT CP PC .)


state 188

    (85) TERM -> OP EXPRESSION CP .

    MULTIPLY        reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    DIVISION        reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    PLUS            reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    MINUS           reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    CP              reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    DOT             reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    PC              reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    GT              reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    GTE             reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    LT              reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    LTE             reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    LTGT            reduce using rule 85 (TERM -> OP EXPRESSION CP .)
    COMMA           reduce using rule 85 (TERM -> OP EXPRESSION CP .)


state 189

    (110) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 201


state 190

    (111) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (112) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 202
    CP              reduce using rule 112 (PARAMETERS -> EXPRESSION .)


state 191

    (121) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . BLOCKS2 CC
    (122) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 203
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 204
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 192

    (52) STM -> EXPRESSION STM2 EXPRESSION .

    CP              reduce using rule 52 (STM -> EXPRESSION STM2 EXPRESSION .)


state 193

    (46) CONDITION -> IF OP STM CP OC . BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP OC . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC . BLOCKS2 CC
    (49) CONDITION -> IF OP STM CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 205
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 206
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 194

    (118) LOOP2 -> FLOAT .

    CP              reduce using rule 118 (LOOP2 -> FLOAT .)
    TO              reduce using rule 118 (LOOP2 -> FLOAT .)
    BY              reduce using rule 118 (LOOP2 -> FLOAT .)


state 195

    (117) LOOP2 -> INT .

    CP              reduce using rule 117 (LOOP2 -> INT .)
    TO              reduce using rule 117 (LOOP2 -> INT .)
    BY              reduce using rule 117 (LOOP2 -> INT .)


state 196

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC CC

    TO              shift and go to state 207


state 197

    (109) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 208


state 198

    (74) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 74 (METHODS3 -> PARAM COMMA METHODS3 .)


state 199

    (65) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .
    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHODS
    (65) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (68) METHODS2 -> . RECURSIVEBOX
    (69) METHODS2 -> . VOIDBOX
    (70) METHODS2 -> . VARIBOX
    (71) METHODS2 -> . VARFBOX
    (72) METHODS2 -> . VARSBOX
    (73) METHODS2 -> . VARLBOX

    CC              reduce using rule 65 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .)
    RECURSIVEBOX    shift and go to state 68
    VOIDBOX         shift and go to state 75
    VARIBOX         shift and go to state 74
    VARFBOX         shift and go to state 72
    VARSBOX         shift and go to state 73
    VARLBOX         shift and go to state 71

    METHODS2                       shift and go to state 76
    METHODS                        shift and go to state 209

state 200

    (94) CTE -> IDV OB INT CB .

    MULTIPLY        reduce using rule 94 (CTE -> IDV OB INT CB .)
    DIVISION        reduce using rule 94 (CTE -> IDV OB INT CB .)
    PLUS            reduce using rule 94 (CTE -> IDV OB INT CB .)
    MINUS           reduce using rule 94 (CTE -> IDV OB INT CB .)
    CP              reduce using rule 94 (CTE -> IDV OB INT CB .)
    PC              reduce using rule 94 (CTE -> IDV OB INT CB .)
    DOT             reduce using rule 94 (CTE -> IDV OB INT CB .)
    GT              reduce using rule 94 (CTE -> IDV OB INT CB .)
    GTE             reduce using rule 94 (CTE -> IDV OB INT CB .)
    LT              reduce using rule 94 (CTE -> IDV OB INT CB .)
    LTE             reduce using rule 94 (CTE -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 94 (CTE -> IDV OB INT CB .)
    LTGT            reduce using rule 94 (CTE -> IDV OB INT CB .)
    COMMA           reduce using rule 94 (CTE -> IDV OB INT CB .)


state 201

    (110) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 210


state 202

    (111) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (111) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (112) PARAMETERS -> . EXPRESSION
    (79) EXPRESSION -> . OPER
    (80) EXPRESSION -> . OPER PLUS EXPRESSION
    (81) EXPRESSION -> . OPER MINUS EXPRESSION
    (82) OPER -> . TERM
    (83) OPER -> . TERM MULTIPLY OPER
    (84) OPER -> . TERM DIVISION OPER
    (85) TERM -> . OP EXPRESSION CP
    (86) TERM -> . TERM2
    (87) TERM2 -> . CTE
    (88) TERM2 -> . PLUS CTE
    (89) TERM2 -> . MINUS CTE
    (90) CTE -> . INT
    (91) CTE -> . FLOAT
    (92) CTE -> . STRING
    (93) CTE -> . IDV
    (94) CTE -> . IDV OB INT CB

    OP              shift and go to state 136
    PLUS            shift and go to state 131
    MINUS           shift and go to state 134
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 132
    IDV             shift and go to state 130

    OPER                           shift and go to state 124
    TERM                           shift and go to state 125
    TERM2                          shift and go to state 126
    PARAMETERS                     shift and go to state 211
    CTE                            shift and go to state 129
    EXPRESSION                     shift and go to state 190

state 203

    (122) LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .

    RETURNW         reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IDV             reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPW           reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPIFW         reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IF              reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    ASKUSER         reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    SAYW            reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CALLBOXW        reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CC              reduce using rule 122 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)


state 204

    (121) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 . CC

    CC              shift and go to state 212


state 205

    (47) CONDITION -> IF OP STM CP OC CC . CONDITION2
    (49) CONDITION -> IF OP STM CP OC CC .
    (50) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (51) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    IDV             reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    LOOPW           reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    LOOPIFW         reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    IF              reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    ASKUSER         reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    SAYW            reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    CALLBOXW        reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    CC              reduce using rule 49 (CONDITION -> IF OP STM CP OC CC .)
    ELSE            shift and go to state 213

    CONDITION2                     shift and go to state 214

state 206

    (46) CONDITION -> IF OP STM CP OC BLOCKS2 . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC BLOCKS2 . CC

    CC              shift and go to state 215


state 207

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC CC
    (117) LOOP2 -> . INT
    (118) LOOP2 -> . FLOAT

    INT             shift and go to state 195
    FLOAT           shift and go to state 194

    LOOP2                          shift and go to state 216

state 208

    (109) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 217


state 209

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .

    CC              reduce using rule 66 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .)


state 210

    (110) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 110 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 211

    (111) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 111 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 212

    (121) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IDV             reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IF              reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CC              reduce using rule 121 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)


state 213

    (50) CONDITION2 -> ELSE . OC BLOCKS2 CC
    (51) CONDITION2 -> ELSE . OC CC

    OC              shift and go to state 218


state 214

    (47) CONDITION -> IF OP STM CP OC CC CONDITION2 .

    RETURNW         reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IDV             reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPW           reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPIFW         reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IF              reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    ASKUSER         reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    SAYW            reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CALLBOXW        reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CC              reduce using rule 47 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)


state 215

    (46) CONDITION -> IF OP STM CP OC BLOCKS2 CC . CONDITION2
    (48) CONDITION -> IF OP STM CP OC BLOCKS2 CC .
    (50) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (51) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IDV             reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IF              reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CC              reduce using rule 48 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ELSE            shift and go to state 213

    CONDITION2                     shift and go to state 219

state 216

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC CC

    BY              shift and go to state 221
    CP              shift and go to state 220


state 217

    (109) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 109 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 218

    (50) CONDITION2 -> ELSE OC . BLOCKS2 CC
    (51) CONDITION2 -> ELSE OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 222
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 223
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 219

    (46) CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 46 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)


state 220

    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC BLOCKS2 CC
    (116) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC CC

    OC              shift and go to state 224


state 221

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC CC
    (119) LOOP3 -> . PLUS
    (120) LOOP3 -> . MINUS

    PLUS            shift and go to state 226
    MINUS           shift and go to state 225

    LOOP3                          shift and go to state 227

state 222

    (51) CONDITION2 -> ELSE OC CC .

    RETURNW         reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    IDV             reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    LOOPW           reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    LOOPIFW         reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    IF              reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    ASKUSER         reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    SAYW            reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    CALLBOXW        reduce using rule 51 (CONDITION2 -> ELSE OC CC .)
    CC              reduce using rule 51 (CONDITION2 -> ELSE OC CC .)


state 223

    (50) CONDITION2 -> ELSE OC BLOCKS2 . CC

    CC              shift and go to state 228


state 224

    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . BLOCKS2 CC
    (116) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 229
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 230
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 225

    (120) LOOP3 -> MINUS .

    INT             reduce using rule 120 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 120 (LOOP3 -> MINUS .)


state 226

    (119) LOOP3 -> PLUS .

    INT             reduce using rule 119 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 119 (LOOP3 -> PLUS .)


state 227

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC CC
    (117) LOOP2 -> . INT
    (118) LOOP2 -> . FLOAT

    INT             shift and go to state 195
    FLOAT           shift and go to state 194

    LOOP2                          shift and go to state 231

state 228

    (50) CONDITION2 -> ELSE OC BLOCKS2 CC .

    RETURNW         reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IDV             reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPW           reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IF              reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    SAYW            reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CC              reduce using rule 50 (CONDITION2 -> ELSE OC BLOCKS2 CC .)


state 229

    (116) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .

    RETURNW         reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IDV             reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPW           reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IF              reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    SAYW            reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CC              reduce using rule 116 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)


state 230

    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 232


state 231

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC CC

    CP              shift and go to state 233


state 232

    (114) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 114 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)


state 233

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC CC

    OC              shift and go to state 234


state 234

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . BLOCKS2 CC
    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (77) RETURN -> . RETURNW EQUALS PC
    (78) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (113) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (114) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (115) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (116) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (121) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (122) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC CC
    (109) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (106) SAY -> . SAYW OP CONCAT CP PC
    (110) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 235
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 91
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 95
    SAYW            shift and go to state 77
    CALLBOXW        shift and go to state 86

    CODE                           shift and go to state 78
    RETURN                         shift and go to state 79
    ASSIGNATION                    shift and go to state 85
    ASK                            shift and go to state 83
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 236
    CALLBOX                        shift and go to state 93
    LOOPIF                         shift and go to state 94
    CONDITION                      shift and go to state 84
    LOOP                           shift and go to state 96

state 235

    (115) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .

    RETURNW         reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IDV             reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPW           reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IF              reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    SAYW            reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CC              reduce using rule 115 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)


state 236

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 237


state 237

    (113) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 113 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 60 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 60 resolved as shift
WARNING: shift/reduce conflict for IDV in state 60 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 60 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 60 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 60 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 60 resolved as shift
