Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC VARS BLOCKS CC
Rule 3     VARS -> VARI VARS
Rule 4     VARS -> VARF VARS
Rule 5     VARS -> VARST VARS
Rule 6     VARS -> VARL VARS
Rule 7     VARS -> <empty>
Rule 8     VARF -> VARFSMALL VARF3 PC
Rule 9     VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 10    VARF3 -> IDV EQUALS FLOAT
Rule 11    VARF3 -> IDV COMMA VARF3
Rule 12    VARF3 -> IDV
Rule 13    VARI -> VARISMALL VARI3 PC
Rule 14    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 15    VARI3 -> IDV EQUALS INT
Rule 16    VARI3 -> IDV COMMA VARI3
Rule 17    VARI3 -> IDV
Rule 18    VARST -> VARSTSMALL VARST3 PC
Rule 19    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 20    VARST3 -> IDV EQUALS STRING
Rule 21    VARST3 -> IDV COMMA VARST3
Rule 22    VARST3 -> IDV
Rule 23    VARL -> VARLSMALL VARL3 PC
Rule 24    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB VARL3
Rule 26    VARL4 -> CTE
Rule 27    VARL4 -> CTE COMMA VARL4
Rule 28    BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC
Rule 29    BLOCKS -> OC CC
Rule 30    BLOCKS2 -> CODE
Rule 31    BLOCKS2 -> CODE BLOCKS2
Rule 32    CODE -> RETURN
Rule 33    CODE -> ASSIGNATION
Rule 34    CODE -> LOOP
Rule 35    CODE -> LOOPIF
Rule 36    CODE -> CONDITION
Rule 37    CODE -> ASK
Rule 38    CODE -> SAY
Rule 39    CODE -> CALLBOX
Rule 40    CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2
Rule 41    CONDITION -> IF OP STM CP OC CC CONDITION2
Rule 42    CONDITION -> IF OP STM CP OC BLOCKS2 CC
Rule 43    CONDITION -> IF OP STM CP OC CC
Rule 44    CONDITION2 -> ELSE OC BLOCKS2 CC
Rule 45    CONDITION2 -> ELSE OC CC
Rule 46    STM -> EXPRESSION STM2 EXPRESSION
Rule 47    STM -> EXPRESSION
Rule 48    STM2 -> GT
Rule 49    STM2 -> GTE
Rule 50    STM2 -> LT
Rule 51    STM2 -> LTE
Rule 52    STM2 -> DOUBLEEQUALS
Rule 53    STM2 -> LTGT
Rule 54    PARAM -> PARAM2 IDV
Rule 55    PARAM2 -> VARISMALL
Rule 56    PARAM2 -> VARSTSMALL
Rule 57    PARAM2 -> VARFSMALL
Rule 58    PARAM2 -> VARLSMALL
Rule 59    METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
Rule 60    METHODS -> METHODS2 IDM OP METHODS3 CP OC CC
Rule 61    METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
Rule 62    METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS
Rule 63    METHODS2 -> RECURSIVEBOX
Rule 64    METHODS2 -> VOIDBOX
Rule 65    METHODS2 -> VARIBOX
Rule 66    METHODS2 -> VARFBOX
Rule 67    METHODS2 -> VARSBOX
Rule 68    METHODS2 -> VARLBOX
Rule 69    METHODS3 -> PARAM COMMA METHODS3
Rule 70    METHODS3 -> PARAM
Rule 71    METHODS3 -> <empty>
Rule 72    RETURN -> RETURNW EQUALS PC
Rule 73    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 74    EXPRESSION -> OPER
Rule 75    EXPRESSION -> OPER PLUS EXPRESSION
Rule 76    EXPRESSION -> OPER MINUS EXPRESSION
Rule 77    OPER -> TERM
Rule 78    OPER -> TERM MULTIPLY OPER
Rule 79    OPER -> TERM DIVISION OPER
Rule 80    TERM -> OP EXPRESSION CP
Rule 81    TERM -> TERM2
Rule 82    TERM2 -> CTE
Rule 83    TERM2 -> PLUS CTE
Rule 84    TERM2 -> MINUS CTE
Rule 85    CTE -> INT
Rule 86    CTE -> FLOAT
Rule 87    CTE -> STRING
Rule 88    CTE -> IDV
Rule 89    CTE -> IDV OB INT CB
Rule 90    SAY -> SAYW OP CONCAT CP PC
Rule 91    CONCAT -> EXPRESSION DOT CONCAT
Rule 92    CONCAT -> EXPRESSION
Rule 93    ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 94    CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 95    PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 96    PARAMETERS -> EXPRESSION
Rule 97    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
Rule 98    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
Rule 99    LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
Rule 100   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
Rule 101   LOOP2 -> INT
Rule 102   LOOP2 -> FLOAT
Rule 103   LOOP3 -> PLUS
Rule 104   LOOP3 -> MINUS
Rule 105   LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
Rule 106   LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC

Terminals, with rules where they appear

ASKUSER              : 93
BOX                  : 1 2
BY                   : 97 99
CALLBOXW             : 94
CB                   : 24 25 89
CC                   : 1 2 28 29 40 41 42 43 44 45 59 60 61 62 97 98 99 100 105 106
COMMA                : 9 11 14 16 19 21 27 69 93 94 95
CP                   : 28 40 41 42 43 59 60 61 62 80 90 93 94 97 98 99 100 105 106
DIVISION             : 79
DOT                  : 91
DOUBLEEQUALS         : 52
ELSE                 : 44 45
EQUALS               : 9 10 14 15 19 20 24 25 72 73
FLOAT                : 9 10 86 102
FROM                 : 97 98 99 100
GT                   : 48
GTE                  : 49
IDM                  : 59 60 61 62 94
IDV                  : 9 10 11 12 14 15 16 17 19 20 21 22 24 25 54 73 88 89 93 97 98 99 100
IF                   : 40 41 42 43
INT                  : 14 15 85 89 101
LOOPIFW              : 105 106
LOOPW                : 97 98 99 100
LT                   : 50
LTE                  : 51
LTGT                 : 53
MAINBOX              : 28
MINUS                : 76 84 104
MULTIPLY             : 78
OB                   : 24 25 89
OC                   : 1 2 28 29 40 41 42 43 44 45 59 60 61 62 97 98 99 100 105 106
OP                   : 28 40 41 42 43 59 60 61 62 80 90 93 94 97 98 99 100 105 106
PC                   : 8 13 18 23 72 73 90 93 94
PLUS                 : 75 83 103
RECURSIVEBOX         : 63
RETURNW              : 72
SAYW                 : 90
STRING               : 19 20 87 93
TO                   : 97 98 99 100
VARFBOX              : 66
VARFSMALL            : 8 57
VARIBOX              : 65
VARISMALL            : 13 55
VARLBOX              : 68
VARLSMALL            : 23 58
VARSBOX              : 67
VARSTSMALL           : 18 56
VOIDBOX              : 64
error                : 

Nonterminals, with rules where they appear

ASK                  : 37
ASSIGNATION          : 33
BLOCKS               : 1 2
BLOCKS2              : 28 31 40 42 44 59 61 97 98 105
BOXES                : 0
CALLBOX              : 39
CODE                 : 30 31
CONCAT               : 90 91
CONDITION            : 36
CONDITION2           : 40 41
CTE                  : 26 27 82 83 84
EXPRESSION           : 46 46 47 73 75 76 80 91 92 95 96 105 106
LOOP                 : 34
LOOP2                : 97 97 97 98 98 99 99 99 100 100
LOOP3                : 97 99
LOOPIF               : 35
METHODS              : 1 61 62
METHODS2             : 59 60 61 62
METHODS3             : 59 60 61 62 69
OPER                 : 74 75 76 78 79
PARAM                : 69 70
PARAM2               : 54
PARAMETERS           : 94 95
RETURN               : 32
SAY                  : 38
STM                  : 40 41 42 43
STM2                 : 46
TERM                 : 77 78 79
TERM2                : 81
VARF                 : 4
VARF3                : 8 9 11
VARI                 : 3
VARI3                : 13 14 16
VARL                 : 6
VARL3                : 23 25
VARL4                : 24 25 27
VARS                 : 1 2 3 4 5 6
VARST                : 5
VARST3               : 18 19 21

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS BLOCKS METHODS CC
    (2) BOXES -> . BOX OC VARS BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS BLOCKS METHODS CC
    (2) BOXES -> BOX . OC VARS BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS BLOCKS METHODS CC
    (2) BOXES -> BOX OC . VARS BLOCKS CC
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 4
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 4

    (1) BOXES -> BOX OC VARS . BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS . BLOCKS CC
    (28) BLOCKS -> . MAINBOX OP CP OC BLOCKS2 CC
    (29) BLOCKS -> . OC CC

    MAINBOX         shift and go to state 14
    OC              shift and go to state 15

    BLOCKS                         shift and go to state 13

state 5

    (13) VARI -> VARISMALL . VARI3 PC
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 17

state 6

    (18) VARST -> VARSTSMALL . VARST3 PC
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 18

state 7

    (4) VARS -> VARF . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 20
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 8

    (5) VARS -> VARST . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 21
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 9

    (6) VARS -> VARL . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 22
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 10

    (23) VARL -> VARLSMALL . VARL3 PC
    (24) VARL3 -> . IDV EQUALS OB VARL4 CB
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB VARL3

    IDV             shift and go to state 24

    VARL3                          shift and go to state 23

state 11

    (3) VARS -> VARI . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 25
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 12

    (8) VARF -> VARFSMALL . VARF3 PC
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 27

state 13

    (1) BOXES -> BOX OC VARS BLOCKS . METHODS CC
    (2) BOXES -> BOX OC VARS BLOCKS . CC
    (59) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (61) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (63) METHODS2 -> . RECURSIVEBOX
    (64) METHODS2 -> . VOIDBOX
    (65) METHODS2 -> . VARIBOX
    (66) METHODS2 -> . VARFBOX
    (67) METHODS2 -> . VARSBOX
    (68) METHODS2 -> . VARLBOX

    CC              shift and go to state 30
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS                        shift and go to state 29
    METHODS2                       shift and go to state 36

state 14

    (28) BLOCKS -> MAINBOX . OP CP OC BLOCKS2 CC

    OP              shift and go to state 37


state 15

    (29) BLOCKS -> OC . CC

    CC              shift and go to state 38


state 16

    (14) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (15) VARI3 -> IDV . EQUALS INT
    (16) VARI3 -> IDV . COMMA VARI3
    (17) VARI3 -> IDV .

    EQUALS          shift and go to state 40
    COMMA           shift and go to state 39
    PC              reduce using rule 17 (VARI3 -> IDV .)


state 17

    (13) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 41


state 18

    (18) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 42


state 19

    (19) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (20) VARST3 -> IDV . EQUALS STRING
    (21) VARST3 -> IDV . COMMA VARST3
    (22) VARST3 -> IDV .

    EQUALS          shift and go to state 44
    COMMA           shift and go to state 43
    PC              reduce using rule 22 (VARST3 -> IDV .)


state 20

    (4) VARS -> VARF VARS .

    MAINBOX         reduce using rule 4 (VARS -> VARF VARS .)
    OC              reduce using rule 4 (VARS -> VARF VARS .)


state 21

    (5) VARS -> VARST VARS .

    MAINBOX         reduce using rule 5 (VARS -> VARST VARS .)
    OC              reduce using rule 5 (VARS -> VARST VARS .)


state 22

    (6) VARS -> VARL VARS .

    MAINBOX         reduce using rule 6 (VARS -> VARL VARS .)
    OC              reduce using rule 6 (VARS -> VARL VARS .)


state 23

    (23) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 45


state 24

    (24) VARL3 -> IDV . EQUALS OB VARL4 CB
    (25) VARL3 -> IDV . EQUALS OB VARL4 CB VARL3

    EQUALS          shift and go to state 46


state 25

    (3) VARS -> VARI VARS .

    MAINBOX         reduce using rule 3 (VARS -> VARI VARS .)
    OC              reduce using rule 3 (VARS -> VARI VARS .)


state 26

    (9) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> IDV . EQUALS FLOAT
    (11) VARF3 -> IDV . COMMA VARF3
    (12) VARF3 -> IDV .

    EQUALS          shift and go to state 48
    COMMA           shift and go to state 47
    PC              reduce using rule 12 (VARF3 -> IDV .)


state 27

    (8) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 49


state 28

    (63) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 63 (METHODS2 -> RECURSIVEBOX .)


state 29

    (1) BOXES -> BOX OC VARS BLOCKS METHODS . CC

    CC              shift and go to state 50


state 30

    (2) BOXES -> BOX OC VARS BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS BLOCKS CC .)


state 31

    (65) METHODS2 -> VARIBOX .

    IDM             reduce using rule 65 (METHODS2 -> VARIBOX .)


state 32

    (68) METHODS2 -> VARLBOX .

    IDM             reduce using rule 68 (METHODS2 -> VARLBOX .)


state 33

    (66) METHODS2 -> VARFBOX .

    IDM             reduce using rule 66 (METHODS2 -> VARFBOX .)


state 34

    (67) METHODS2 -> VARSBOX .

    IDM             reduce using rule 67 (METHODS2 -> VARSBOX .)


state 35

    (64) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 64 (METHODS2 -> VOIDBOX .)


state 36

    (59) METHODS -> METHODS2 . IDM OP METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> METHODS2 . IDM OP METHODS3 CP OC CC
    (61) METHODS -> METHODS2 . IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 . IDM OP METHODS3 CP OC CC METHODS

    IDM             shift and go to state 51


state 37

    (28) BLOCKS -> MAINBOX OP . CP OC BLOCKS2 CC

    CP              shift and go to state 52


state 38

    (29) BLOCKS -> OC CC .

    CC              reduce using rule 29 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 29 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 29 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 29 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 29 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 29 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 29 (BLOCKS -> OC CC .)


state 39

    (16) VARI3 -> IDV COMMA . VARI3
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 53

state 40

    (14) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (15) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 54


state 41

    (13) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    OC              reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)


state 42

    (18) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    OC              reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)


state 43

    (21) VARST3 -> IDV COMMA . VARST3
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 55

state 44

    (19) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (20) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 56


state 45

    (23) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    OC              reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)


state 46

    (24) VARL3 -> IDV EQUALS . OB VARL4 CB
    (25) VARL3 -> IDV EQUALS . OB VARL4 CB VARL3

    OB              shift and go to state 57


state 47

    (11) VARF3 -> IDV COMMA . VARF3
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 58

state 48

    (9) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (10) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 59


state 49

    (8) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    OC              reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)


state 50

    (1) BOXES -> BOX OC VARS BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS BLOCKS METHODS CC .)


state 51

    (59) METHODS -> METHODS2 IDM . OP METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> METHODS2 IDM . OP METHODS3 CP OC CC
    (61) METHODS -> METHODS2 IDM . OP METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 IDM . OP METHODS3 CP OC CC METHODS

    OP              shift and go to state 60


state 52

    (28) BLOCKS -> MAINBOX OP CP . OC BLOCKS2 CC

    OC              shift and go to state 61


state 53

    (16) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 16 (VARI3 -> IDV COMMA VARI3 .)


state 54

    (14) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (15) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 62
    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT .)


state 55

    (21) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 21 (VARST3 -> IDV COMMA VARST3 .)


state 56

    (19) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (20) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 63
    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING .)


state 57

    (24) VARL3 -> IDV EQUALS OB . VARL4 CB
    (25) VARL3 -> IDV EQUALS OB . VARL4 CB VARL3
    (26) VARL4 -> . CTE
    (27) VARL4 -> . CTE COMMA VARL4
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    VARL4                          shift and go to state 65
    CTE                            shift and go to state 68

state 58

    (11) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 11 (VARF3 -> IDV COMMA VARF3 .)


state 59

    (9) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (10) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 70
    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT .)


state 60

    (59) METHODS -> METHODS2 IDM OP . METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> METHODS2 IDM OP . METHODS3 CP OC CC
    (61) METHODS -> METHODS2 IDM OP . METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 IDM OP . METHODS3 CP OC CC METHODS
    (69) METHODS3 -> . PARAM COMMA METHODS3
    (70) METHODS3 -> . PARAM
    (71) METHODS3 -> .
    (54) PARAM -> . PARAM2 IDV
    (55) PARAM2 -> . VARISMALL
    (56) PARAM2 -> . VARSTSMALL
    (57) PARAM2 -> . VARFSMALL
    (58) PARAM2 -> . VARLSMALL

    CP              reduce using rule 71 (METHODS3 -> .)
    VARISMALL       shift and go to state 72
    VARSTSMALL      shift and go to state 73
    VARFSMALL       shift and go to state 75
    VARLSMALL       shift and go to state 71

    PARAM                          shift and go to state 74
    PARAM2                         shift and go to state 76
    METHODS3                       shift and go to state 77

state 61

    (28) BLOCKS -> MAINBOX OP CP OC . BLOCKS2 CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 91
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 62

    (14) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 96

state 63

    (19) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 97

state 64

    (87) CTE -> STRING .

    COMMA           reduce using rule 87 (CTE -> STRING .)
    CB              reduce using rule 87 (CTE -> STRING .)
    MULTIPLY        reduce using rule 87 (CTE -> STRING .)
    DIVISION        reduce using rule 87 (CTE -> STRING .)
    PLUS            reduce using rule 87 (CTE -> STRING .)
    MINUS           reduce using rule 87 (CTE -> STRING .)
    DOT             reduce using rule 87 (CTE -> STRING .)
    CP              reduce using rule 87 (CTE -> STRING .)
    PC              reduce using rule 87 (CTE -> STRING .)
    GT              reduce using rule 87 (CTE -> STRING .)
    GTE             reduce using rule 87 (CTE -> STRING .)
    LT              reduce using rule 87 (CTE -> STRING .)
    LTE             reduce using rule 87 (CTE -> STRING .)
    DOUBLEEQUALS    reduce using rule 87 (CTE -> STRING .)
    LTGT            reduce using rule 87 (CTE -> STRING .)


state 65

    (24) VARL3 -> IDV EQUALS OB VARL4 . CB
    (25) VARL3 -> IDV EQUALS OB VARL4 . CB VARL3

    CB              shift and go to state 98


state 66

    (88) CTE -> IDV .
    (89) CTE -> IDV . OB INT CB

    COMMA           reduce using rule 88 (CTE -> IDV .)
    CB              reduce using rule 88 (CTE -> IDV .)
    MULTIPLY        reduce using rule 88 (CTE -> IDV .)
    DIVISION        reduce using rule 88 (CTE -> IDV .)
    PLUS            reduce using rule 88 (CTE -> IDV .)
    MINUS           reduce using rule 88 (CTE -> IDV .)
    DOT             reduce using rule 88 (CTE -> IDV .)
    CP              reduce using rule 88 (CTE -> IDV .)
    PC              reduce using rule 88 (CTE -> IDV .)
    GT              reduce using rule 88 (CTE -> IDV .)
    GTE             reduce using rule 88 (CTE -> IDV .)
    LT              reduce using rule 88 (CTE -> IDV .)
    LTE             reduce using rule 88 (CTE -> IDV .)
    DOUBLEEQUALS    reduce using rule 88 (CTE -> IDV .)
    LTGT            reduce using rule 88 (CTE -> IDV .)
    OB              shift and go to state 99


state 67

    (86) CTE -> FLOAT .

    COMMA           reduce using rule 86 (CTE -> FLOAT .)
    CB              reduce using rule 86 (CTE -> FLOAT .)
    MULTIPLY        reduce using rule 86 (CTE -> FLOAT .)
    DIVISION        reduce using rule 86 (CTE -> FLOAT .)
    PLUS            reduce using rule 86 (CTE -> FLOAT .)
    MINUS           reduce using rule 86 (CTE -> FLOAT .)
    DOT             reduce using rule 86 (CTE -> FLOAT .)
    CP              reduce using rule 86 (CTE -> FLOAT .)
    PC              reduce using rule 86 (CTE -> FLOAT .)
    GT              reduce using rule 86 (CTE -> FLOAT .)
    GTE             reduce using rule 86 (CTE -> FLOAT .)
    LT              reduce using rule 86 (CTE -> FLOAT .)
    LTE             reduce using rule 86 (CTE -> FLOAT .)
    DOUBLEEQUALS    reduce using rule 86 (CTE -> FLOAT .)
    LTGT            reduce using rule 86 (CTE -> FLOAT .)


state 68

    (26) VARL4 -> CTE .
    (27) VARL4 -> CTE . COMMA VARL4

    CB              reduce using rule 26 (VARL4 -> CTE .)
    COMMA           shift and go to state 100


state 69

    (85) CTE -> INT .

    COMMA           reduce using rule 85 (CTE -> INT .)
    CB              reduce using rule 85 (CTE -> INT .)
    MULTIPLY        reduce using rule 85 (CTE -> INT .)
    DIVISION        reduce using rule 85 (CTE -> INT .)
    PLUS            reduce using rule 85 (CTE -> INT .)
    MINUS           reduce using rule 85 (CTE -> INT .)
    DOT             reduce using rule 85 (CTE -> INT .)
    CP              reduce using rule 85 (CTE -> INT .)
    PC              reduce using rule 85 (CTE -> INT .)
    GT              reduce using rule 85 (CTE -> INT .)
    GTE             reduce using rule 85 (CTE -> INT .)
    LT              reduce using rule 85 (CTE -> INT .)
    LTE             reduce using rule 85 (CTE -> INT .)
    DOUBLEEQUALS    reduce using rule 85 (CTE -> INT .)
    LTGT            reduce using rule 85 (CTE -> INT .)


state 70

    (9) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 101

state 71

    (58) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 58 (PARAM2 -> VARLSMALL .)


state 72

    (55) PARAM2 -> VARISMALL .

    IDV             reduce using rule 55 (PARAM2 -> VARISMALL .)


state 73

    (56) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 56 (PARAM2 -> VARSTSMALL .)


state 74

    (69) METHODS3 -> PARAM . COMMA METHODS3
    (70) METHODS3 -> PARAM .

    COMMA           shift and go to state 102
    CP              reduce using rule 70 (METHODS3 -> PARAM .)


state 75

    (57) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 57 (PARAM2 -> VARFSMALL .)


state 76

    (54) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 103


state 77

    (59) METHODS -> METHODS2 IDM OP METHODS3 . CP OC BLOCKS2 CC
    (60) METHODS -> METHODS2 IDM OP METHODS3 . CP OC CC
    (61) METHODS -> METHODS2 IDM OP METHODS3 . CP OC BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 IDM OP METHODS3 . CP OC CC METHODS

    CP              shift and go to state 104


state 78

    (90) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 105


state 79

    (30) BLOCKS2 -> CODE .
    (31) BLOCKS2 -> CODE . BLOCKS2
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 30 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 106
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 80

    (32) CODE -> RETURN .

    RETURNW         reduce using rule 32 (CODE -> RETURN .)
    IDV             reduce using rule 32 (CODE -> RETURN .)
    LOOPW           reduce using rule 32 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 32 (CODE -> RETURN .)
    IF              reduce using rule 32 (CODE -> RETURN .)
    ASKUSER         reduce using rule 32 (CODE -> RETURN .)
    SAYW            reduce using rule 32 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 32 (CODE -> RETURN .)
    CC              reduce using rule 32 (CODE -> RETURN .)


state 81

    (73) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 107


state 82

    (38) CODE -> SAY .

    RETURNW         reduce using rule 38 (CODE -> SAY .)
    IDV             reduce using rule 38 (CODE -> SAY .)
    LOOPW           reduce using rule 38 (CODE -> SAY .)
    LOOPIFW         reduce using rule 38 (CODE -> SAY .)
    IF              reduce using rule 38 (CODE -> SAY .)
    ASKUSER         reduce using rule 38 (CODE -> SAY .)
    SAYW            reduce using rule 38 (CODE -> SAY .)
    CALLBOXW        reduce using rule 38 (CODE -> SAY .)
    CC              reduce using rule 38 (CODE -> SAY .)


state 83

    (37) CODE -> ASK .

    RETURNW         reduce using rule 37 (CODE -> ASK .)
    IDV             reduce using rule 37 (CODE -> ASK .)
    LOOPW           reduce using rule 37 (CODE -> ASK .)
    LOOPIFW         reduce using rule 37 (CODE -> ASK .)
    IF              reduce using rule 37 (CODE -> ASK .)
    ASKUSER         reduce using rule 37 (CODE -> ASK .)
    SAYW            reduce using rule 37 (CODE -> ASK .)
    CALLBOXW        reduce using rule 37 (CODE -> ASK .)
    CC              reduce using rule 37 (CODE -> ASK .)


state 84

    (97) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC CC

    OP              shift and go to state 108


state 85

    (36) CODE -> CONDITION .

    RETURNW         reduce using rule 36 (CODE -> CONDITION .)
    IDV             reduce using rule 36 (CODE -> CONDITION .)
    LOOPW           reduce using rule 36 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 36 (CODE -> CONDITION .)
    IF              reduce using rule 36 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 36 (CODE -> CONDITION .)
    SAYW            reduce using rule 36 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 36 (CODE -> CONDITION .)
    CC              reduce using rule 36 (CODE -> CONDITION .)


state 86

    (33) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 33 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 33 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 33 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 33 (CODE -> ASSIGNATION .)
    IF              reduce using rule 33 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 33 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 33 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 33 (CODE -> ASSIGNATION .)
    CC              reduce using rule 33 (CODE -> ASSIGNATION .)


state 87

    (94) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 109


state 88

    (105) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC CC

    OP              shift and go to state 110


state 89

    (72) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 111


state 90

    (40) CONDITION -> IF . OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> IF . OP STM CP OC CC CONDITION2
    (42) CONDITION -> IF . OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> IF . OP STM CP OC CC

    OP              shift and go to state 112


state 91

    (28) BLOCKS -> MAINBOX OP CP OC BLOCKS2 . CC

    CC              shift and go to state 113


state 92

    (39) CODE -> CALLBOX .

    RETURNW         reduce using rule 39 (CODE -> CALLBOX .)
    IDV             reduce using rule 39 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 39 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 39 (CODE -> CALLBOX .)
    IF              reduce using rule 39 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 39 (CODE -> CALLBOX .)
    SAYW            reduce using rule 39 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 39 (CODE -> CALLBOX .)
    CC              reduce using rule 39 (CODE -> CALLBOX .)


state 93

    (35) CODE -> LOOPIF .

    RETURNW         reduce using rule 35 (CODE -> LOOPIF .)
    IDV             reduce using rule 35 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 35 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 35 (CODE -> LOOPIF .)
    IF              reduce using rule 35 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 35 (CODE -> LOOPIF .)
    SAYW            reduce using rule 35 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 35 (CODE -> LOOPIF .)
    CC              reduce using rule 35 (CODE -> LOOPIF .)


state 94

    (93) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 114


state 95

    (34) CODE -> LOOP .

    RETURNW         reduce using rule 34 (CODE -> LOOP .)
    IDV             reduce using rule 34 (CODE -> LOOP .)
    LOOPW           reduce using rule 34 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 34 (CODE -> LOOP .)
    IF              reduce using rule 34 (CODE -> LOOP .)
    ASKUSER         reduce using rule 34 (CODE -> LOOP .)
    SAYW            reduce using rule 34 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 34 (CODE -> LOOP .)
    CC              reduce using rule 34 (CODE -> LOOP .)


state 96

    (14) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 14 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 97

    (19) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 19 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 98

    (24) VARL3 -> IDV EQUALS OB VARL4 CB .
    (25) VARL3 -> IDV EQUALS OB VARL4 CB . VARL3
    (24) VARL3 -> . IDV EQUALS OB VARL4 CB
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB VARL3

    PC              reduce using rule 24 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    IDV             shift and go to state 24

    VARL3                          shift and go to state 115

state 99

    (89) CTE -> IDV OB . INT CB

    INT             shift and go to state 116


state 100

    (27) VARL4 -> CTE COMMA . VARL4
    (26) VARL4 -> . CTE
    (27) VARL4 -> . CTE COMMA VARL4
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    CTE                            shift and go to state 68
    VARL4                          shift and go to state 117

state 101

    (9) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 9 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 102

    (69) METHODS3 -> PARAM COMMA . METHODS3
    (69) METHODS3 -> . PARAM COMMA METHODS3
    (70) METHODS3 -> . PARAM
    (71) METHODS3 -> .
    (54) PARAM -> . PARAM2 IDV
    (55) PARAM2 -> . VARISMALL
    (56) PARAM2 -> . VARSTSMALL
    (57) PARAM2 -> . VARFSMALL
    (58) PARAM2 -> . VARLSMALL

    CP              reduce using rule 71 (METHODS3 -> .)
    VARISMALL       shift and go to state 72
    VARSTSMALL      shift and go to state 73
    VARFSMALL       shift and go to state 75
    VARLSMALL       shift and go to state 71

    METHODS3                       shift and go to state 118
    PARAM                          shift and go to state 74
    PARAM2                         shift and go to state 76

state 103

    (54) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 54 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 54 (PARAM -> PARAM2 IDV .)


state 104

    (59) METHODS -> METHODS2 IDM OP METHODS3 CP . OC BLOCKS2 CC
    (60) METHODS -> METHODS2 IDM OP METHODS3 CP . OC CC
    (61) METHODS -> METHODS2 IDM OP METHODS3 CP . OC BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 IDM OP METHODS3 CP . OC CC METHODS

    OC              shift and go to state 119


state 105

    (90) SAY -> SAYW OP . CONCAT CP PC
    (91) CONCAT -> . EXPRESSION DOT CONCAT
    (92) CONCAT -> . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 125
    CONCAT                         shift and go to state 127

state 106

    (31) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 31 (BLOCKS2 -> CODE BLOCKS2 .)


state 107

    (73) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    EXPRESSION                     shift and go to state 129
    TERM2                          shift and go to state 122

state 108

    (97) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC CC

    IDV             shift and go to state 130


state 109

    (94) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 131


state 110

    (105) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC CC
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 132

state 111

    (72) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 133


state 112

    (40) CONDITION -> IF OP . STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> IF OP . STM CP OC CC CONDITION2
    (42) CONDITION -> IF OP . STM CP OC BLOCKS2 CC
    (43) CONDITION -> IF OP . STM CP OC CC
    (46) STM -> . EXPRESSION STM2 EXPRESSION
    (47) STM -> . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    STM                            shift and go to state 135
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 134

state 113

    (28) BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .

    CC              reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 28 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)


state 114

    (93) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 136


state 115

    (25) VARL3 -> IDV EQUALS OB VARL4 CB VARL3 .

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB VARL3 .)


state 116

    (89) CTE -> IDV OB INT . CB

    CB              shift and go to state 137


state 117

    (27) VARL4 -> CTE COMMA VARL4 .

    CB              reduce using rule 27 (VARL4 -> CTE COMMA VARL4 .)


state 118

    (69) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 69 (METHODS3 -> PARAM COMMA METHODS3 .)


state 119

    (59) METHODS -> METHODS2 IDM OP METHODS3 CP OC . BLOCKS2 CC
    (60) METHODS -> METHODS2 IDM OP METHODS3 CP OC . CC
    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC . BLOCKS2 CC METHODS
    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC . CC METHODS
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 138
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 139
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95
    ASSIGNATION                    shift and go to state 86

state 120

    (74) EXPRESSION -> OPER .
    (75) EXPRESSION -> OPER . PLUS EXPRESSION
    (76) EXPRESSION -> OPER . MINUS EXPRESSION

    DOT             reduce using rule 74 (EXPRESSION -> OPER .)
    CP              reduce using rule 74 (EXPRESSION -> OPER .)
    GT              reduce using rule 74 (EXPRESSION -> OPER .)
    GTE             reduce using rule 74 (EXPRESSION -> OPER .)
    LT              reduce using rule 74 (EXPRESSION -> OPER .)
    LTE             reduce using rule 74 (EXPRESSION -> OPER .)
    DOUBLEEQUALS    reduce using rule 74 (EXPRESSION -> OPER .)
    LTGT            reduce using rule 74 (EXPRESSION -> OPER .)
    PC              reduce using rule 74 (EXPRESSION -> OPER .)
    COMMA           reduce using rule 74 (EXPRESSION -> OPER .)
    PLUS            shift and go to state 140
    MINUS           shift and go to state 141


state 121

    (77) OPER -> TERM .
    (78) OPER -> TERM . MULTIPLY OPER
    (79) OPER -> TERM . DIVISION OPER

    PLUS            reduce using rule 77 (OPER -> TERM .)
    MINUS           reduce using rule 77 (OPER -> TERM .)
    COMMA           reduce using rule 77 (OPER -> TERM .)
    CP              reduce using rule 77 (OPER -> TERM .)
    DOT             reduce using rule 77 (OPER -> TERM .)
    PC              reduce using rule 77 (OPER -> TERM .)
    GT              reduce using rule 77 (OPER -> TERM .)
    GTE             reduce using rule 77 (OPER -> TERM .)
    LT              reduce using rule 77 (OPER -> TERM .)
    LTE             reduce using rule 77 (OPER -> TERM .)
    DOUBLEEQUALS    reduce using rule 77 (OPER -> TERM .)
    LTGT            reduce using rule 77 (OPER -> TERM .)
    MULTIPLY        shift and go to state 142
    DIVISION        shift and go to state 143


state 122

    (81) TERM -> TERM2 .

    MULTIPLY        reduce using rule 81 (TERM -> TERM2 .)
    DIVISION        reduce using rule 81 (TERM -> TERM2 .)
    PLUS            reduce using rule 81 (TERM -> TERM2 .)
    MINUS           reduce using rule 81 (TERM -> TERM2 .)
    DOT             reduce using rule 81 (TERM -> TERM2 .)
    CP              reduce using rule 81 (TERM -> TERM2 .)
    PC              reduce using rule 81 (TERM -> TERM2 .)
    GT              reduce using rule 81 (TERM -> TERM2 .)
    GTE             reduce using rule 81 (TERM -> TERM2 .)
    LT              reduce using rule 81 (TERM -> TERM2 .)
    LTE             reduce using rule 81 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 81 (TERM -> TERM2 .)
    LTGT            reduce using rule 81 (TERM -> TERM2 .)
    COMMA           reduce using rule 81 (TERM -> TERM2 .)


state 123

    (82) TERM2 -> CTE .

    MULTIPLY        reduce using rule 82 (TERM2 -> CTE .)
    DIVISION        reduce using rule 82 (TERM2 -> CTE .)
    PLUS            reduce using rule 82 (TERM2 -> CTE .)
    MINUS           reduce using rule 82 (TERM2 -> CTE .)
    GT              reduce using rule 82 (TERM2 -> CTE .)
    GTE             reduce using rule 82 (TERM2 -> CTE .)
    LT              reduce using rule 82 (TERM2 -> CTE .)
    LTE             reduce using rule 82 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 82 (TERM2 -> CTE .)
    LTGT            reduce using rule 82 (TERM2 -> CTE .)
    CP              reduce using rule 82 (TERM2 -> CTE .)
    DOT             reduce using rule 82 (TERM2 -> CTE .)
    PC              reduce using rule 82 (TERM2 -> CTE .)
    COMMA           reduce using rule 82 (TERM2 -> CTE .)


state 124

    (83) TERM2 -> PLUS . CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    CTE                            shift and go to state 144

state 125

    (91) CONCAT -> EXPRESSION . DOT CONCAT
    (92) CONCAT -> EXPRESSION .

    DOT             shift and go to state 145
    CP              reduce using rule 92 (CONCAT -> EXPRESSION .)


state 126

    (84) TERM2 -> MINUS . CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    CTE                            shift and go to state 146

state 127

    (90) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 147


state 128

    (80) TERM -> OP . EXPRESSION CP
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    EXPRESSION                     shift and go to state 148
    TERM2                          shift and go to state 122

state 129

    (73) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 149


state 130

    (97) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC CC

    FROM            shift and go to state 150


state 131

    (94) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 151


state 132

    (105) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC BLOCKS2 CC
    (106) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC CC

    CP              shift and go to state 152


state 133

    (72) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 72 (RETURN -> RETURNW EQUALS PC .)


state 134

    (46) STM -> EXPRESSION . STM2 EXPRESSION
    (47) STM -> EXPRESSION .
    (48) STM2 -> . GT
    (49) STM2 -> . GTE
    (50) STM2 -> . LT
    (51) STM2 -> . LTE
    (52) STM2 -> . DOUBLEEQUALS
    (53) STM2 -> . LTGT

    CP              reduce using rule 47 (STM -> EXPRESSION .)
    GT              shift and go to state 153
    GTE             shift and go to state 154
    LT              shift and go to state 156
    LTE             shift and go to state 158
    DOUBLEEQUALS    shift and go to state 159
    LTGT            shift and go to state 157

    STM2                           shift and go to state 155

state 135

    (40) CONDITION -> IF OP STM . CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> IF OP STM . CP OC CC CONDITION2
    (42) CONDITION -> IF OP STM . CP OC BLOCKS2 CC
    (43) CONDITION -> IF OP STM . CP OC CC

    CP              shift and go to state 160


state 136

    (93) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 161


state 137

    (89) CTE -> IDV OB INT CB .

    COMMA           reduce using rule 89 (CTE -> IDV OB INT CB .)
    CB              reduce using rule 89 (CTE -> IDV OB INT CB .)
    MULTIPLY        reduce using rule 89 (CTE -> IDV OB INT CB .)
    DIVISION        reduce using rule 89 (CTE -> IDV OB INT CB .)
    PLUS            reduce using rule 89 (CTE -> IDV OB INT CB .)
    MINUS           reduce using rule 89 (CTE -> IDV OB INT CB .)
    DOT             reduce using rule 89 (CTE -> IDV OB INT CB .)
    CP              reduce using rule 89 (CTE -> IDV OB INT CB .)
    PC              reduce using rule 89 (CTE -> IDV OB INT CB .)
    GT              reduce using rule 89 (CTE -> IDV OB INT CB .)
    GTE             reduce using rule 89 (CTE -> IDV OB INT CB .)
    LT              reduce using rule 89 (CTE -> IDV OB INT CB .)
    LTE             reduce using rule 89 (CTE -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 89 (CTE -> IDV OB INT CB .)
    LTGT            reduce using rule 89 (CTE -> IDV OB INT CB .)


state 138

    (60) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .
    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC . METHODS
    (59) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (61) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (63) METHODS2 -> . RECURSIVEBOX
    (64) METHODS2 -> . VOIDBOX
    (65) METHODS2 -> . VARIBOX
    (66) METHODS2 -> . VARFBOX
    (67) METHODS2 -> . VARSBOX
    (68) METHODS2 -> . VARLBOX

    CC              reduce using rule 60 (METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .)
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS2                       shift and go to state 36
    METHODS                        shift and go to state 162

state 139

    (59) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 . CC
    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 . CC METHODS

    CC              shift and go to state 163


state 140

    (75) EXPRESSION -> OPER PLUS . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    EXPRESSION                     shift and go to state 164
    TERM2                          shift and go to state 122

state 141

    (76) EXPRESSION -> OPER MINUS . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    EXPRESSION                     shift and go to state 165
    TERM2                          shift and go to state 122

state 142

    (78) OPER -> TERM MULTIPLY . OPER
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 166
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122

state 143

    (79) OPER -> TERM DIVISION . OPER
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 167
    CTE                            shift and go to state 123
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122

state 144

    (83) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 83 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 83 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 83 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 83 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 83 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 83 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 83 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 83 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 83 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 83 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 83 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 83 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 83 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 83 (TERM2 -> PLUS CTE .)


state 145

    (91) CONCAT -> EXPRESSION DOT . CONCAT
    (91) CONCAT -> . EXPRESSION DOT CONCAT
    (92) CONCAT -> . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 125
    CONCAT                         shift and go to state 168

state 146

    (84) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 84 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 84 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 84 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 84 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 84 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 84 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 84 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 84 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 84 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 84 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 84 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 84 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 84 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 84 (TERM2 -> MINUS CTE .)


state 147

    (90) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 169


state 148

    (80) TERM -> OP EXPRESSION . CP

    CP              shift and go to state 170


state 149

    (73) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 73 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 150

    (97) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC CC
    (101) LOOP2 -> . INT
    (102) LOOP2 -> . FLOAT

    INT             shift and go to state 172
    FLOAT           shift and go to state 171

    LOOP2                          shift and go to state 173

state 151

    (94) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (95) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (96) PARAMETERS -> . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    PARAMETERS                     shift and go to state 174
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 175

state 152

    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC BLOCKS2 CC
    (106) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC CC

    OC              shift and go to state 176


state 153

    (48) STM2 -> GT .

    OP              reduce using rule 48 (STM2 -> GT .)
    PLUS            reduce using rule 48 (STM2 -> GT .)
    MINUS           reduce using rule 48 (STM2 -> GT .)
    INT             reduce using rule 48 (STM2 -> GT .)
    FLOAT           reduce using rule 48 (STM2 -> GT .)
    STRING          reduce using rule 48 (STM2 -> GT .)
    IDV             reduce using rule 48 (STM2 -> GT .)


state 154

    (49) STM2 -> GTE .

    OP              reduce using rule 49 (STM2 -> GTE .)
    PLUS            reduce using rule 49 (STM2 -> GTE .)
    MINUS           reduce using rule 49 (STM2 -> GTE .)
    INT             reduce using rule 49 (STM2 -> GTE .)
    FLOAT           reduce using rule 49 (STM2 -> GTE .)
    STRING          reduce using rule 49 (STM2 -> GTE .)
    IDV             reduce using rule 49 (STM2 -> GTE .)


state 155

    (46) STM -> EXPRESSION STM2 . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 177

state 156

    (50) STM2 -> LT .

    OP              reduce using rule 50 (STM2 -> LT .)
    PLUS            reduce using rule 50 (STM2 -> LT .)
    MINUS           reduce using rule 50 (STM2 -> LT .)
    INT             reduce using rule 50 (STM2 -> LT .)
    FLOAT           reduce using rule 50 (STM2 -> LT .)
    STRING          reduce using rule 50 (STM2 -> LT .)
    IDV             reduce using rule 50 (STM2 -> LT .)


state 157

    (53) STM2 -> LTGT .

    OP              reduce using rule 53 (STM2 -> LTGT .)
    PLUS            reduce using rule 53 (STM2 -> LTGT .)
    MINUS           reduce using rule 53 (STM2 -> LTGT .)
    INT             reduce using rule 53 (STM2 -> LTGT .)
    FLOAT           reduce using rule 53 (STM2 -> LTGT .)
    STRING          reduce using rule 53 (STM2 -> LTGT .)
    IDV             reduce using rule 53 (STM2 -> LTGT .)


state 158

    (51) STM2 -> LTE .

    OP              reduce using rule 51 (STM2 -> LTE .)
    PLUS            reduce using rule 51 (STM2 -> LTE .)
    MINUS           reduce using rule 51 (STM2 -> LTE .)
    INT             reduce using rule 51 (STM2 -> LTE .)
    FLOAT           reduce using rule 51 (STM2 -> LTE .)
    STRING          reduce using rule 51 (STM2 -> LTE .)
    IDV             reduce using rule 51 (STM2 -> LTE .)


state 159

    (52) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 52 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 52 (STM2 -> DOUBLEEQUALS .)


state 160

    (40) CONDITION -> IF OP STM CP . OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> IF OP STM CP . OC CC CONDITION2
    (42) CONDITION -> IF OP STM CP . OC BLOCKS2 CC
    (43) CONDITION -> IF OP STM CP . OC CC

    OC              shift and go to state 178


state 161

    (93) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 179


state 162

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS .

    CC              reduce using rule 62 (METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS .)


state 163

    (59) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .
    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC . METHODS
    (59) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (60) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (61) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (63) METHODS2 -> . RECURSIVEBOX
    (64) METHODS2 -> . VOIDBOX
    (65) METHODS2 -> . VARIBOX
    (66) METHODS2 -> . VARFBOX
    (67) METHODS2 -> . VARSBOX
    (68) METHODS2 -> . VARLBOX

    CC              reduce using rule 59 (METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .)
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS2                       shift and go to state 36
    METHODS                        shift and go to state 180

state 164

    (75) EXPRESSION -> OPER PLUS EXPRESSION .

    DOT             reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    CP              reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GT              reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GTE             reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LT              reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTE             reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTGT            reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    PC              reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)
    COMMA           reduce using rule 75 (EXPRESSION -> OPER PLUS EXPRESSION .)


state 165

    (76) EXPRESSION -> OPER MINUS EXPRESSION .

    DOT             reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    CP              reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GT              reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GTE             reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LT              reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTE             reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTGT            reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    PC              reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)
    COMMA           reduce using rule 76 (EXPRESSION -> OPER MINUS EXPRESSION .)


state 166

    (78) OPER -> TERM MULTIPLY OPER .

    PLUS            reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    MINUS           reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    COMMA           reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    CP              reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    DOT             reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    PC              reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    GT              reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    GTE             reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    LT              reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    LTE             reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    DOUBLEEQUALS    reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)
    LTGT            reduce using rule 78 (OPER -> TERM MULTIPLY OPER .)


state 167

    (79) OPER -> TERM DIVISION OPER .

    PLUS            reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    MINUS           reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    COMMA           reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    CP              reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    DOT             reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    PC              reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    GT              reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    GTE             reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    LT              reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    LTE             reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    DOUBLEEQUALS    reduce using rule 79 (OPER -> TERM DIVISION OPER .)
    LTGT            reduce using rule 79 (OPER -> TERM DIVISION OPER .)


state 168

    (91) CONCAT -> EXPRESSION DOT CONCAT .

    CP              reduce using rule 91 (CONCAT -> EXPRESSION DOT CONCAT .)


state 169

    (90) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 90 (SAY -> SAYW OP CONCAT CP PC .)


state 170

    (80) TERM -> OP EXPRESSION CP .

    MULTIPLY        reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    DIVISION        reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    PLUS            reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    MINUS           reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    DOT             reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    CP              reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    PC              reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    GT              reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    GTE             reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    LT              reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    LTE             reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    LTGT            reduce using rule 80 (TERM -> OP EXPRESSION CP .)
    COMMA           reduce using rule 80 (TERM -> OP EXPRESSION CP .)


state 171

    (102) LOOP2 -> FLOAT .

    BY              reduce using rule 102 (LOOP2 -> FLOAT .)
    CP              reduce using rule 102 (LOOP2 -> FLOAT .)
    TO              reduce using rule 102 (LOOP2 -> FLOAT .)


state 172

    (101) LOOP2 -> INT .

    BY              reduce using rule 101 (LOOP2 -> INT .)
    CP              reduce using rule 101 (LOOP2 -> INT .)
    TO              reduce using rule 101 (LOOP2 -> INT .)


state 173

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC CC

    TO              shift and go to state 181


state 174

    (94) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 182


state 175

    (95) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (96) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 183
    CP              reduce using rule 96 (PARAMETERS -> EXPRESSION .)


state 176

    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . BLOCKS2 CC
    (106) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 184
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 185
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 177

    (46) STM -> EXPRESSION STM2 EXPRESSION .

    CP              reduce using rule 46 (STM -> EXPRESSION STM2 EXPRESSION .)


state 178

    (40) CONDITION -> IF OP STM CP OC . BLOCKS2 CC CONDITION2
    (41) CONDITION -> IF OP STM CP OC . CC CONDITION2
    (42) CONDITION -> IF OP STM CP OC . BLOCKS2 CC
    (43) CONDITION -> IF OP STM CP OC . CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 186
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 187
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 179

    (93) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 188


state 180

    (61) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS .

    CC              reduce using rule 61 (METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS .)


state 181

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC CC
    (101) LOOP2 -> . INT
    (102) LOOP2 -> . FLOAT

    INT             shift and go to state 172
    FLOAT           shift and go to state 171

    LOOP2                          shift and go to state 189

state 182

    (94) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 190


state 183

    (95) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (95) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (96) PARAMETERS -> . EXPRESSION
    (74) EXPRESSION -> . OPER
    (75) EXPRESSION -> . OPER PLUS EXPRESSION
    (76) EXPRESSION -> . OPER MINUS EXPRESSION
    (77) OPER -> . TERM
    (78) OPER -> . TERM MULTIPLY OPER
    (79) OPER -> . TERM DIVISION OPER
    (80) TERM -> . OP EXPRESSION CP
    (81) TERM -> . TERM2
    (82) TERM2 -> . CTE
    (83) TERM2 -> . PLUS CTE
    (84) TERM2 -> . MINUS CTE
    (85) CTE -> . INT
    (86) CTE -> . FLOAT
    (87) CTE -> . STRING
    (88) CTE -> . IDV
    (89) CTE -> . IDV OB INT CB

    OP              shift and go to state 128
    PLUS            shift and go to state 124
    MINUS           shift and go to state 126
    INT             shift and go to state 69
    FLOAT           shift and go to state 67
    STRING          shift and go to state 64
    IDV             shift and go to state 66

    OPER                           shift and go to state 120
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 122
    PARAMETERS                     shift and go to state 191
    CTE                            shift and go to state 123
    EXPRESSION                     shift and go to state 175

state 184

    (106) LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .

    RETURNW         reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IDV             reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPW           reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPIFW         reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IF              reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    ASKUSER         reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    SAYW            reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CALLBOXW        reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CC              reduce using rule 106 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)


state 185

    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 . CC

    CC              shift and go to state 192


state 186

    (41) CONDITION -> IF OP STM CP OC CC . CONDITION2
    (43) CONDITION -> IF OP STM CP OC CC .
    (44) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (45) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    IDV             reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    LOOPW           reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    LOOPIFW         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    IF              reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    ASKUSER         reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    SAYW            reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    CALLBOXW        reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    CC              reduce using rule 43 (CONDITION -> IF OP STM CP OC CC .)
    ELSE            shift and go to state 193

    CONDITION2                     shift and go to state 194

state 187

    (40) CONDITION -> IF OP STM CP OC BLOCKS2 . CC CONDITION2
    (42) CONDITION -> IF OP STM CP OC BLOCKS2 . CC

    CC              shift and go to state 195


state 188

    (93) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 196


state 189

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC CC

    BY              shift and go to state 198
    CP              shift and go to state 197


state 190

    (94) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 94 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 191

    (95) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 95 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 192

    (105) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IDV             reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IF              reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CC              reduce using rule 105 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)


state 193

    (44) CONDITION2 -> ELSE . OC BLOCKS2 CC
    (45) CONDITION2 -> ELSE . OC CC

    OC              shift and go to state 199


state 194

    (41) CONDITION -> IF OP STM CP OC CC CONDITION2 .

    RETURNW         reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IDV             reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPW           reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPIFW         reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IF              reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    ASKUSER         reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    SAYW            reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CALLBOXW        reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CC              reduce using rule 41 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)


state 195

    (40) CONDITION -> IF OP STM CP OC BLOCKS2 CC . CONDITION2
    (42) CONDITION -> IF OP STM CP OC BLOCKS2 CC .
    (44) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (45) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IDV             reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IF              reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CC              reduce using rule 42 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ELSE            shift and go to state 193

    CONDITION2                     shift and go to state 200

state 196

    (93) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 93 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 197

    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC BLOCKS2 CC
    (100) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC CC

    OC              shift and go to state 201


state 198

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC CC
    (103) LOOP3 -> . PLUS
    (104) LOOP3 -> . MINUS

    PLUS            shift and go to state 203
    MINUS           shift and go to state 202

    LOOP3                          shift and go to state 204

state 199

    (44) CONDITION2 -> ELSE OC . BLOCKS2 CC
    (45) CONDITION2 -> ELSE OC . CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 205
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 206
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 200

    (40) CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 40 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)


state 201

    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . BLOCKS2 CC
    (100) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 207
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 208
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    ASK                            shift and go to state 83
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 202

    (104) LOOP3 -> MINUS .

    INT             reduce using rule 104 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 104 (LOOP3 -> MINUS .)


state 203

    (103) LOOP3 -> PLUS .

    INT             reduce using rule 103 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 103 (LOOP3 -> PLUS .)


state 204

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC CC
    (101) LOOP2 -> . INT
    (102) LOOP2 -> . FLOAT

    INT             shift and go to state 172
    FLOAT           shift and go to state 171

    LOOP2                          shift and go to state 209

state 205

    (45) CONDITION2 -> ELSE OC CC .

    RETURNW         reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    IDV             reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    LOOPW           reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    LOOPIFW         reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    IF              reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    ASKUSER         reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    SAYW            reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    CALLBOXW        reduce using rule 45 (CONDITION2 -> ELSE OC CC .)
    CC              reduce using rule 45 (CONDITION2 -> ELSE OC CC .)


state 206

    (44) CONDITION2 -> ELSE OC BLOCKS2 . CC

    CC              shift and go to state 210


state 207

    (100) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .

    RETURNW         reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IDV             reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPW           reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IF              reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    SAYW            reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CC              reduce using rule 100 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)


state 208

    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 211


state 209

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC CC

    CP              shift and go to state 212


state 210

    (44) CONDITION2 -> ELSE OC BLOCKS2 CC .

    RETURNW         reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IDV             reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPW           reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IF              reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    SAYW            reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CC              reduce using rule 44 (CONDITION2 -> ELSE OC BLOCKS2 CC .)


state 211

    (98) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 98 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)


state 212

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC CC

    OC              shift and go to state 213


state 213

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . BLOCKS2 CC
    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . CC
    (30) BLOCKS2 -> . CODE
    (31) BLOCKS2 -> . CODE BLOCKS2
    (32) CODE -> . RETURN
    (33) CODE -> . ASSIGNATION
    (34) CODE -> . LOOP
    (35) CODE -> . LOOPIF
    (36) CODE -> . CONDITION
    (37) CODE -> . ASK
    (38) CODE -> . SAY
    (39) CODE -> . CALLBOX
    (72) RETURN -> . RETURNW EQUALS PC
    (73) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (97) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (98) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (99) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (100) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (105) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (106) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (40) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (41) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (42) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (43) CONDITION -> . IF OP STM CP OC CC
    (93) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (90) SAY -> . SAYW OP CONCAT CP PC
    (94) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 214
    RETURNW         shift and go to state 89
    IDV             shift and go to state 81
    LOOPW           shift and go to state 84
    LOOPIFW         shift and go to state 88
    IF              shift and go to state 90
    ASKUSER         shift and go to state 94
    SAYW            shift and go to state 78
    CALLBOXW        shift and go to state 87

    CODE                           shift and go to state 79
    RETURN                         shift and go to state 80
    ASSIGNATION                    shift and go to state 86
    ASK                            shift and go to state 83
    SAY                            shift and go to state 82
    BLOCKS2                        shift and go to state 215
    CALLBOX                        shift and go to state 92
    LOOPIF                         shift and go to state 93
    CONDITION                      shift and go to state 85
    LOOP                           shift and go to state 95

state 214

    (99) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .

    RETURNW         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IDV             reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPW           reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IF              reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    SAYW            reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CC              reduce using rule 99 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)


state 215

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 216


state 216

    (97) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 97 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)

