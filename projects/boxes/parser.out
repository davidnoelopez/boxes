Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC
Rule 3     seen_globalvars -> <empty>
Rule 4     VARS -> VARI VARS
Rule 5     VARS -> VARF VARS
Rule 6     VARS -> VARST VARS
Rule 7     VARS -> VARL VARS
Rule 8     VARS -> <empty>
Rule 9     VARF -> VARFSMALL VARF3 PC
Rule 10    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 11    VARF3 -> IDV EQUALS FLOAT
Rule 12    VARF3 -> IDV COMMA VARF3
Rule 13    VARF3 -> IDV
Rule 14    VARI -> VARISMALL VARI3 PC
Rule 15    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 16    VARI3 -> IDV EQUALS INT
Rule 17    VARI3 -> IDV COMMA VARI3
Rule 18    VARI3 -> IDV
Rule 19    VARST -> VARSTSMALL VARST3 PC
Rule 20    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 21    VARST3 -> IDV EQUALS STRING
Rule 22    VARST3 -> IDV COMMA VARST3
Rule 23    VARST3 -> IDV
Rule 24    VARL -> VARLSMALL VARL3 PC
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 26    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 27    VARL3 -> IDV COMMA VARL3
Rule 28    VARL3 -> IDV
Rule 29    VARL4 -> CTEL
Rule 30    VARL4 -> CTEL COMMA VARL4
Rule 31    VARL4 -> <empty>
Rule 32    BLOCKS -> OC VARS BLOCKS2 CC
Rule 33    BLOCKS -> OC VARS CC
Rule 34    BLOCKS -> OC BLOCKS2 CC
Rule 35    BLOCKS -> OC CC
Rule 36    BLOCKS2 -> CODE
Rule 37    BLOCKS2 -> CODE BLOCKS2
Rule 38    CODE -> RETURN
Rule 39    CODE -> ASSIGNATION
Rule 40    CODE -> LOOP
Rule 41    CODE -> LOOPIF
Rule 42    CODE -> CONDITION
Rule 43    CODE -> ASK
Rule 44    CODE -> SAY
Rule 45    CODE -> CALLBOX
Rule 46    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
Rule 47    CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2
Rule 48    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
Rule 49    CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF
Rule 50    seen_OC_IF -> <empty>
Rule 51    seen_CC_IF -> <empty>
Rule 52    CONDITION2 -> ELSE seen_ELSE OC CONDITION3
Rule 53    CONDITION3 -> BLOCKS2 CC seen_CC_ELSE
Rule 54    CONDITION3 -> CC seen_CC_ELSE
Rule 55    seen_ELSE -> <empty>
Rule 56    seen_CC_ELSE -> <empty>
Rule 57    STM -> EXPRESSION STM2 EXPRESSION seen_STM
Rule 58    STM -> EXPRESSION
Rule 59    STM2 -> GT
Rule 60    STM2 -> GTE
Rule 61    STM2 -> LT
Rule 62    STM2 -> LTE
Rule 63    STM2 -> DOUBLEEQUALS
Rule 64    STM2 -> LTGT
Rule 65    seen_STM -> <empty>
Rule 66    PARAM -> PARAM2 IDV
Rule 67    PARAM2 -> VARISMALL
Rule 68    PARAM2 -> VARSTSMALL
Rule 69    PARAM2 -> VARFSMALL
Rule 70    PARAM2 -> VARLSMALL
Rule 71    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS
Rule 72    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
Rule 73    seen_IDM -> IDM
Rule 74    METHODS2 -> RECURSIVEBOX
Rule 75    METHODS2 -> VOIDBOX
Rule 76    METHODS2 -> VARIBOX
Rule 77    METHODS2 -> VARFBOX
Rule 78    METHODS2 -> VARSBOX
Rule 79    METHODS2 -> VARLBOX
Rule 80    METHODS3 -> PARAM COMMA METHODS3
Rule 81    METHODS3 -> PARAM
Rule 82    METHODS3 -> <empty>
Rule 83    RETURN -> RETURNW EQUALS PC
Rule 84    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 85    EXPRESSION -> OPER seen_EXPF
Rule 86    EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION
Rule 87    seen_EXPF -> <empty>
Rule 88    seen_OPER -> PLUS
Rule 89    seen_OPER -> MINUS
Rule 90    seen_OPER -> OR
Rule 91    OPER -> TERM seen_TERMF
Rule 92    OPER -> TERM seen_TERMF seen_TERM OPER
Rule 93    seen_TERMF -> <empty>
Rule 94    seen_TERM -> MULTIPLY
Rule 95    seen_TERM -> DIVISION
Rule 96    seen_TERM -> AND
Rule 97    TERM -> OP seen_OP_TERM EXPRESSION CP
Rule 98    TERM -> TERM2
Rule 99    seen_OP_TERM -> <empty>
Rule 100   TERM2 -> CTE
Rule 101   TERM2 -> PLUS CTE
Rule 102   TERM2 -> MINUS CTE
Rule 103   CTE -> INT seen_INT
Rule 104   CTE -> FLOAT seen_FLOAT
Rule 105   CTE -> STRING seen_STRING
Rule 106   CTE -> seen_ID
Rule 107   seen_INT -> <empty>
Rule 108   seen_FLOAT -> <empty>
Rule 109   seen_STRING -> <empty>
Rule 110   seen_ID -> IDV
Rule 111   seen_ID -> IDV OB INT CB
Rule 112   CTEL -> INT
Rule 113   CTEL -> FLOAT
Rule 114   CTEL -> STRING
Rule 115   CTEL -> IDV
Rule 116   CTEL -> IDV OB INT CB
Rule 117   CTEL2 -> CTEL CB seen_CB
Rule 118   CTEL2 -> CTEL COMMA CTEL2
Rule 119   CTEL2 -> CB seen_CB
Rule 120   seen_OB -> <empty>
Rule 121   seen_CB -> <empty>
Rule 122   SAY -> SAYW OP CONCAT CP PC
Rule 123   CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT
Rule 124   CONCAT -> EXPRESSION seen_EXP_SAY
Rule 125   seen_EXP_SAY -> <empty>
Rule 126   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 127   CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 128   PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 129   PARAMETERS -> EXPRESSION
Rule 130   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
Rule 131   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
Rule 132   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
Rule 133   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
Rule 134   seen_CP_LOOP1 -> <empty>
Rule 135   seen_CP_LOOP2 -> <empty>
Rule 136   seen_VAR_LOOP -> IDV
Rule 137   LOOP2 -> seen_INT_LOOP
Rule 138   LOOP2 -> seen_FLOAT_LOOP
Rule 139   seen_INT_LOOP -> INT
Rule 140   seen_FLOAT_LOOP -> FLOAT
Rule 141   LOOP3 -> PLUS
Rule 142   LOOP3 -> MINUS
Rule 143   LOOP3 -> <empty>
Rule 144   seen_LOOP -> <empty>
Rule 145   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
Rule 146   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
Rule 147   seen_LOOPIF -> <empty>
Rule 148   seen_CP_LOOPIF -> <empty>

Terminals, with rules where they appear

AND                  : 96
ASKUSER              : 126
BOX                  : 1 2
BY                   : 130 132
CALLBOXW             : 127
CB                   : 25 26 111 116 117 119
CC                   : 1 2 32 33 34 35 46 47 48 49 53 54 130 131 132 133 145 146
COMMA                : 10 12 15 17 20 22 26 27 30 80 118 126 127 128
CP                   : 1 2 46 47 48 49 71 72 97 122 126 127 130 131 132 133 145 146
DIVISION             : 95
DOT                  : 123
DOUBLEEQUALS         : 63
ELSE                 : 52
EQUALS               : 10 11 15 16 20 21 25 26 83 84
FLOAT                : 10 11 104 113 140
FROM                 : 130 131 132 133
GT                   : 59
GTE                  : 60
IDM                  : 73 127
IDV                  : 10 11 12 13 15 16 17 18 20 21 22 23 25 26 27 28 66 84 110 111 115 116 126 136
IF                   : 46 47 48 49
INT                  : 15 16 103 111 112 116 139
LOOPIFW              : 145 146
LOOPW                : 130 131 132 133
LT                   : 61
LTE                  : 62
LTGT                 : 64
MAINBOX              : 1 2
MINUS                : 89 102 142
MULTIPLY             : 94
OB                   : 25 26 111 116
OC                   : 1 2 32 33 34 35 46 47 48 49 52 130 131 132 133 145 146
OP                   : 1 2 46 47 48 49 71 72 97 122 126 127 130 131 132 133 145 146
OR                   : 90
PC                   : 9 14 19 24 83 84 122 126 127
PLUS                 : 88 101 141
RECURSIVEBOX         : 74
RETURNW              : 83
SAYW                 : 122
STRING               : 20 21 105 114 126
TO                   : 130 131 132 133
VARFBOX              : 77
VARFSMALL            : 9 69
VARIBOX              : 76
VARISMALL            : 14 67
VARLBOX              : 79
VARLSMALL            : 24 70
VARSBOX              : 78
VARSTSMALL           : 19 68
VOIDBOX              : 75
error                : 

Nonterminals, with rules where they appear

ASK                  : 43
ASSIGNATION          : 39
BLOCKS               : 1 2 71 72
BLOCKS2              : 32 34 37 46 48 53 130 131 145
BOXES                : 0
CALLBOX              : 45
CODE                 : 36 37
CONCAT               : 122 123
CONDITION            : 42
CONDITION2           : 46 47
CONDITION3           : 52
CTE                  : 100 101 102
CTEL                 : 29 30 117 118
CTEL2                : 118
EXPRESSION           : 57 57 58 84 86 97 123 124 128 129
LOOP                 : 40
LOOP2                : 130 130 130 131 131 132 132 132 133 133
LOOP3                : 130 132
LOOPIF               : 41
METHODS              : 1 72
METHODS2             : 71 72
METHODS3             : 71 72 80
OPER                 : 85 86 92
PARAM                : 80 81
PARAM2               : 66
PARAMETERS           : 127 128
RETURN               : 38
SAY                  : 44
STM                  : 46 47 48 49 145 146
STM2                 : 57
TERM                 : 91 92
TERM2                : 98
VARF                 : 5
VARF3                : 9 10 12
VARI                 : 4
VARI3                : 14 15 17
VARL                 : 7
VARL3                : 24 26 27
VARL4                : 25 26 30
VARS                 : 1 2 4 5 6 7 32 33
VARST                : 6
VARST3               : 19 20 22
seen_CB              : 117 119
seen_CC_ELSE         : 53 54
seen_CC_IF           : 48 49
seen_CP_LOOP1        : 130 132
seen_CP_LOOP2        : 131 133
seen_CP_LOOPIF       : 145 146
seen_ELSE            : 52
seen_EXPF            : 85 86
seen_EXP_SAY         : 123 124
seen_FLOAT           : 104
seen_FLOAT_LOOP      : 138
seen_ID              : 106
seen_IDM             : 71 72
seen_INT             : 103
seen_INT_LOOP        : 137
seen_LOOP            : 130 131 132 133
seen_LOOPIF          : 145 146
seen_OB              : 
seen_OC_IF           : 46 47 48 49
seen_OPER            : 86
seen_OP_TERM         : 97
seen_STM             : 57
seen_STRING          : 105
seen_TERM            : 92
seen_TERMF           : 91 92
seen_VAR_LOOP        : 130 131 132 133
seen_globalvars      : 1 2

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 4
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 4

    (1) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS CC
    (3) seen_globalvars -> .

    MAINBOX         reduce using rule 3 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 13

state 5

    (5) VARS -> VARF . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 14
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 6

    (7) VARS -> VARL . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 15
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 7

    (24) VARL -> VARLSMALL . VARL3 PC
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 16

state 8

    (4) VARS -> VARI . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 18
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 9

    (19) VARST -> VARSTSMALL . VARST3 PC
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 19

state 10

    (6) VARS -> VARST . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 21
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 11

    (14) VARI -> VARISMALL . VARI3 PC
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 23

state 12

    (9) VARF -> VARFSMALL . VARF3 PC
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 25

state 13

    (1) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 26


state 14

    (5) VARS -> VARF VARS .

    MAINBOX         reduce using rule 5 (VARS -> VARF VARS .)
    CC              reduce using rule 5 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 5 (VARS -> VARF VARS .)
    IDV             reduce using rule 5 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 5 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 5 (VARS -> VARF VARS .)
    IF              reduce using rule 5 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 5 (VARS -> VARF VARS .)
    SAYW            reduce using rule 5 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 5 (VARS -> VARF VARS .)


state 15

    (7) VARS -> VARL VARS .

    MAINBOX         reduce using rule 7 (VARS -> VARL VARS .)
    CC              reduce using rule 7 (VARS -> VARL VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARL VARS .)
    IDV             reduce using rule 7 (VARS -> VARL VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARL VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARL VARS .)
    IF              reduce using rule 7 (VARS -> VARL VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARL VARS .)
    SAYW            reduce using rule 7 (VARS -> VARL VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARL VARS .)


state 16

    (24) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 27


state 17

    (25) VARL3 -> IDV . EQUALS OB VARL4 CB
    (26) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> IDV . COMMA VARL3
    (28) VARL3 -> IDV .

    EQUALS          shift and go to state 28
    COMMA           shift and go to state 29
    PC              reduce using rule 28 (VARL3 -> IDV .)


state 18

    (4) VARS -> VARI VARS .

    MAINBOX         reduce using rule 4 (VARS -> VARI VARS .)
    CC              reduce using rule 4 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 4 (VARS -> VARI VARS .)
    IDV             reduce using rule 4 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 4 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 4 (VARS -> VARI VARS .)
    IF              reduce using rule 4 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 4 (VARS -> VARI VARS .)
    SAYW            reduce using rule 4 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 4 (VARS -> VARI VARS .)


state 19

    (19) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 30


state 20

    (20) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (21) VARST3 -> IDV . EQUALS STRING
    (22) VARST3 -> IDV . COMMA VARST3
    (23) VARST3 -> IDV .

    EQUALS          shift and go to state 32
    COMMA           shift and go to state 31
    PC              reduce using rule 23 (VARST3 -> IDV .)


state 21

    (6) VARS -> VARST VARS .

    MAINBOX         reduce using rule 6 (VARS -> VARST VARS .)
    CC              reduce using rule 6 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARST VARS .)
    IDV             reduce using rule 6 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARST VARS .)
    IF              reduce using rule 6 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARST VARS .)
    SAYW            reduce using rule 6 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARST VARS .)


state 22

    (15) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (16) VARI3 -> IDV . EQUALS INT
    (17) VARI3 -> IDV . COMMA VARI3
    (18) VARI3 -> IDV .

    EQUALS          shift and go to state 34
    COMMA           shift and go to state 33
    PC              reduce using rule 18 (VARI3 -> IDV .)


state 23

    (14) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 35


state 24

    (10) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> IDV . EQUALS FLOAT
    (12) VARF3 -> IDV . COMMA VARF3
    (13) VARF3 -> IDV .

    EQUALS          shift and go to state 37
    COMMA           shift and go to state 36
    PC              reduce using rule 13 (VARF3 -> IDV .)


state 25

    (9) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 38


state 26

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 39


state 27

    (24) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    RETURNW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)


state 28

    (25) VARL3 -> IDV EQUALS . OB VARL4 CB
    (26) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 40


state 29

    (27) VARL3 -> IDV COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 41

state 30

    (19) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)


state 31

    (22) VARST3 -> IDV COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 42

state 32

    (20) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (21) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 43


state 33

    (17) VARI3 -> IDV COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 44

state 34

    (15) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (16) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 45


state 35

    (14) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)


state 36

    (12) VARF3 -> IDV COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 46

state 37

    (10) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (11) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 47


state 38

    (9) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)


state 39

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 48


state 40

    (25) VARL3 -> IDV EQUALS OB . VARL4 CB
    (26) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (112) CTEL -> . INT
    (113) CTEL -> . FLOAT
    (114) CTEL -> . STRING
    (115) CTEL -> . IDV
    (116) CTEL -> . IDV OB INT CB

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 53
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51

    CTEL                           shift and go to state 54
    VARL4                          shift and go to state 50

state 41

    (27) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 27 (VARL3 -> IDV COMMA VARL3 .)


state 42

    (22) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 22 (VARST3 -> IDV COMMA VARST3 .)


state 43

    (20) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (21) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 55
    PC              reduce using rule 21 (VARST3 -> IDV EQUALS STRING .)


state 44

    (17) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 17 (VARI3 -> IDV COMMA VARI3 .)


state 45

    (15) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (16) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 56
    PC              reduce using rule 16 (VARI3 -> IDV EQUALS INT .)


state 46

    (12) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 12 (VARF3 -> IDV COMMA VARF3 .)


state 47

    (10) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (11) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 57
    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT .)


state 48

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS CC
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 59

    BLOCKS                         shift and go to state 58

state 49

    (114) CTEL -> STRING .

    COMMA           reduce using rule 114 (CTEL -> STRING .)
    CB              reduce using rule 114 (CTEL -> STRING .)


state 50

    (25) VARL3 -> IDV EQUALS OB VARL4 . CB
    (26) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 60


state 51

    (115) CTEL -> IDV .
    (116) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 115 (CTEL -> IDV .)
    CB              reduce using rule 115 (CTEL -> IDV .)
    OB              shift and go to state 61


state 52

    (113) CTEL -> FLOAT .

    COMMA           reduce using rule 113 (CTEL -> FLOAT .)
    CB              reduce using rule 113 (CTEL -> FLOAT .)


state 53

    (112) CTEL -> INT .

    COMMA           reduce using rule 112 (CTEL -> INT .)
    CB              reduce using rule 112 (CTEL -> INT .)


state 54

    (29) VARL4 -> CTEL .
    (30) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 29 (VARL4 -> CTEL .)
    COMMA           shift and go to state 62


state 55

    (20) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 63

state 56

    (15) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 64

state 57

    (10) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 65

state 58

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . CC
    (71) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (72) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (74) METHODS2 -> . RECURSIVEBOX
    (75) METHODS2 -> . VOIDBOX
    (76) METHODS2 -> . VARIBOX
    (77) METHODS2 -> . VARFBOX
    (78) METHODS2 -> . VARSBOX
    (79) METHODS2 -> . VARLBOX

    CC              shift and go to state 68
    RECURSIVEBOX    shift and go to state 66
    VOIDBOX         shift and go to state 73
    VARIBOX         shift and go to state 72
    VARFBOX         shift and go to state 70
    VARSBOX         shift and go to state 71
    VARLBOX         shift and go to state 69

    METHODS                        shift and go to state 67
    METHODS2                       shift and go to state 74

state 59

    (32) BLOCKS -> OC . VARS BLOCKS2 CC
    (33) BLOCKS -> OC . VARS CC
    (34) BLOCKS -> OC . BLOCKS2 CC
    (35) BLOCKS -> OC . CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
    CC              shift and go to state 85
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

  ! CC              [ reduce using rule 8 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 8 (VARS -> .) ]
  ! IDV             [ reduce using rule 8 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 8 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 8 (VARS -> .) ]
  ! IF              [ reduce using rule 8 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 8 (VARS -> .) ]
  ! SAYW            [ reduce using rule 8 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 8 (VARS -> .) ]

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    VARS                           shift and go to state 78
    VARF                           shift and go to state 5
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    VARST                          shift and go to state 10
    BLOCKS2                        shift and go to state 90
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 60

    (25) VARL3 -> IDV EQUALS OB VARL4 CB .
    (26) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 95


state 61

    (116) CTEL -> IDV OB . INT CB

    INT             shift and go to state 96


state 62

    (30) VARL4 -> CTEL COMMA . VARL4
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (112) CTEL -> . INT
    (113) CTEL -> . FLOAT
    (114) CTEL -> . STRING
    (115) CTEL -> . IDV
    (116) CTEL -> . IDV OB INT CB

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 53
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51

    VARL4                          shift and go to state 97
    CTEL                           shift and go to state 54

state 63

    (20) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 64

    (15) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 65

    (10) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 66

    (74) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 74 (METHODS2 -> RECURSIVEBOX .)


state 67

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS . CC

    CC              shift and go to state 98


state 68

    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .)


state 69

    (79) METHODS2 -> VARLBOX .

    IDM             reduce using rule 79 (METHODS2 -> VARLBOX .)


state 70

    (77) METHODS2 -> VARFBOX .

    IDM             reduce using rule 77 (METHODS2 -> VARFBOX .)


state 71

    (78) METHODS2 -> VARSBOX .

    IDM             reduce using rule 78 (METHODS2 -> VARSBOX .)


state 72

    (76) METHODS2 -> VARIBOX .

    IDM             reduce using rule 76 (METHODS2 -> VARIBOX .)


state 73

    (75) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 75 (METHODS2 -> VOIDBOX .)


state 74

    (71) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS
    (72) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHODS
    (73) seen_IDM -> . IDM

    IDM             shift and go to state 100

    seen_IDM                       shift and go to state 99

state 75

    (122) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 101


state 76

    (36) BLOCKS2 -> CODE .
    (37) BLOCKS2 -> CODE . BLOCKS2
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 36 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 102
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 77

    (38) CODE -> RETURN .

    RETURNW         reduce using rule 38 (CODE -> RETURN .)
    IDV             reduce using rule 38 (CODE -> RETURN .)
    LOOPW           reduce using rule 38 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 38 (CODE -> RETURN .)
    IF              reduce using rule 38 (CODE -> RETURN .)
    ASKUSER         reduce using rule 38 (CODE -> RETURN .)
    SAYW            reduce using rule 38 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 38 (CODE -> RETURN .)
    CC              reduce using rule 38 (CODE -> RETURN .)


state 78

    (32) BLOCKS -> OC VARS . BLOCKS2 CC
    (33) BLOCKS -> OC VARS . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 103
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 104
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 79

    (84) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 105


state 80

    (127) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 106


state 81

    (44) CODE -> SAY .

    RETURNW         reduce using rule 44 (CODE -> SAY .)
    IDV             reduce using rule 44 (CODE -> SAY .)
    LOOPW           reduce using rule 44 (CODE -> SAY .)
    LOOPIFW         reduce using rule 44 (CODE -> SAY .)
    IF              reduce using rule 44 (CODE -> SAY .)
    ASKUSER         reduce using rule 44 (CODE -> SAY .)
    SAYW            reduce using rule 44 (CODE -> SAY .)
    CALLBOXW        reduce using rule 44 (CODE -> SAY .)
    CC              reduce using rule 44 (CODE -> SAY .)


state 82

    (43) CODE -> ASK .

    RETURNW         reduce using rule 43 (CODE -> ASK .)
    IDV             reduce using rule 43 (CODE -> ASK .)
    LOOPW           reduce using rule 43 (CODE -> ASK .)
    LOOPIFW         reduce using rule 43 (CODE -> ASK .)
    IF              reduce using rule 43 (CODE -> ASK .)
    ASKUSER         reduce using rule 43 (CODE -> ASK .)
    SAYW            reduce using rule 43 (CODE -> ASK .)
    CALLBOXW        reduce using rule 43 (CODE -> ASK .)
    CC              reduce using rule 43 (CODE -> ASK .)


state 83

    (42) CODE -> CONDITION .

    RETURNW         reduce using rule 42 (CODE -> CONDITION .)
    IDV             reduce using rule 42 (CODE -> CONDITION .)
    LOOPW           reduce using rule 42 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 42 (CODE -> CONDITION .)
    IF              reduce using rule 42 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 42 (CODE -> CONDITION .)
    SAYW            reduce using rule 42 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 42 (CODE -> CONDITION .)
    CC              reduce using rule 42 (CODE -> CONDITION .)


state 84

    (39) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IF              reduce using rule 39 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 39 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 39 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 39 (CODE -> ASSIGNATION .)
    CC              reduce using rule 39 (CODE -> ASSIGNATION .)


state 85

    (35) BLOCKS -> OC CC .

    CC              reduce using rule 35 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 35 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 35 (BLOCKS -> OC CC .)


state 86

    (145) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (147) seen_LOOPIF -> .

    OP              reduce using rule 147 (seen_LOOPIF -> .)

    seen_LOOPIF                    shift and go to state 107

state 87

    (83) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 108


state 88

    (46) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF . OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF . OP STM CP OC seen_OC_IF CC seen_CC_IF

    OP              shift and go to state 109


state 89

    (130) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (144) seen_LOOP -> .

    OP              reduce using rule 144 (seen_LOOP -> .)

    seen_LOOP                      shift and go to state 110

state 90

    (34) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 111


state 91

    (45) CODE -> CALLBOX .

    RETURNW         reduce using rule 45 (CODE -> CALLBOX .)
    IDV             reduce using rule 45 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 45 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 45 (CODE -> CALLBOX .)
    IF              reduce using rule 45 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 45 (CODE -> CALLBOX .)
    SAYW            reduce using rule 45 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 45 (CODE -> CALLBOX .)
    CC              reduce using rule 45 (CODE -> CALLBOX .)


state 92

    (41) CODE -> LOOPIF .

    RETURNW         reduce using rule 41 (CODE -> LOOPIF .)
    IDV             reduce using rule 41 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 41 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 41 (CODE -> LOOPIF .)
    IF              reduce using rule 41 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 41 (CODE -> LOOPIF .)
    SAYW            reduce using rule 41 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 41 (CODE -> LOOPIF .)
    CC              reduce using rule 41 (CODE -> LOOPIF .)


state 93

    (126) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 112


state 94

    (40) CODE -> LOOP .

    RETURNW         reduce using rule 40 (CODE -> LOOP .)
    IDV             reduce using rule 40 (CODE -> LOOP .)
    LOOPW           reduce using rule 40 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 40 (CODE -> LOOP .)
    IF              reduce using rule 40 (CODE -> LOOP .)
    ASKUSER         reduce using rule 40 (CODE -> LOOP .)
    SAYW            reduce using rule 40 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 40 (CODE -> LOOP .)
    CC              reduce using rule 40 (CODE -> LOOP .)


state 95

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 113

state 96

    (116) CTEL -> IDV OB INT . CB

    CB              shift and go to state 114


state 97

    (30) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 30 (VARL4 -> CTEL COMMA VARL4 .)


state 98

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .)


state 99

    (71) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS
    (72) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHODS

    OP              shift and go to state 115


state 100

    (73) seen_IDM -> IDM .

    OP              reduce using rule 73 (seen_IDM -> IDM .)


state 101

    (122) SAY -> SAYW OP . CONCAT CP PC
    (123) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (124) CONCAT -> . EXPRESSION seen_EXP_SAY
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 124
    CONCAT                         shift and go to state 126

state 102

    (37) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 37 (BLOCKS2 -> CODE BLOCKS2 .)


state 103

    (33) BLOCKS -> OC VARS CC .

    CC              reduce using rule 33 (BLOCKS -> OC VARS CC .)
    RECURSIVEBOX    reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARLBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)


state 104

    (32) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 130


state 105

    (84) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 131

state 106

    (127) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 132


state 107

    (145) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC CC

    OP              shift and go to state 133


state 108

    (83) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 134


state 109

    (46) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP . STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF OP . STM CP OC seen_OC_IF CC seen_CC_IF
    (57) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (58) STM -> . EXPRESSION
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    STM                            shift and go to state 136
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 135

state 110

    (130) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    OP              shift and go to state 137


state 111

    (34) BLOCKS -> OC BLOCKS2 CC .

    CC              reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)


state 112

    (126) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 138


state 113

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 26 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 114

    (116) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 116 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 116 (CTEL -> IDV OB INT CB .)


state 115

    (71) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS
    (72) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHODS
    (80) METHODS3 -> . PARAM COMMA METHODS3
    (81) METHODS3 -> . PARAM
    (82) METHODS3 -> .
    (66) PARAM -> . PARAM2 IDV
    (67) PARAM2 -> . VARISMALL
    (68) PARAM2 -> . VARSTSMALL
    (69) PARAM2 -> . VARFSMALL
    (70) PARAM2 -> . VARLSMALL

    CP              reduce using rule 82 (METHODS3 -> .)
    VARISMALL       shift and go to state 140
    VARSTSMALL      shift and go to state 141
    VARFSMALL       shift and go to state 143
    VARLSMALL       shift and go to state 139

    PARAM                          shift and go to state 142
    PARAM2                         shift and go to state 144
    METHODS3                       shift and go to state 145

state 116

    (85) EXPRESSION -> OPER . seen_EXPF
    (86) EXPRESSION -> OPER . seen_EXPF seen_OPER EXPRESSION
    (87) seen_EXPF -> .

    PLUS            reduce using rule 87 (seen_EXPF -> .)
    MINUS           reduce using rule 87 (seen_EXPF -> .)
    OR              reduce using rule 87 (seen_EXPF -> .)
    DOT             reduce using rule 87 (seen_EXPF -> .)
    CP              reduce using rule 87 (seen_EXPF -> .)
    PC              reduce using rule 87 (seen_EXPF -> .)
    GT              reduce using rule 87 (seen_EXPF -> .)
    GTE             reduce using rule 87 (seen_EXPF -> .)
    LT              reduce using rule 87 (seen_EXPF -> .)
    LTE             reduce using rule 87 (seen_EXPF -> .)
    DOUBLEEQUALS    reduce using rule 87 (seen_EXPF -> .)
    LTGT            reduce using rule 87 (seen_EXPF -> .)
    COMMA           reduce using rule 87 (seen_EXPF -> .)

    seen_EXPF                      shift and go to state 146

state 117

    (110) seen_ID -> IDV .
    (111) seen_ID -> IDV . OB INT CB

    MULTIPLY        reduce using rule 110 (seen_ID -> IDV .)
    DIVISION        reduce using rule 110 (seen_ID -> IDV .)
    AND             reduce using rule 110 (seen_ID -> IDV .)
    PLUS            reduce using rule 110 (seen_ID -> IDV .)
    MINUS           reduce using rule 110 (seen_ID -> IDV .)
    OR              reduce using rule 110 (seen_ID -> IDV .)
    DOT             reduce using rule 110 (seen_ID -> IDV .)
    CP              reduce using rule 110 (seen_ID -> IDV .)
    PC              reduce using rule 110 (seen_ID -> IDV .)
    GT              reduce using rule 110 (seen_ID -> IDV .)
    GTE             reduce using rule 110 (seen_ID -> IDV .)
    LT              reduce using rule 110 (seen_ID -> IDV .)
    LTE             reduce using rule 110 (seen_ID -> IDV .)
    DOUBLEEQUALS    reduce using rule 110 (seen_ID -> IDV .)
    LTGT            reduce using rule 110 (seen_ID -> IDV .)
    COMMA           reduce using rule 110 (seen_ID -> IDV .)
    OB              shift and go to state 147


state 118

    (100) TERM2 -> CTE .

    MULTIPLY        reduce using rule 100 (TERM2 -> CTE .)
    DIVISION        reduce using rule 100 (TERM2 -> CTE .)
    AND             reduce using rule 100 (TERM2 -> CTE .)
    PLUS            reduce using rule 100 (TERM2 -> CTE .)
    MINUS           reduce using rule 100 (TERM2 -> CTE .)
    OR              reduce using rule 100 (TERM2 -> CTE .)
    PC              reduce using rule 100 (TERM2 -> CTE .)
    DOT             reduce using rule 100 (TERM2 -> CTE .)
    CP              reduce using rule 100 (TERM2 -> CTE .)
    GT              reduce using rule 100 (TERM2 -> CTE .)
    GTE             reduce using rule 100 (TERM2 -> CTE .)
    LT              reduce using rule 100 (TERM2 -> CTE .)
    LTE             reduce using rule 100 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 100 (TERM2 -> CTE .)
    LTGT            reduce using rule 100 (TERM2 -> CTE .)
    COMMA           reduce using rule 100 (TERM2 -> CTE .)


state 119

    (102) TERM2 -> MINUS . CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    CTE                            shift and go to state 148
    seen_ID                        shift and go to state 122

state 120

    (105) CTE -> STRING . seen_STRING
    (109) seen_STRING -> .

    MULTIPLY        reduce using rule 109 (seen_STRING -> .)
    DIVISION        reduce using rule 109 (seen_STRING -> .)
    AND             reduce using rule 109 (seen_STRING -> .)
    PLUS            reduce using rule 109 (seen_STRING -> .)
    MINUS           reduce using rule 109 (seen_STRING -> .)
    OR              reduce using rule 109 (seen_STRING -> .)
    DOT             reduce using rule 109 (seen_STRING -> .)
    CP              reduce using rule 109 (seen_STRING -> .)
    PC              reduce using rule 109 (seen_STRING -> .)
    GT              reduce using rule 109 (seen_STRING -> .)
    GTE             reduce using rule 109 (seen_STRING -> .)
    LT              reduce using rule 109 (seen_STRING -> .)
    LTE             reduce using rule 109 (seen_STRING -> .)
    DOUBLEEQUALS    reduce using rule 109 (seen_STRING -> .)
    LTGT            reduce using rule 109 (seen_STRING -> .)
    COMMA           reduce using rule 109 (seen_STRING -> .)

    seen_STRING                    shift and go to state 149

state 121

    (91) OPER -> TERM . seen_TERMF
    (92) OPER -> TERM . seen_TERMF seen_TERM OPER
    (93) seen_TERMF -> .

    MULTIPLY        reduce using rule 93 (seen_TERMF -> .)
    DIVISION        reduce using rule 93 (seen_TERMF -> .)
    AND             reduce using rule 93 (seen_TERMF -> .)
    PLUS            reduce using rule 93 (seen_TERMF -> .)
    MINUS           reduce using rule 93 (seen_TERMF -> .)
    OR              reduce using rule 93 (seen_TERMF -> .)
    DOT             reduce using rule 93 (seen_TERMF -> .)
    CP              reduce using rule 93 (seen_TERMF -> .)
    PC              reduce using rule 93 (seen_TERMF -> .)
    GT              reduce using rule 93 (seen_TERMF -> .)
    GTE             reduce using rule 93 (seen_TERMF -> .)
    LT              reduce using rule 93 (seen_TERMF -> .)
    LTE             reduce using rule 93 (seen_TERMF -> .)
    DOUBLEEQUALS    reduce using rule 93 (seen_TERMF -> .)
    LTGT            reduce using rule 93 (seen_TERMF -> .)
    COMMA           reduce using rule 93 (seen_TERMF -> .)

    seen_TERMF                     shift and go to state 150

state 122

    (106) CTE -> seen_ID .

    MULTIPLY        reduce using rule 106 (CTE -> seen_ID .)
    DIVISION        reduce using rule 106 (CTE -> seen_ID .)
    AND             reduce using rule 106 (CTE -> seen_ID .)
    PLUS            reduce using rule 106 (CTE -> seen_ID .)
    MINUS           reduce using rule 106 (CTE -> seen_ID .)
    OR              reduce using rule 106 (CTE -> seen_ID .)
    GT              reduce using rule 106 (CTE -> seen_ID .)
    GTE             reduce using rule 106 (CTE -> seen_ID .)
    LT              reduce using rule 106 (CTE -> seen_ID .)
    LTE             reduce using rule 106 (CTE -> seen_ID .)
    DOUBLEEQUALS    reduce using rule 106 (CTE -> seen_ID .)
    LTGT            reduce using rule 106 (CTE -> seen_ID .)
    CP              reduce using rule 106 (CTE -> seen_ID .)
    DOT             reduce using rule 106 (CTE -> seen_ID .)
    PC              reduce using rule 106 (CTE -> seen_ID .)
    COMMA           reduce using rule 106 (CTE -> seen_ID .)


state 123

    (101) TERM2 -> PLUS . CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    CTE                            shift and go to state 151
    seen_ID                        shift and go to state 122

state 124

    (123) CONCAT -> EXPRESSION . seen_EXP_SAY DOT CONCAT
    (124) CONCAT -> EXPRESSION . seen_EXP_SAY
    (125) seen_EXP_SAY -> .

    DOT             reduce using rule 125 (seen_EXP_SAY -> .)
    CP              reduce using rule 125 (seen_EXP_SAY -> .)

    seen_EXP_SAY                   shift and go to state 152

state 125

    (98) TERM -> TERM2 .

    MULTIPLY        reduce using rule 98 (TERM -> TERM2 .)
    DIVISION        reduce using rule 98 (TERM -> TERM2 .)
    AND             reduce using rule 98 (TERM -> TERM2 .)
    PLUS            reduce using rule 98 (TERM -> TERM2 .)
    MINUS           reduce using rule 98 (TERM -> TERM2 .)
    OR              reduce using rule 98 (TERM -> TERM2 .)
    DOT             reduce using rule 98 (TERM -> TERM2 .)
    CP              reduce using rule 98 (TERM -> TERM2 .)
    PC              reduce using rule 98 (TERM -> TERM2 .)
    GT              reduce using rule 98 (TERM -> TERM2 .)
    GTE             reduce using rule 98 (TERM -> TERM2 .)
    LT              reduce using rule 98 (TERM -> TERM2 .)
    LTE             reduce using rule 98 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 98 (TERM -> TERM2 .)
    LTGT            reduce using rule 98 (TERM -> TERM2 .)
    COMMA           reduce using rule 98 (TERM -> TERM2 .)


state 126

    (122) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 153


state 127

    (103) CTE -> INT . seen_INT
    (107) seen_INT -> .

    MULTIPLY        reduce using rule 107 (seen_INT -> .)
    DIVISION        reduce using rule 107 (seen_INT -> .)
    AND             reduce using rule 107 (seen_INT -> .)
    PLUS            reduce using rule 107 (seen_INT -> .)
    MINUS           reduce using rule 107 (seen_INT -> .)
    OR              reduce using rule 107 (seen_INT -> .)
    DOT             reduce using rule 107 (seen_INT -> .)
    CP              reduce using rule 107 (seen_INT -> .)
    PC              reduce using rule 107 (seen_INT -> .)
    GT              reduce using rule 107 (seen_INT -> .)
    GTE             reduce using rule 107 (seen_INT -> .)
    LT              reduce using rule 107 (seen_INT -> .)
    LTE             reduce using rule 107 (seen_INT -> .)
    DOUBLEEQUALS    reduce using rule 107 (seen_INT -> .)
    LTGT            reduce using rule 107 (seen_INT -> .)
    COMMA           reduce using rule 107 (seen_INT -> .)

    seen_INT                       shift and go to state 154

state 128

    (104) CTE -> FLOAT . seen_FLOAT
    (108) seen_FLOAT -> .

    MULTIPLY        reduce using rule 108 (seen_FLOAT -> .)
    DIVISION        reduce using rule 108 (seen_FLOAT -> .)
    AND             reduce using rule 108 (seen_FLOAT -> .)
    PLUS            reduce using rule 108 (seen_FLOAT -> .)
    MINUS           reduce using rule 108 (seen_FLOAT -> .)
    OR              reduce using rule 108 (seen_FLOAT -> .)
    DOT             reduce using rule 108 (seen_FLOAT -> .)
    CP              reduce using rule 108 (seen_FLOAT -> .)
    PC              reduce using rule 108 (seen_FLOAT -> .)
    GT              reduce using rule 108 (seen_FLOAT -> .)
    GTE             reduce using rule 108 (seen_FLOAT -> .)
    LT              reduce using rule 108 (seen_FLOAT -> .)
    LTE             reduce using rule 108 (seen_FLOAT -> .)
    DOUBLEEQUALS    reduce using rule 108 (seen_FLOAT -> .)
    LTGT            reduce using rule 108 (seen_FLOAT -> .)
    COMMA           reduce using rule 108 (seen_FLOAT -> .)

    seen_FLOAT                     shift and go to state 155

state 129

    (97) TERM -> OP . seen_OP_TERM EXPRESSION CP
    (99) seen_OP_TERM -> .

    OP              reduce using rule 99 (seen_OP_TERM -> .)
    PLUS            reduce using rule 99 (seen_OP_TERM -> .)
    MINUS           reduce using rule 99 (seen_OP_TERM -> .)
    INT             reduce using rule 99 (seen_OP_TERM -> .)
    FLOAT           reduce using rule 99 (seen_OP_TERM -> .)
    STRING          reduce using rule 99 (seen_OP_TERM -> .)
    IDV             reduce using rule 99 (seen_OP_TERM -> .)

    seen_OP_TERM                   shift and go to state 156

state 130

    (32) BLOCKS -> OC VARS BLOCKS2 CC .

    CC              reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARLBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 131

    (84) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 157


state 132

    (127) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 158


state 133

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC CC
    (57) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (58) STM -> . EXPRESSION
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    CTE                            shift and go to state 118
    STM                            shift and go to state 159
    EXPRESSION                     shift and go to state 135
    seen_ID                        shift and go to state 122

state 134

    (83) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 83 (RETURN -> RETURNW EQUALS PC .)


state 135

    (57) STM -> EXPRESSION . STM2 EXPRESSION seen_STM
    (58) STM -> EXPRESSION .
    (59) STM2 -> . GT
    (60) STM2 -> . GTE
    (61) STM2 -> . LT
    (62) STM2 -> . LTE
    (63) STM2 -> . DOUBLEEQUALS
    (64) STM2 -> . LTGT

    CP              reduce using rule 58 (STM -> EXPRESSION .)
    GT              shift and go to state 160
    GTE             shift and go to state 161
    LT              shift and go to state 163
    LTE             shift and go to state 165
    DOUBLEEQUALS    shift and go to state 166
    LTGT            shift and go to state 164

    STM2                           shift and go to state 162

state 136

    (46) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM . CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF OP STM . CP OC seen_OC_IF CC seen_CC_IF

    CP              shift and go to state 167


state 137

    (130) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (136) seen_VAR_LOOP -> . IDV

    IDV             shift and go to state 169

    seen_VAR_LOOP                  shift and go to state 168

state 138

    (126) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 170


state 139

    (70) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 70 (PARAM2 -> VARLSMALL .)


state 140

    (67) PARAM2 -> VARISMALL .

    IDV             reduce using rule 67 (PARAM2 -> VARISMALL .)


state 141

    (68) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 68 (PARAM2 -> VARSTSMALL .)


state 142

    (80) METHODS3 -> PARAM . COMMA METHODS3
    (81) METHODS3 -> PARAM .

    COMMA           shift and go to state 171
    CP              reduce using rule 81 (METHODS3 -> PARAM .)


state 143

    (69) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 69 (PARAM2 -> VARFSMALL .)


state 144

    (66) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 172


state 145

    (71) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS
    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHODS

    CP              shift and go to state 173


state 146

    (85) EXPRESSION -> OPER seen_EXPF .
    (86) EXPRESSION -> OPER seen_EXPF . seen_OPER EXPRESSION
    (88) seen_OPER -> . PLUS
    (89) seen_OPER -> . MINUS
    (90) seen_OPER -> . OR

    GT              reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    GTE             reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    LT              reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    LTE             reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    DOUBLEEQUALS    reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    LTGT            reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    CP              reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    COMMA           reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    DOT             reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    PC              reduce using rule 85 (EXPRESSION -> OPER seen_EXPF .)
    PLUS            shift and go to state 175
    MINUS           shift and go to state 177
    OR              shift and go to state 174

    seen_OPER                      shift and go to state 176

state 147

    (111) seen_ID -> IDV OB . INT CB

    INT             shift and go to state 178


state 148

    (102) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 102 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 102 (TERM2 -> MINUS CTE .)
    AND             reduce using rule 102 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 102 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 102 (TERM2 -> MINUS CTE .)
    OR              reduce using rule 102 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 102 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 102 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 102 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 102 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 102 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 102 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 102 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 102 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 102 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 102 (TERM2 -> MINUS CTE .)


state 149

    (105) CTE -> STRING seen_STRING .

    MULTIPLY        reduce using rule 105 (CTE -> STRING seen_STRING .)
    DIVISION        reduce using rule 105 (CTE -> STRING seen_STRING .)
    AND             reduce using rule 105 (CTE -> STRING seen_STRING .)
    PLUS            reduce using rule 105 (CTE -> STRING seen_STRING .)
    MINUS           reduce using rule 105 (CTE -> STRING seen_STRING .)
    OR              reduce using rule 105 (CTE -> STRING seen_STRING .)
    GT              reduce using rule 105 (CTE -> STRING seen_STRING .)
    GTE             reduce using rule 105 (CTE -> STRING seen_STRING .)
    LT              reduce using rule 105 (CTE -> STRING seen_STRING .)
    LTE             reduce using rule 105 (CTE -> STRING seen_STRING .)
    DOUBLEEQUALS    reduce using rule 105 (CTE -> STRING seen_STRING .)
    LTGT            reduce using rule 105 (CTE -> STRING seen_STRING .)
    CP              reduce using rule 105 (CTE -> STRING seen_STRING .)
    DOT             reduce using rule 105 (CTE -> STRING seen_STRING .)
    PC              reduce using rule 105 (CTE -> STRING seen_STRING .)
    COMMA           reduce using rule 105 (CTE -> STRING seen_STRING .)


state 150

    (91) OPER -> TERM seen_TERMF .
    (92) OPER -> TERM seen_TERMF . seen_TERM OPER
    (94) seen_TERM -> . MULTIPLY
    (95) seen_TERM -> . DIVISION
    (96) seen_TERM -> . AND

    PLUS            reduce using rule 91 (OPER -> TERM seen_TERMF .)
    MINUS           reduce using rule 91 (OPER -> TERM seen_TERMF .)
    OR              reduce using rule 91 (OPER -> TERM seen_TERMF .)
    DOT             reduce using rule 91 (OPER -> TERM seen_TERMF .)
    CP              reduce using rule 91 (OPER -> TERM seen_TERMF .)
    PC              reduce using rule 91 (OPER -> TERM seen_TERMF .)
    GT              reduce using rule 91 (OPER -> TERM seen_TERMF .)
    GTE             reduce using rule 91 (OPER -> TERM seen_TERMF .)
    LT              reduce using rule 91 (OPER -> TERM seen_TERMF .)
    LTE             reduce using rule 91 (OPER -> TERM seen_TERMF .)
    DOUBLEEQUALS    reduce using rule 91 (OPER -> TERM seen_TERMF .)
    LTGT            reduce using rule 91 (OPER -> TERM seen_TERMF .)
    COMMA           reduce using rule 91 (OPER -> TERM seen_TERMF .)
    MULTIPLY        shift and go to state 182
    DIVISION        shift and go to state 179
    AND             shift and go to state 180

    seen_TERM                      shift and go to state 181

state 151

    (101) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 101 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 101 (TERM2 -> PLUS CTE .)
    AND             reduce using rule 101 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 101 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 101 (TERM2 -> PLUS CTE .)
    OR              reduce using rule 101 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 101 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 101 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 101 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 101 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 101 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 101 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 101 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 101 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 101 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 101 (TERM2 -> PLUS CTE .)


state 152

    (123) CONCAT -> EXPRESSION seen_EXP_SAY . DOT CONCAT
    (124) CONCAT -> EXPRESSION seen_EXP_SAY .

    DOT             shift and go to state 183
    CP              reduce using rule 124 (CONCAT -> EXPRESSION seen_EXP_SAY .)


state 153

    (122) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 184


state 154

    (103) CTE -> INT seen_INT .

    MULTIPLY        reduce using rule 103 (CTE -> INT seen_INT .)
    DIVISION        reduce using rule 103 (CTE -> INT seen_INT .)
    AND             reduce using rule 103 (CTE -> INT seen_INT .)
    PLUS            reduce using rule 103 (CTE -> INT seen_INT .)
    MINUS           reduce using rule 103 (CTE -> INT seen_INT .)
    OR              reduce using rule 103 (CTE -> INT seen_INT .)
    GT              reduce using rule 103 (CTE -> INT seen_INT .)
    GTE             reduce using rule 103 (CTE -> INT seen_INT .)
    LT              reduce using rule 103 (CTE -> INT seen_INT .)
    LTE             reduce using rule 103 (CTE -> INT seen_INT .)
    DOUBLEEQUALS    reduce using rule 103 (CTE -> INT seen_INT .)
    LTGT            reduce using rule 103 (CTE -> INT seen_INT .)
    CP              reduce using rule 103 (CTE -> INT seen_INT .)
    DOT             reduce using rule 103 (CTE -> INT seen_INT .)
    PC              reduce using rule 103 (CTE -> INT seen_INT .)
    COMMA           reduce using rule 103 (CTE -> INT seen_INT .)


state 155

    (104) CTE -> FLOAT seen_FLOAT .

    MULTIPLY        reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    DIVISION        reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    AND             reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    PLUS            reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    MINUS           reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    OR              reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    GT              reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    GTE             reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    LT              reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    LTE             reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    DOUBLEEQUALS    reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    LTGT            reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    CP              reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    DOT             reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    PC              reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)
    COMMA           reduce using rule 104 (CTE -> FLOAT seen_FLOAT .)


state 156

    (97) TERM -> OP seen_OP_TERM . EXPRESSION CP
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 185

state 157

    (84) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 84 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 158

    (127) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (128) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (129) PARAMETERS -> . EXPRESSION
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    PARAMETERS                     shift and go to state 186
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 187

state 159

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC CC

    CP              shift and go to state 188


state 160

    (59) STM2 -> GT .

    OP              reduce using rule 59 (STM2 -> GT .)
    PLUS            reduce using rule 59 (STM2 -> GT .)
    MINUS           reduce using rule 59 (STM2 -> GT .)
    INT             reduce using rule 59 (STM2 -> GT .)
    FLOAT           reduce using rule 59 (STM2 -> GT .)
    STRING          reduce using rule 59 (STM2 -> GT .)
    IDV             reduce using rule 59 (STM2 -> GT .)


state 161

    (60) STM2 -> GTE .

    OP              reduce using rule 60 (STM2 -> GTE .)
    PLUS            reduce using rule 60 (STM2 -> GTE .)
    MINUS           reduce using rule 60 (STM2 -> GTE .)
    INT             reduce using rule 60 (STM2 -> GTE .)
    FLOAT           reduce using rule 60 (STM2 -> GTE .)
    STRING          reduce using rule 60 (STM2 -> GTE .)
    IDV             reduce using rule 60 (STM2 -> GTE .)


state 162

    (57) STM -> EXPRESSION STM2 . EXPRESSION seen_STM
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 189

state 163

    (61) STM2 -> LT .

    OP              reduce using rule 61 (STM2 -> LT .)
    PLUS            reduce using rule 61 (STM2 -> LT .)
    MINUS           reduce using rule 61 (STM2 -> LT .)
    INT             reduce using rule 61 (STM2 -> LT .)
    FLOAT           reduce using rule 61 (STM2 -> LT .)
    STRING          reduce using rule 61 (STM2 -> LT .)
    IDV             reduce using rule 61 (STM2 -> LT .)


state 164

    (64) STM2 -> LTGT .

    OP              reduce using rule 64 (STM2 -> LTGT .)
    PLUS            reduce using rule 64 (STM2 -> LTGT .)
    MINUS           reduce using rule 64 (STM2 -> LTGT .)
    INT             reduce using rule 64 (STM2 -> LTGT .)
    FLOAT           reduce using rule 64 (STM2 -> LTGT .)
    STRING          reduce using rule 64 (STM2 -> LTGT .)
    IDV             reduce using rule 64 (STM2 -> LTGT .)


state 165

    (62) STM2 -> LTE .

    OP              reduce using rule 62 (STM2 -> LTE .)
    PLUS            reduce using rule 62 (STM2 -> LTE .)
    MINUS           reduce using rule 62 (STM2 -> LTE .)
    INT             reduce using rule 62 (STM2 -> LTE .)
    FLOAT           reduce using rule 62 (STM2 -> LTE .)
    STRING          reduce using rule 62 (STM2 -> LTE .)
    IDV             reduce using rule 62 (STM2 -> LTE .)


state 166

    (63) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 63 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 63 (STM2 -> DOUBLEEQUALS .)


state 167

    (46) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP . OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF OP STM CP . OC seen_OC_IF CC seen_CC_IF

    OC              shift and go to state 190


state 168

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    FROM            shift and go to state 191


state 169

    (136) seen_VAR_LOOP -> IDV .

    FROM            reduce using rule 136 (seen_VAR_LOOP -> IDV .)


state 170

    (126) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 192


state 171

    (80) METHODS3 -> PARAM COMMA . METHODS3
    (80) METHODS3 -> . PARAM COMMA METHODS3
    (81) METHODS3 -> . PARAM
    (82) METHODS3 -> .
    (66) PARAM -> . PARAM2 IDV
    (67) PARAM2 -> . VARISMALL
    (68) PARAM2 -> . VARSTSMALL
    (69) PARAM2 -> . VARFSMALL
    (70) PARAM2 -> . VARLSMALL

    CP              reduce using rule 82 (METHODS3 -> .)
    VARISMALL       shift and go to state 140
    VARSTSMALL      shift and go to state 141
    VARFSMALL       shift and go to state 143
    VARLSMALL       shift and go to state 139

    METHODS3                       shift and go to state 193
    PARAM                          shift and go to state 142
    PARAM2                         shift and go to state 144

state 172

    (66) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 66 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 66 (PARAM -> PARAM2 IDV .)


state 173

    (71) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS
    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHODS
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 59

    BLOCKS                         shift and go to state 194

state 174

    (90) seen_OPER -> OR .

    OP              reduce using rule 90 (seen_OPER -> OR .)
    PLUS            reduce using rule 90 (seen_OPER -> OR .)
    MINUS           reduce using rule 90 (seen_OPER -> OR .)
    INT             reduce using rule 90 (seen_OPER -> OR .)
    FLOAT           reduce using rule 90 (seen_OPER -> OR .)
    STRING          reduce using rule 90 (seen_OPER -> OR .)
    IDV             reduce using rule 90 (seen_OPER -> OR .)


state 175

    (88) seen_OPER -> PLUS .

    OP              reduce using rule 88 (seen_OPER -> PLUS .)
    PLUS            reduce using rule 88 (seen_OPER -> PLUS .)
    MINUS           reduce using rule 88 (seen_OPER -> PLUS .)
    INT             reduce using rule 88 (seen_OPER -> PLUS .)
    FLOAT           reduce using rule 88 (seen_OPER -> PLUS .)
    STRING          reduce using rule 88 (seen_OPER -> PLUS .)
    IDV             reduce using rule 88 (seen_OPER -> PLUS .)


state 176

    (86) EXPRESSION -> OPER seen_EXPF seen_OPER . EXPRESSION
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 195

state 177

    (89) seen_OPER -> MINUS .

    OP              reduce using rule 89 (seen_OPER -> MINUS .)
    PLUS            reduce using rule 89 (seen_OPER -> MINUS .)
    MINUS           reduce using rule 89 (seen_OPER -> MINUS .)
    INT             reduce using rule 89 (seen_OPER -> MINUS .)
    FLOAT           reduce using rule 89 (seen_OPER -> MINUS .)
    STRING          reduce using rule 89 (seen_OPER -> MINUS .)
    IDV             reduce using rule 89 (seen_OPER -> MINUS .)


state 178

    (111) seen_ID -> IDV OB INT . CB

    CB              shift and go to state 196


state 179

    (95) seen_TERM -> DIVISION .

    OP              reduce using rule 95 (seen_TERM -> DIVISION .)
    PLUS            reduce using rule 95 (seen_TERM -> DIVISION .)
    MINUS           reduce using rule 95 (seen_TERM -> DIVISION .)
    INT             reduce using rule 95 (seen_TERM -> DIVISION .)
    FLOAT           reduce using rule 95 (seen_TERM -> DIVISION .)
    STRING          reduce using rule 95 (seen_TERM -> DIVISION .)
    IDV             reduce using rule 95 (seen_TERM -> DIVISION .)


state 180

    (96) seen_TERM -> AND .

    OP              reduce using rule 96 (seen_TERM -> AND .)
    PLUS            reduce using rule 96 (seen_TERM -> AND .)
    MINUS           reduce using rule 96 (seen_TERM -> AND .)
    INT             reduce using rule 96 (seen_TERM -> AND .)
    FLOAT           reduce using rule 96 (seen_TERM -> AND .)
    STRING          reduce using rule 96 (seen_TERM -> AND .)
    IDV             reduce using rule 96 (seen_TERM -> AND .)


state 181

    (92) OPER -> TERM seen_TERMF seen_TERM . OPER
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 197
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118

state 182

    (94) seen_TERM -> MULTIPLY .

    OP              reduce using rule 94 (seen_TERM -> MULTIPLY .)
    PLUS            reduce using rule 94 (seen_TERM -> MULTIPLY .)
    MINUS           reduce using rule 94 (seen_TERM -> MULTIPLY .)
    INT             reduce using rule 94 (seen_TERM -> MULTIPLY .)
    FLOAT           reduce using rule 94 (seen_TERM -> MULTIPLY .)
    STRING          reduce using rule 94 (seen_TERM -> MULTIPLY .)
    IDV             reduce using rule 94 (seen_TERM -> MULTIPLY .)


state 183

    (123) CONCAT -> EXPRESSION seen_EXP_SAY DOT . CONCAT
    (123) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (124) CONCAT -> . EXPRESSION seen_EXP_SAY
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 124
    CONCAT                         shift and go to state 198

state 184

    (122) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 122 (SAY -> SAYW OP CONCAT CP PC .)


state 185

    (97) TERM -> OP seen_OP_TERM EXPRESSION . CP

    CP              shift and go to state 199


state 186

    (127) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 200


state 187

    (128) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (129) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 201
    CP              reduce using rule 129 (PARAMETERS -> EXPRESSION .)


state 188

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC CC
    (148) seen_CP_LOOPIF -> .

    OC              reduce using rule 148 (seen_CP_LOOPIF -> .)

    seen_CP_LOOPIF                 shift and go to state 202

state 189

    (57) STM -> EXPRESSION STM2 EXPRESSION . seen_STM
    (65) seen_STM -> .

    CP              reduce using rule 65 (seen_STM -> .)

    seen_STM                       shift and go to state 203

state 190

    (46) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP OC . seen_OC_IF CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF OP STM CP OC . seen_OC_IF CC seen_CC_IF
    (50) seen_OC_IF -> .

    CC              reduce using rule 50 (seen_OC_IF -> .)
    RETURNW         reduce using rule 50 (seen_OC_IF -> .)
    IDV             reduce using rule 50 (seen_OC_IF -> .)
    LOOPW           reduce using rule 50 (seen_OC_IF -> .)
    LOOPIFW         reduce using rule 50 (seen_OC_IF -> .)
    IF              reduce using rule 50 (seen_OC_IF -> .)
    ASKUSER         reduce using rule 50 (seen_OC_IF -> .)
    SAYW            reduce using rule 50 (seen_OC_IF -> .)
    CALLBOXW        reduce using rule 50 (seen_OC_IF -> .)

    seen_OC_IF                     shift and go to state 204

state 191

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (137) LOOP2 -> . seen_INT_LOOP
    (138) LOOP2 -> . seen_FLOAT_LOOP
    (139) seen_INT_LOOP -> . INT
    (140) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 208
    FLOAT           shift and go to state 205

    seen_FLOAT_LOOP                shift and go to state 207
    LOOP2                          shift and go to state 209
    seen_INT_LOOP                  shift and go to state 206

state 192

    (126) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 210


state 193

    (80) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 80 (METHODS3 -> PARAM COMMA METHODS3 .)


state 194

    (71) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .
    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHODS
    (71) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (72) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (74) METHODS2 -> . RECURSIVEBOX
    (75) METHODS2 -> . VOIDBOX
    (76) METHODS2 -> . VARIBOX
    (77) METHODS2 -> . VARFBOX
    (78) METHODS2 -> . VARSBOX
    (79) METHODS2 -> . VARLBOX

    CC              reduce using rule 71 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .)
    RECURSIVEBOX    shift and go to state 66
    VOIDBOX         shift and go to state 73
    VARIBOX         shift and go to state 72
    VARFBOX         shift and go to state 70
    VARSBOX         shift and go to state 71
    VARLBOX         shift and go to state 69

    METHODS2                       shift and go to state 74
    METHODS                        shift and go to state 211

state 195

    (86) EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .

    GT              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GTE             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LT              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTE             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTGT            reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    CP              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    COMMA           reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOT             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    PC              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)


state 196

    (111) seen_ID -> IDV OB INT CB .

    MULTIPLY        reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    DIVISION        reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    AND             reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    PLUS            reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    MINUS           reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    OR              reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    DOT             reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    CP              reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    PC              reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    GT              reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    GTE             reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    LT              reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    LTE             reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    LTGT            reduce using rule 111 (seen_ID -> IDV OB INT CB .)
    COMMA           reduce using rule 111 (seen_ID -> IDV OB INT CB .)


state 197

    (92) OPER -> TERM seen_TERMF seen_TERM OPER .

    PLUS            reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    MINUS           reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    OR              reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOT             reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CP              reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    PC              reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GT              reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GTE             reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LT              reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTE             reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOUBLEEQUALS    reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTGT            reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    COMMA           reduce using rule 92 (OPER -> TERM seen_TERMF seen_TERM OPER .)


state 198

    (123) CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .

    CP              reduce using rule 123 (CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .)


state 199

    (97) TERM -> OP seen_OP_TERM EXPRESSION CP .

    MULTIPLY        reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DIVISION        reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    AND             reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    PLUS            reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    MINUS           reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    OR              reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DOT             reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    CP              reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    PC              reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    GT              reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    GTE             reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LT              reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LTE             reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LTGT            reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    COMMA           reduce using rule 97 (TERM -> OP seen_OP_TERM EXPRESSION CP .)


state 200

    (127) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 212


state 201

    (128) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (128) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (129) PARAMETERS -> . EXPRESSION
    (85) EXPRESSION -> . OPER seen_EXPF
    (86) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (91) OPER -> . TERM seen_TERMF
    (92) OPER -> . TERM seen_TERMF seen_TERM OPER
    (97) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (98) TERM -> . TERM2
    (100) TERM2 -> . CTE
    (101) TERM2 -> . PLUS CTE
    (102) TERM2 -> . MINUS CTE
    (103) CTE -> . INT seen_INT
    (104) CTE -> . FLOAT seen_FLOAT
    (105) CTE -> . STRING seen_STRING
    (106) CTE -> . seen_ID
    (110) seen_ID -> . IDV
    (111) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    PARAMETERS                     shift and go to state 213
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 187

state 202

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC CC

    OC              shift and go to state 214


state 203

    (57) STM -> EXPRESSION STM2 EXPRESSION seen_STM .

    CP              reduce using rule 57 (STM -> EXPRESSION STM2 EXPRESSION seen_STM .)


state 204

    (46) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP OC seen_OC_IF . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF . CC seen_CC_IF
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 215
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 216
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 205

    (140) seen_FLOAT_LOOP -> FLOAT .

    CP              reduce using rule 140 (seen_FLOAT_LOOP -> FLOAT .)
    TO              reduce using rule 140 (seen_FLOAT_LOOP -> FLOAT .)
    BY              reduce using rule 140 (seen_FLOAT_LOOP -> FLOAT .)


state 206

    (137) LOOP2 -> seen_INT_LOOP .

    TO              reduce using rule 137 (LOOP2 -> seen_INT_LOOP .)
    CP              reduce using rule 137 (LOOP2 -> seen_INT_LOOP .)
    BY              reduce using rule 137 (LOOP2 -> seen_INT_LOOP .)


state 207

    (138) LOOP2 -> seen_FLOAT_LOOP .

    TO              reduce using rule 138 (LOOP2 -> seen_FLOAT_LOOP .)
    CP              reduce using rule 138 (LOOP2 -> seen_FLOAT_LOOP .)
    BY              reduce using rule 138 (LOOP2 -> seen_FLOAT_LOOP .)


state 208

    (139) seen_INT_LOOP -> INT .

    BY              reduce using rule 139 (seen_INT_LOOP -> INT .)
    CP              reduce using rule 139 (seen_INT_LOOP -> INT .)
    TO              reduce using rule 139 (seen_INT_LOOP -> INT .)


state 209

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC CC

    TO              shift and go to state 217


state 210

    (126) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 218


state 211

    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .

    CC              reduce using rule 72 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .)


state 212

    (127) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 127 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 213

    (128) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 128 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 214

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . BLOCKS2 CC
    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 219
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 220
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 215

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF CC . CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF CC . seen_CC_IF
    (52) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (51) seen_CC_IF -> .

    ELSE            shift and go to state 221
    RETURNW         reduce using rule 51 (seen_CC_IF -> .)
    IDV             reduce using rule 51 (seen_CC_IF -> .)
    LOOPW           reduce using rule 51 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 51 (seen_CC_IF -> .)
    IF              reduce using rule 51 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 51 (seen_CC_IF -> .)
    SAYW            reduce using rule 51 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 51 (seen_CC_IF -> .)
    CC              reduce using rule 51 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 222
    CONDITION2                     shift and go to state 223

state 216

    (46) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC seen_CC_IF

    CC              shift and go to state 224


state 217

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC CC
    (137) LOOP2 -> . seen_INT_LOOP
    (138) LOOP2 -> . seen_FLOAT_LOOP
    (139) seen_INT_LOOP -> . INT
    (140) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 208
    FLOAT           shift and go to state 205

    seen_FLOAT_LOOP                shift and go to state 207
    LOOP2                          shift and go to state 225
    seen_INT_LOOP                  shift and go to state 206

state 218

    (126) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 126 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 219

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .

    RETURNW         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IDV             reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPW           reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPIFW         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IF              reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    ASKUSER         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    SAYW            reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CALLBOXW        reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CC              reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)


state 220

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 . CC

    CC              shift and go to state 226


state 221

    (52) CONDITION2 -> ELSE . seen_ELSE OC CONDITION3
    (55) seen_ELSE -> .

    OC              reduce using rule 55 (seen_ELSE -> .)

    seen_ELSE                      shift and go to state 227

state 222

    (49) CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .

    RETURNW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IDV             reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPW           reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPIFW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IF              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    ASKUSER         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    SAYW            reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CALLBOXW        reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CC              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)


state 223

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .

    RETURNW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IDV             reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPW           reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPIFW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IF              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    ASKUSER         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    SAYW            reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CALLBOXW        reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CC              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)


state 224

    (46) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . seen_CC_IF
    (52) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (51) seen_CC_IF -> .

    ELSE            shift and go to state 221
    RETURNW         reduce using rule 51 (seen_CC_IF -> .)
    IDV             reduce using rule 51 (seen_CC_IF -> .)
    LOOPW           reduce using rule 51 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 51 (seen_CC_IF -> .)
    IF              reduce using rule 51 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 51 (seen_CC_IF -> .)
    SAYW            reduce using rule 51 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 51 (seen_CC_IF -> .)
    CC              reduce using rule 51 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 228
    CONDITION2                     shift and go to state 229

state 225

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC CC

    BY              shift and go to state 231
    CP              shift and go to state 230


state 226

    (145) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .

    RETURNW         reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IDV             reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPW           reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IF              reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    SAYW            reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CC              reduce using rule 145 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)


state 227

    (52) CONDITION2 -> ELSE seen_ELSE . OC CONDITION3

    OC              shift and go to state 232


state 228

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .

    RETURNW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IDV             reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPW           reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPIFW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IF              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    ASKUSER         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    SAYW            reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CALLBOXW        reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CC              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)


state 229

    (46) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)


state 230

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC CC
    (135) seen_CP_LOOP2 -> .

    OC              reduce using rule 135 (seen_CP_LOOP2 -> .)

    seen_CP_LOOP2                  shift and go to state 233

state 231

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (141) LOOP3 -> . PLUS
    (142) LOOP3 -> . MINUS
    (143) LOOP3 -> .

    PLUS            shift and go to state 235
    MINUS           shift and go to state 234
    INT             reduce using rule 143 (LOOP3 -> .)
    FLOAT           reduce using rule 143 (LOOP3 -> .)

    LOOP3                          shift and go to state 236

state 232

    (52) CONDITION2 -> ELSE seen_ELSE OC . CONDITION3
    (53) CONDITION3 -> . BLOCKS2 CC seen_CC_ELSE
    (54) CONDITION3 -> . CC seen_CC_ELSE
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 237
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    CONDITION3                     shift and go to state 238
    BLOCKS2                        shift and go to state 239
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 233

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC CC

    OC              shift and go to state 240


state 234

    (142) LOOP3 -> MINUS .

    INT             reduce using rule 142 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 142 (LOOP3 -> MINUS .)


state 235

    (141) LOOP3 -> PLUS .

    INT             reduce using rule 141 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 141 (LOOP3 -> PLUS .)


state 236

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC CC
    (137) LOOP2 -> . seen_INT_LOOP
    (138) LOOP2 -> . seen_FLOAT_LOOP
    (139) seen_INT_LOOP -> . INT
    (140) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 208
    FLOAT           shift and go to state 205

    seen_FLOAT_LOOP                shift and go to state 207
    LOOP2                          shift and go to state 241
    seen_INT_LOOP                  shift and go to state 206

state 237

    (54) CONDITION3 -> CC . seen_CC_ELSE
    (56) seen_CC_ELSE -> .

    RETURNW         reduce using rule 56 (seen_CC_ELSE -> .)
    IDV             reduce using rule 56 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 56 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 56 (seen_CC_ELSE -> .)
    IF              reduce using rule 56 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 56 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 56 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 56 (seen_CC_ELSE -> .)
    CC              reduce using rule 56 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 242

state 238

    (52) CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .

    RETURNW         reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IDV             reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPW           reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPIFW         reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IF              reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    ASKUSER         reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    SAYW            reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CALLBOXW        reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CC              reduce using rule 52 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)


state 239

    (53) CONDITION3 -> BLOCKS2 . CC seen_CC_ELSE

    CC              shift and go to state 243


state 240

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 244
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 245
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 241

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC CC

    CP              shift and go to state 246


state 242

    (54) CONDITION3 -> CC seen_CC_ELSE .

    RETURNW         reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    IDV             reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPW           reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    IF              reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    SAYW            reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)
    CC              reduce using rule 54 (CONDITION3 -> CC seen_CC_ELSE .)


state 243

    (53) CONDITION3 -> BLOCKS2 CC . seen_CC_ELSE
    (56) seen_CC_ELSE -> .

    RETURNW         reduce using rule 56 (seen_CC_ELSE -> .)
    IDV             reduce using rule 56 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 56 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 56 (seen_CC_ELSE -> .)
    IF              reduce using rule 56 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 56 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 56 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 56 (seen_CC_ELSE -> .)
    CC              reduce using rule 56 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 247

state 244

    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .

    RETURNW         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IDV             reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPW           reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPIFW         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IF              reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    ASKUSER         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    SAYW            reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CALLBOXW        reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CC              reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)


state 245

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 . CC

    CC              shift and go to state 248


state 246

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC CC
    (134) seen_CP_LOOP1 -> .

    OC              reduce using rule 134 (seen_CP_LOOP1 -> .)

    seen_CP_LOOP1                  shift and go to state 249

state 247

    (53) CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .

    RETURNW         reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IDV             reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPW           reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IF              reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    SAYW            reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CC              reduce using rule 53 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)


state 248

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .

    RETURNW         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IDV             reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IF              reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    SAYW            reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CC              reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)


state 249

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC CC

    OC              shift and go to state 250


state 250

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (83) RETURN -> . RETURNW EQUALS PC
    (84) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (130) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (126) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (122) SAY -> . SAYW OP CONCAT CP PC
    (127) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 251
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 80

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    SAY                            shift and go to state 81
    ASK                            shift and go to state 82
    CONDITION                      shift and go to state 83
    ASSIGNATION                    shift and go to state 84
    BLOCKS2                        shift and go to state 252
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 251

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .

    RETURNW         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IDV             reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPW           reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPIFW         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IF              reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    ASKUSER         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    SAYW            reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CALLBOXW        reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CC              reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)


state 252

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 . CC

    CC              shift and go to state 253


state 253

    (130) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .

    RETURNW         reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IDV             reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IF              reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    SAYW            reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CC              reduce using rule 130 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 59 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 59 resolved as shift
WARNING: shift/reduce conflict for IDV in state 59 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 59 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 59 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 59 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 59 resolved as shift
