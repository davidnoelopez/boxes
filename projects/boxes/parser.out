Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
Rule 2     BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
Rule 3     seen_globalvars -> <empty>
Rule 4     seen_methods -> <empty>
Rule 5     VARS -> VARI VARS
Rule 6     VARS -> VARF VARS
Rule 7     VARS -> VARST VARS
Rule 8     VARS -> VARL VARS
Rule 9     VARS -> <empty>
Rule 10    VARF -> VARFSMALL VARF3 PC
Rule 11    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 12    VARF3 -> IDV EQUALS FLOAT
Rule 13    VARF3 -> IDV COMMA VARF3
Rule 14    VARF3 -> IDV
Rule 15    VARI -> VARISMALL VARI3 PC
Rule 16    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 17    VARI3 -> IDV EQUALS INT
Rule 18    VARI3 -> IDV COMMA VARI3
Rule 19    VARI3 -> IDV
Rule 20    VARST -> VARSTSMALL VARST3 PC
Rule 21    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 22    VARST3 -> IDV EQUALS STRING
Rule 23    VARST3 -> IDV COMMA VARST3
Rule 24    VARST3 -> IDV
Rule 25    VARL -> VARLSMALL VARL3 PC
Rule 26    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 27    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 28    VARL3 -> IDV COMMA VARL3
Rule 29    VARL3 -> IDV
Rule 30    VARL4 -> CTEL
Rule 31    VARL4 -> CTEL COMMA VARL4
Rule 32    VARL4 -> <empty>
Rule 33    BLOCKS -> OC VARS BLOCKS2 CC
Rule 34    BLOCKS -> OC VARS CC
Rule 35    BLOCKS -> OC BLOCKS2 CC
Rule 36    BLOCKS -> OC CC
Rule 37    BLOCKS2 -> CODE
Rule 38    BLOCKS2 -> CODE BLOCKS2
Rule 39    CODE -> RETURN
Rule 40    CODE -> ASSIGNATION
Rule 41    CODE -> LOOP
Rule 42    CODE -> LOOPIF
Rule 43    CODE -> CONDITION
Rule 44    CODE -> ASK
Rule 45    CODE -> SAY
Rule 46    CODE -> CALLBOX
Rule 47    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
Rule 48    CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2
Rule 49    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
Rule 50    CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF
Rule 51    seen_OC_IF -> <empty>
Rule 52    seen_CC_IF -> <empty>
Rule 53    CONDITION2 -> ELSE seen_ELSE OC CONDITION3
Rule 54    CONDITION3 -> BLOCKS2 CC seen_CC_ELSE
Rule 55    CONDITION3 -> CC seen_CC_ELSE
Rule 56    seen_ELSE -> <empty>
Rule 57    seen_CC_ELSE -> <empty>
Rule 58    STM -> EXPRESSION STM2 EXPRESSION seen_STM
Rule 59    STM -> EXPRESSION
Rule 60    STM2 -> GT
Rule 61    STM2 -> GTE
Rule 62    STM2 -> LT
Rule 63    STM2 -> LTE
Rule 64    STM2 -> DOUBLEEQUALS
Rule 65    STM2 -> LTGT
Rule 66    seen_STM -> <empty>
Rule 67    PARAM -> PARAM2 IDV
Rule 68    PARAM2 -> VARISMALL
Rule 69    PARAM2 -> VARSTSMALL
Rule 70    PARAM2 -> VARFSMALL
Rule 71    PARAM2 -> VARLSMALL
Rule 72    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS
Rule 73    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
Rule 74    seen_IDM -> IDM
Rule 75    METHODS2 -> RECURSIVEBOX
Rule 76    METHODS2 -> VOIDBOX
Rule 77    METHODS2 -> VARIBOX
Rule 78    METHODS2 -> VARFBOX
Rule 79    METHODS2 -> VARSBOX
Rule 80    METHODS2 -> VARLBOX
Rule 81    METHODS3 -> PARAM COMMA METHODS3
Rule 82    METHODS3 -> PARAM
Rule 83    METHODS3 -> <empty>
Rule 84    RETURN -> RETURNW EQUALS PC
Rule 85    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 86    EXPRESSION -> OPER seen_EXPF
Rule 87    EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION
Rule 88    seen_EXPF -> <empty>
Rule 89    seen_OPER -> PLUS
Rule 90    seen_OPER -> MINUS
Rule 91    seen_OPER -> OR
Rule 92    OPER -> TERM seen_TERMF
Rule 93    OPER -> TERM seen_TERMF seen_TERM OPER
Rule 94    seen_TERMF -> <empty>
Rule 95    seen_TERM -> MULTIPLY
Rule 96    seen_TERM -> DIVISION
Rule 97    seen_TERM -> AND
Rule 98    TERM -> OP seen_OP_TERM STM CP
Rule 99    TERM -> TERM2
Rule 100   seen_OP_TERM -> <empty>
Rule 101   TERM2 -> CTE
Rule 102   TERM2 -> PLUS CTE
Rule 103   TERM2 -> MINUS CTE
Rule 104   CTE -> INT seen_INT
Rule 105   CTE -> FLOAT seen_FLOAT
Rule 106   CTE -> STRING seen_STRING
Rule 107   CTE -> seen_ID
Rule 108   seen_INT -> <empty>
Rule 109   seen_FLOAT -> <empty>
Rule 110   seen_STRING -> <empty>
Rule 111   seen_ID -> IDV
Rule 112   seen_ID -> IDV OB INT CB
Rule 113   CTEL -> INT
Rule 114   CTEL -> FLOAT
Rule 115   CTEL -> STRING
Rule 116   CTEL -> IDV
Rule 117   CTEL -> IDV OB INT CB
Rule 118   CTEL2 -> CTEL CB seen_CB
Rule 119   CTEL2 -> CTEL COMMA CTEL2
Rule 120   CTEL2 -> CB seen_CB
Rule 121   seen_OB -> <empty>
Rule 122   seen_CB -> <empty>
Rule 123   SAY -> SAYW OP CONCAT CP PC
Rule 124   CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT
Rule 125   CONCAT -> EXPRESSION seen_EXP_SAY
Rule 126   seen_EXP_SAY -> <empty>
Rule 127   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 128   CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 129   PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 130   PARAMETERS -> EXPRESSION
Rule 131   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
Rule 132   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
Rule 133   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
Rule 134   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
Rule 135   seen_CP_LOOP1 -> <empty>
Rule 136   seen_CP_LOOP2 -> <empty>
Rule 137   seen_VAR_LOOP -> IDV
Rule 138   LOOP2 -> seen_INT_LOOP
Rule 139   LOOP2 -> seen_FLOAT_LOOP
Rule 140   seen_INT_LOOP -> INT
Rule 141   seen_FLOAT_LOOP -> FLOAT
Rule 142   LOOP3 -> PLUS
Rule 143   LOOP3 -> MINUS
Rule 144   LOOP3 -> <empty>
Rule 145   seen_LOOP -> <empty>
Rule 146   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
Rule 147   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
Rule 148   seen_LOOPIF -> <empty>
Rule 149   seen_CP_LOOPIF -> <empty>

Terminals, with rules where they appear

AND                  : 97
ASKUSER              : 127
BOX                  : 1 2
BY                   : 131 133
CALLBOXW             : 128
CB                   : 26 27 112 117 118 120
CC                   : 1 2 33 34 35 36 47 48 49 50 54 55 131 132 133 134 146 147
COMMA                : 11 13 16 18 21 23 27 28 31 81 119 127 128 129
CP                   : 1 2 47 48 49 50 72 73 98 123 127 128 131 132 133 134 146 147
DIVISION             : 96
DOT                  : 124
DOUBLEEQUALS         : 64
ELSE                 : 53
EQUALS               : 11 12 16 17 21 22 26 27 84 85
FLOAT                : 11 12 105 114 141
FROM                 : 131 132 133 134
GT                   : 60
GTE                  : 61
IDM                  : 74 128
IDV                  : 11 12 13 14 16 17 18 19 21 22 23 24 26 27 28 29 67 85 111 112 116 117 127 137
IF                   : 47 48 49 50
INT                  : 16 17 104 112 113 117 140
LOOPIFW              : 146 147
LOOPW                : 131 132 133 134
LT                   : 62
LTE                  : 63
LTGT                 : 65
MAINBOX              : 1 2
MINUS                : 90 103 143
MULTIPLY             : 95
OB                   : 26 27 112 117
OC                   : 1 2 33 34 35 36 47 48 49 50 53 131 132 133 134 146 147
OP                   : 1 2 47 48 49 50 72 73 98 123 127 128 131 132 133 134 146 147
OR                   : 91
PC                   : 10 15 20 25 84 85 123 127 128
PLUS                 : 89 102 142
RECURSIVEBOX         : 75
RETURNW              : 84
SAYW                 : 123
STRING               : 21 22 106 115 127
TO                   : 131 132 133 134
VARFBOX              : 78
VARFSMALL            : 10 70
VARIBOX              : 77
VARISMALL            : 15 68
VARLBOX              : 80
VARLSMALL            : 25 71
VARSBOX              : 79
VARSTSMALL           : 20 69
VOIDBOX              : 76
error                : 

Nonterminals, with rules where they appear

ASK                  : 44
ASSIGNATION          : 40
BLOCKS               : 1 2 72 73
BLOCKS2              : 33 35 38 47 49 54 131 132 146
BOXES                : 0
CALLBOX              : 46
CODE                 : 37 38
CONCAT               : 123 124
CONDITION            : 43
CONDITION2           : 47 48
CONDITION3           : 53
CTE                  : 101 102 103
CTEL                 : 30 31 118 119
CTEL2                : 119
EXPRESSION           : 58 58 59 85 87 124 125 129 130
LOOP                 : 41
LOOP2                : 131 131 131 132 132 133 133 133 134 134
LOOP3                : 131 133
LOOPIF               : 42
METHODS              : 1 73
METHODS2             : 72 73
METHODS3             : 72 73 81
OPER                 : 86 87 93
PARAM                : 81 82
PARAM2               : 67
PARAMETERS           : 128 129
RETURN               : 39
SAY                  : 45
STM                  : 47 48 49 50 98 146 147
STM2                 : 58
TERM                 : 92 93
TERM2                : 99
VARF                 : 6
VARF3                : 10 11 13
VARI                 : 5
VARI3                : 15 16 18
VARL                 : 8
VARL3                : 25 27 28
VARL4                : 26 27 31
VARS                 : 1 2 5 6 7 8 33 34
VARST                : 7
VARST3               : 20 21 23
seen_CB              : 118 120
seen_CC_ELSE         : 54 55
seen_CC_IF           : 49 50
seen_CP_LOOP1        : 131 133
seen_CP_LOOP2        : 132 134
seen_CP_LOOPIF       : 146 147
seen_ELSE            : 53
seen_EXPF            : 86 87
seen_EXP_SAY         : 124 125
seen_FLOAT           : 105
seen_FLOAT_LOOP      : 139
seen_ID              : 107
seen_IDM             : 72 73
seen_INT             : 104
seen_INT_LOOP        : 138
seen_LOOP            : 131 132 133 134
seen_LOOPIF          : 146 147
seen_OB              : 
seen_OC_IF           : 47 48 49 50
seen_OPER            : 87
seen_OP_TERM         : 98
seen_STM             : 58
seen_STRING          : 106
seen_TERM            : 93
seen_TERMF           : 92 93
seen_VAR_LOOP        : 131 132 133 134
seen_globalvars      : 1 2
seen_methods         : 1 2

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> . BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX . OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC . VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    VARLBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 4
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 4

    (1) BOXES -> BOX OC VARS . seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC VARS . seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (3) seen_globalvars -> .

    RECURSIVEBOX    reduce using rule 3 (seen_globalvars -> .)
    VOIDBOX         reduce using rule 3 (seen_globalvars -> .)
    VARIBOX         reduce using rule 3 (seen_globalvars -> .)
    VARFBOX         reduce using rule 3 (seen_globalvars -> .)
    VARSBOX         reduce using rule 3 (seen_globalvars -> .)
    VARLBOX         reduce using rule 3 (seen_globalvars -> .)
    MAINBOX         reduce using rule 3 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 13

state 5

    (6) VARS -> VARF . VARS
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    VARLBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 14
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 6

    (8) VARS -> VARL . VARS
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    VARLBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 15
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 7

    (25) VARL -> VARLSMALL . VARL3 PC
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (28) VARL3 -> . IDV COMMA VARL3
    (29) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 16

state 8

    (5) VARS -> VARI . VARS
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    VARLBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 18
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 9

    (20) VARST -> VARSTSMALL . VARST3 PC
    (21) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (22) VARST3 -> . IDV EQUALS STRING
    (23) VARST3 -> . IDV COMMA VARST3
    (24) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 19

state 10

    (7) VARS -> VARST . VARS
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    VARLBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 21
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 11

    (15) VARI -> VARISMALL . VARI3 PC
    (16) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (17) VARI3 -> . IDV EQUALS INT
    (18) VARI3 -> . IDV COMMA VARI3
    (19) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 23

state 12

    (10) VARF -> VARFSMALL . VARF3 PC
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV COMMA VARF3
    (14) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 25

state 13

    (1) BOXES -> BOX OC VARS seen_globalvars . METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC VARS seen_globalvars . seen_methods MAINBOX OP CP BLOCKS CC
    (72) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (73) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (4) seen_methods -> .
    (75) METHODS2 -> . RECURSIVEBOX
    (76) METHODS2 -> . VOIDBOX
    (77) METHODS2 -> . VARIBOX
    (78) METHODS2 -> . VARFBOX
    (79) METHODS2 -> . VARSBOX
    (80) METHODS2 -> . VARLBOX

    MAINBOX         reduce using rule 4 (seen_methods -> .)
    RECURSIVEBOX    shift and go to state 26
    VOIDBOX         shift and go to state 33
    VARIBOX         shift and go to state 32
    VARFBOX         shift and go to state 29
    VARSBOX         shift and go to state 31
    VARLBOX         shift and go to state 30

    METHODS                        shift and go to state 27
    seen_methods                   shift and go to state 28
    METHODS2                       shift and go to state 34

state 14

    (6) VARS -> VARF VARS .

    RECURSIVEBOX    reduce using rule 6 (VARS -> VARF VARS .)
    VOIDBOX         reduce using rule 6 (VARS -> VARF VARS .)
    VARIBOX         reduce using rule 6 (VARS -> VARF VARS .)
    VARFBOX         reduce using rule 6 (VARS -> VARF VARS .)
    VARSBOX         reduce using rule 6 (VARS -> VARF VARS .)
    VARLBOX         reduce using rule 6 (VARS -> VARF VARS .)
    MAINBOX         reduce using rule 6 (VARS -> VARF VARS .)
    CC              reduce using rule 6 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARF VARS .)
    IDV             reduce using rule 6 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARF VARS .)
    IF              reduce using rule 6 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARF VARS .)
    SAYW            reduce using rule 6 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARF VARS .)


state 15

    (8) VARS -> VARL VARS .

    RECURSIVEBOX    reduce using rule 8 (VARS -> VARL VARS .)
    VOIDBOX         reduce using rule 8 (VARS -> VARL VARS .)
    VARIBOX         reduce using rule 8 (VARS -> VARL VARS .)
    VARFBOX         reduce using rule 8 (VARS -> VARL VARS .)
    VARSBOX         reduce using rule 8 (VARS -> VARL VARS .)
    VARLBOX         reduce using rule 8 (VARS -> VARL VARS .)
    MAINBOX         reduce using rule 8 (VARS -> VARL VARS .)
    CC              reduce using rule 8 (VARS -> VARL VARS .)
    RETURNW         reduce using rule 8 (VARS -> VARL VARS .)
    IDV             reduce using rule 8 (VARS -> VARL VARS .)
    LOOPW           reduce using rule 8 (VARS -> VARL VARS .)
    LOOPIFW         reduce using rule 8 (VARS -> VARL VARS .)
    IF              reduce using rule 8 (VARS -> VARL VARS .)
    ASKUSER         reduce using rule 8 (VARS -> VARL VARS .)
    SAYW            reduce using rule 8 (VARS -> VARL VARS .)
    CALLBOXW        reduce using rule 8 (VARS -> VARL VARS .)


state 16

    (25) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 35


state 17

    (26) VARL3 -> IDV . EQUALS OB VARL4 CB
    (27) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (28) VARL3 -> IDV . COMMA VARL3
    (29) VARL3 -> IDV .

    EQUALS          shift and go to state 36
    COMMA           shift and go to state 37
    PC              reduce using rule 29 (VARL3 -> IDV .)


state 18

    (5) VARS -> VARI VARS .

    RECURSIVEBOX    reduce using rule 5 (VARS -> VARI VARS .)
    VOIDBOX         reduce using rule 5 (VARS -> VARI VARS .)
    VARIBOX         reduce using rule 5 (VARS -> VARI VARS .)
    VARFBOX         reduce using rule 5 (VARS -> VARI VARS .)
    VARSBOX         reduce using rule 5 (VARS -> VARI VARS .)
    VARLBOX         reduce using rule 5 (VARS -> VARI VARS .)
    MAINBOX         reduce using rule 5 (VARS -> VARI VARS .)
    CC              reduce using rule 5 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 5 (VARS -> VARI VARS .)
    IDV             reduce using rule 5 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 5 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 5 (VARS -> VARI VARS .)
    IF              reduce using rule 5 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 5 (VARS -> VARI VARS .)
    SAYW            reduce using rule 5 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 5 (VARS -> VARI VARS .)


state 19

    (20) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 38


state 20

    (21) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (22) VARST3 -> IDV . EQUALS STRING
    (23) VARST3 -> IDV . COMMA VARST3
    (24) VARST3 -> IDV .

    EQUALS          shift and go to state 40
    COMMA           shift and go to state 39
    PC              reduce using rule 24 (VARST3 -> IDV .)


state 21

    (7) VARS -> VARST VARS .

    RECURSIVEBOX    reduce using rule 7 (VARS -> VARST VARS .)
    VOIDBOX         reduce using rule 7 (VARS -> VARST VARS .)
    VARIBOX         reduce using rule 7 (VARS -> VARST VARS .)
    VARFBOX         reduce using rule 7 (VARS -> VARST VARS .)
    VARSBOX         reduce using rule 7 (VARS -> VARST VARS .)
    VARLBOX         reduce using rule 7 (VARS -> VARST VARS .)
    MAINBOX         reduce using rule 7 (VARS -> VARST VARS .)
    CC              reduce using rule 7 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARST VARS .)
    IDV             reduce using rule 7 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARST VARS .)
    IF              reduce using rule 7 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARST VARS .)
    SAYW            reduce using rule 7 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARST VARS .)


state 22

    (16) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (17) VARI3 -> IDV . EQUALS INT
    (18) VARI3 -> IDV . COMMA VARI3
    (19) VARI3 -> IDV .

    EQUALS          shift and go to state 42
    COMMA           shift and go to state 41
    PC              reduce using rule 19 (VARI3 -> IDV .)


state 23

    (15) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 43


state 24

    (11) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> IDV . EQUALS FLOAT
    (13) VARF3 -> IDV . COMMA VARF3
    (14) VARF3 -> IDV .

    EQUALS          shift and go to state 45
    COMMA           shift and go to state 44
    PC              reduce using rule 14 (VARF3 -> IDV .)


state 25

    (10) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 46


state 26

    (75) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 75 (METHODS2 -> RECURSIVEBOX .)


state 27

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS . seen_methods MAINBOX OP CP BLOCKS CC
    (4) seen_methods -> .

    MAINBOX         reduce using rule 4 (seen_methods -> .)

    seen_methods                   shift and go to state 47

state 28

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 48


state 29

    (78) METHODS2 -> VARFBOX .

    IDM             reduce using rule 78 (METHODS2 -> VARFBOX .)


state 30

    (80) METHODS2 -> VARLBOX .

    IDM             reduce using rule 80 (METHODS2 -> VARLBOX .)


state 31

    (79) METHODS2 -> VARSBOX .

    IDM             reduce using rule 79 (METHODS2 -> VARSBOX .)


state 32

    (77) METHODS2 -> VARIBOX .

    IDM             reduce using rule 77 (METHODS2 -> VARIBOX .)


state 33

    (76) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 76 (METHODS2 -> VOIDBOX .)


state 34

    (72) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS
    (73) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHODS
    (74) seen_IDM -> . IDM

    IDM             shift and go to state 50

    seen_IDM                       shift and go to state 49

state 35

    (25) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    RECURSIVEBOX    reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VOIDBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARIBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARFBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARSBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    VARLBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    RETURNW         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 25 (VARL -> VARLSMALL VARL3 PC .)


state 36

    (26) VARL3 -> IDV EQUALS . OB VARL4 CB
    (27) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 51


state 37

    (28) VARL3 -> IDV COMMA . VARL3
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (28) VARL3 -> . IDV COMMA VARL3
    (29) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 52

state 38

    (20) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    RECURSIVEBOX    reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VOIDBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARIBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARFBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARSBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    VARLBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 20 (VARST -> VARSTSMALL VARST3 PC .)


state 39

    (23) VARST3 -> IDV COMMA . VARST3
    (21) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (22) VARST3 -> . IDV EQUALS STRING
    (23) VARST3 -> . IDV COMMA VARST3
    (24) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 53

state 40

    (21) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (22) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 54


state 41

    (18) VARI3 -> IDV COMMA . VARI3
    (16) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (17) VARI3 -> . IDV EQUALS INT
    (18) VARI3 -> . IDV COMMA VARI3
    (19) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 55

state 42

    (16) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (17) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 56


state 43

    (15) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    RECURSIVEBOX    reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VOIDBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARIBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARFBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARSBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    VARLBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 15 (VARI -> VARISMALL VARI3 PC .)


state 44

    (13) VARF3 -> IDV COMMA . VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV COMMA VARF3
    (14) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 57

state 45

    (11) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (12) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 58


state 46

    (10) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    RECURSIVEBOX    reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VOIDBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARIBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARFBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARSBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARLBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)


state 47

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 59


state 48

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 60


state 49

    (72) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS
    (73) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHODS

    OP              shift and go to state 61


state 50

    (74) seen_IDM -> IDM .

    OP              reduce using rule 74 (seen_IDM -> IDM .)


state 51

    (26) VARL3 -> IDV EQUALS OB . VARL4 CB
    (27) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (30) VARL4 -> . CTEL
    (31) VARL4 -> . CTEL COMMA VARL4
    (32) VARL4 -> .
    (113) CTEL -> . INT
    (114) CTEL -> . FLOAT
    (115) CTEL -> . STRING
    (116) CTEL -> . IDV
    (117) CTEL -> . IDV OB INT CB

    CB              reduce using rule 32 (VARL4 -> .)
    INT             shift and go to state 66
    FLOAT           shift and go to state 65
    STRING          shift and go to state 62
    IDV             shift and go to state 64

    CTEL                           shift and go to state 67
    VARL4                          shift and go to state 63

state 52

    (28) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 28 (VARL3 -> IDV COMMA VARL3 .)


state 53

    (23) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 23 (VARST3 -> IDV COMMA VARST3 .)


state 54

    (21) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (22) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 68
    PC              reduce using rule 22 (VARST3 -> IDV EQUALS STRING .)


state 55

    (18) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 18 (VARI3 -> IDV COMMA VARI3 .)


state 56

    (16) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (17) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 69
    PC              reduce using rule 17 (VARI3 -> IDV EQUALS INT .)


state 57

    (13) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 13 (VARF3 -> IDV COMMA VARF3 .)


state 58

    (11) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (12) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 70
    PC              reduce using rule 12 (VARF3 -> IDV EQUALS FLOAT .)


state 59

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 71


state 60

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 72


state 61

    (72) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS
    (73) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHODS
    (81) METHODS3 -> . PARAM COMMA METHODS3
    (82) METHODS3 -> . PARAM
    (83) METHODS3 -> .
    (67) PARAM -> . PARAM2 IDV
    (68) PARAM2 -> . VARISMALL
    (69) PARAM2 -> . VARSTSMALL
    (70) PARAM2 -> . VARFSMALL
    (71) PARAM2 -> . VARLSMALL

    CP              reduce using rule 83 (METHODS3 -> .)
    VARISMALL       shift and go to state 74
    VARSTSMALL      shift and go to state 75
    VARFSMALL       shift and go to state 77
    VARLSMALL       shift and go to state 73

    PARAM                          shift and go to state 76
    PARAM2                         shift and go to state 78
    METHODS3                       shift and go to state 79

state 62

    (115) CTEL -> STRING .

    COMMA           reduce using rule 115 (CTEL -> STRING .)
    CB              reduce using rule 115 (CTEL -> STRING .)


state 63

    (26) VARL3 -> IDV EQUALS OB VARL4 . CB
    (27) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 80


state 64

    (116) CTEL -> IDV .
    (117) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 116 (CTEL -> IDV .)
    CB              reduce using rule 116 (CTEL -> IDV .)
    OB              shift and go to state 81


state 65

    (114) CTEL -> FLOAT .

    COMMA           reduce using rule 114 (CTEL -> FLOAT .)
    CB              reduce using rule 114 (CTEL -> FLOAT .)


state 66

    (113) CTEL -> INT .

    COMMA           reduce using rule 113 (CTEL -> INT .)
    CB              reduce using rule 113 (CTEL -> INT .)


state 67

    (30) VARL4 -> CTEL .
    (31) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 30 (VARL4 -> CTEL .)
    COMMA           shift and go to state 82


state 68

    (21) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (21) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (22) VARST3 -> . IDV EQUALS STRING
    (23) VARST3 -> . IDV COMMA VARST3
    (24) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 83

state 69

    (16) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (16) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (17) VARI3 -> . IDV EQUALS INT
    (18) VARI3 -> . IDV COMMA VARI3
    (19) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 84

state 70

    (11) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV COMMA VARF3
    (14) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 85

state 71

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 86


state 72

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP . BLOCKS CC
    (33) BLOCKS -> . OC VARS BLOCKS2 CC
    (34) BLOCKS -> . OC VARS CC
    (35) BLOCKS -> . OC BLOCKS2 CC
    (36) BLOCKS -> . OC CC

    OC              shift and go to state 88

    BLOCKS                         shift and go to state 87

state 73

    (71) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 71 (PARAM2 -> VARLSMALL .)


state 74

    (68) PARAM2 -> VARISMALL .

    IDV             reduce using rule 68 (PARAM2 -> VARISMALL .)


state 75

    (69) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 69 (PARAM2 -> VARSTSMALL .)


state 76

    (81) METHODS3 -> PARAM . COMMA METHODS3
    (82) METHODS3 -> PARAM .

    COMMA           shift and go to state 89
    CP              reduce using rule 82 (METHODS3 -> PARAM .)


state 77

    (70) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 70 (PARAM2 -> VARFSMALL .)


state 78

    (67) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 90


state 79

    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS
    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHODS

    CP              shift and go to state 91


state 80

    (26) VARL3 -> IDV EQUALS OB VARL4 CB .
    (27) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 26 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 92


state 81

    (117) CTEL -> IDV OB . INT CB

    INT             shift and go to state 93


state 82

    (31) VARL4 -> CTEL COMMA . VARL4
    (30) VARL4 -> . CTEL
    (31) VARL4 -> . CTEL COMMA VARL4
    (32) VARL4 -> .
    (113) CTEL -> . INT
    (114) CTEL -> . FLOAT
    (115) CTEL -> . STRING
    (116) CTEL -> . IDV
    (117) CTEL -> . IDV OB INT CB

    CB              reduce using rule 32 (VARL4 -> .)
    INT             shift and go to state 66
    FLOAT           shift and go to state 65
    STRING          shift and go to state 62
    IDV             shift and go to state 64

    VARL4                          shift and go to state 94
    CTEL                           shift and go to state 67

state 83

    (21) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 21 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 84

    (16) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 16 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 85

    (11) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 86

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP . BLOCKS CC
    (33) BLOCKS -> . OC VARS BLOCKS2 CC
    (34) BLOCKS -> . OC VARS CC
    (35) BLOCKS -> . OC BLOCKS2 CC
    (36) BLOCKS -> . OC CC

    OC              shift and go to state 88

    BLOCKS                         shift and go to state 95

state 87

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 96


state 88

    (33) BLOCKS -> OC . VARS BLOCKS2 CC
    (34) BLOCKS -> OC . VARS CC
    (35) BLOCKS -> OC . BLOCKS2 CC
    (36) BLOCKS -> OC . CC
    (5) VARS -> . VARI VARS
    (6) VARS -> . VARF VARS
    (7) VARS -> . VARST VARS
    (8) VARS -> . VARL VARS
    (9) VARS -> .
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (15) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (20) VARST -> . VARSTSMALL VARST3 PC
    (25) VARL -> . VARLSMALL VARL3 PC
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
    CC              shift and go to state 107
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

  ! CC              [ reduce using rule 9 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 9 (VARS -> .) ]
  ! IDV             [ reduce using rule 9 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 9 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 9 (VARS -> .) ]
  ! IF              [ reduce using rule 9 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 9 (VARS -> .) ]
  ! SAYW            [ reduce using rule 9 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 9 (VARS -> .) ]

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    VARS                           shift and go to state 100
    VARF                           shift and go to state 5
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    VARST                          shift and go to state 10
    BLOCKS2                        shift and go to state 112
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 89

    (81) METHODS3 -> PARAM COMMA . METHODS3
    (81) METHODS3 -> . PARAM COMMA METHODS3
    (82) METHODS3 -> . PARAM
    (83) METHODS3 -> .
    (67) PARAM -> . PARAM2 IDV
    (68) PARAM2 -> . VARISMALL
    (69) PARAM2 -> . VARSTSMALL
    (70) PARAM2 -> . VARFSMALL
    (71) PARAM2 -> . VARLSMALL

    CP              reduce using rule 83 (METHODS3 -> .)
    VARISMALL       shift and go to state 74
    VARSTSMALL      shift and go to state 75
    VARFSMALL       shift and go to state 77
    VARLSMALL       shift and go to state 73

    METHODS3                       shift and go to state 117
    PARAM                          shift and go to state 76
    PARAM2                         shift and go to state 78

state 90

    (67) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 67 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 67 (PARAM -> PARAM2 IDV .)


state 91

    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS
    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHODS
    (33) BLOCKS -> . OC VARS BLOCKS2 CC
    (34) BLOCKS -> . OC VARS CC
    (35) BLOCKS -> . OC BLOCKS2 CC
    (36) BLOCKS -> . OC CC

    OC              shift and go to state 88

    BLOCKS                         shift and go to state 118

state 92

    (27) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB
    (27) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (28) VARL3 -> . IDV COMMA VARL3
    (29) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 119

state 93

    (117) CTEL -> IDV OB INT . CB

    CB              shift and go to state 120


state 94

    (31) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 31 (VARL4 -> CTEL COMMA VARL4 .)


state 95

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 121


state 96

    (2) BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .)


state 97

    (123) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 122


state 98

    (37) BLOCKS2 -> CODE .
    (38) BLOCKS2 -> CODE . BLOCKS2
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 37 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 123
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 99

    (39) CODE -> RETURN .

    RETURNW         reduce using rule 39 (CODE -> RETURN .)
    IDV             reduce using rule 39 (CODE -> RETURN .)
    LOOPW           reduce using rule 39 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 39 (CODE -> RETURN .)
    IF              reduce using rule 39 (CODE -> RETURN .)
    ASKUSER         reduce using rule 39 (CODE -> RETURN .)
    SAYW            reduce using rule 39 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 39 (CODE -> RETURN .)
    CC              reduce using rule 39 (CODE -> RETURN .)


state 100

    (33) BLOCKS -> OC VARS . BLOCKS2 CC
    (34) BLOCKS -> OC VARS . CC
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 124
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 125
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 101

    (85) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 126


state 102

    (128) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 127


state 103

    (45) CODE -> SAY .

    RETURNW         reduce using rule 45 (CODE -> SAY .)
    IDV             reduce using rule 45 (CODE -> SAY .)
    LOOPW           reduce using rule 45 (CODE -> SAY .)
    LOOPIFW         reduce using rule 45 (CODE -> SAY .)
    IF              reduce using rule 45 (CODE -> SAY .)
    ASKUSER         reduce using rule 45 (CODE -> SAY .)
    SAYW            reduce using rule 45 (CODE -> SAY .)
    CALLBOXW        reduce using rule 45 (CODE -> SAY .)
    CC              reduce using rule 45 (CODE -> SAY .)


state 104

    (44) CODE -> ASK .

    RETURNW         reduce using rule 44 (CODE -> ASK .)
    IDV             reduce using rule 44 (CODE -> ASK .)
    LOOPW           reduce using rule 44 (CODE -> ASK .)
    LOOPIFW         reduce using rule 44 (CODE -> ASK .)
    IF              reduce using rule 44 (CODE -> ASK .)
    ASKUSER         reduce using rule 44 (CODE -> ASK .)
    SAYW            reduce using rule 44 (CODE -> ASK .)
    CALLBOXW        reduce using rule 44 (CODE -> ASK .)
    CC              reduce using rule 44 (CODE -> ASK .)


state 105

    (43) CODE -> CONDITION .

    RETURNW         reduce using rule 43 (CODE -> CONDITION .)
    IDV             reduce using rule 43 (CODE -> CONDITION .)
    LOOPW           reduce using rule 43 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 43 (CODE -> CONDITION .)
    IF              reduce using rule 43 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 43 (CODE -> CONDITION .)
    SAYW            reduce using rule 43 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 43 (CODE -> CONDITION .)
    CC              reduce using rule 43 (CODE -> CONDITION .)


state 106

    (40) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 40 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 40 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 40 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 40 (CODE -> ASSIGNATION .)
    IF              reduce using rule 40 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 40 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 40 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 40 (CODE -> ASSIGNATION .)
    CC              reduce using rule 40 (CODE -> ASSIGNATION .)


state 107

    (36) BLOCKS -> OC CC .

    CC              reduce using rule 36 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 36 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 36 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 36 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 36 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 36 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 36 (BLOCKS -> OC CC .)
    MAINBOX         reduce using rule 36 (BLOCKS -> OC CC .)


state 108

    (146) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (148) seen_LOOPIF -> .

    OP              reduce using rule 148 (seen_LOOPIF -> .)

    seen_LOOPIF                    shift and go to state 128

state 109

    (84) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 129


state 110

    (47) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF . OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF . OP STM CP OC seen_OC_IF CC seen_CC_IF

    OP              shift and go to state 130


state 111

    (131) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (145) seen_LOOP -> .

    OP              reduce using rule 145 (seen_LOOP -> .)

    seen_LOOP                      shift and go to state 131

state 112

    (35) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 132


state 113

    (46) CODE -> CALLBOX .

    RETURNW         reduce using rule 46 (CODE -> CALLBOX .)
    IDV             reduce using rule 46 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 46 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 46 (CODE -> CALLBOX .)
    IF              reduce using rule 46 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 46 (CODE -> CALLBOX .)
    SAYW            reduce using rule 46 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 46 (CODE -> CALLBOX .)
    CC              reduce using rule 46 (CODE -> CALLBOX .)


state 114

    (42) CODE -> LOOPIF .

    RETURNW         reduce using rule 42 (CODE -> LOOPIF .)
    IDV             reduce using rule 42 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 42 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 42 (CODE -> LOOPIF .)
    IF              reduce using rule 42 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 42 (CODE -> LOOPIF .)
    SAYW            reduce using rule 42 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 42 (CODE -> LOOPIF .)
    CC              reduce using rule 42 (CODE -> LOOPIF .)


state 115

    (127) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 133


state 116

    (41) CODE -> LOOP .

    RETURNW         reduce using rule 41 (CODE -> LOOP .)
    IDV             reduce using rule 41 (CODE -> LOOP .)
    LOOPW           reduce using rule 41 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 41 (CODE -> LOOP .)
    IF              reduce using rule 41 (CODE -> LOOP .)
    ASKUSER         reduce using rule 41 (CODE -> LOOP .)
    SAYW            reduce using rule 41 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 41 (CODE -> LOOP .)
    CC              reduce using rule 41 (CODE -> LOOP .)


state 117

    (81) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 81 (METHODS3 -> PARAM COMMA METHODS3 .)


state 118

    (72) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .
    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHODS
    (72) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (73) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (75) METHODS2 -> . RECURSIVEBOX
    (76) METHODS2 -> . VOIDBOX
    (77) METHODS2 -> . VARIBOX
    (78) METHODS2 -> . VARFBOX
    (79) METHODS2 -> . VARSBOX
    (80) METHODS2 -> . VARLBOX

    MAINBOX         reduce using rule 72 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .)
    RECURSIVEBOX    shift and go to state 26
    VOIDBOX         shift and go to state 33
    VARIBOX         shift and go to state 32
    VARFBOX         shift and go to state 29
    VARSBOX         shift and go to state 31
    VARLBOX         shift and go to state 30

    METHODS2                       shift and go to state 34
    METHODS                        shift and go to state 134

state 119

    (27) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 27 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 120

    (117) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 117 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 117 (CTEL -> IDV OB INT CB .)


state 121

    (1) BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .)


state 122

    (123) SAY -> SAYW OP . CONCAT CP PC
    (124) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (125) CONCAT -> . EXPRESSION seen_EXP_SAY
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 143
    CONCAT                         shift and go to state 145

state 123

    (38) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 38 (BLOCKS2 -> CODE BLOCKS2 .)


state 124

    (34) BLOCKS -> OC VARS CC .

    CC              reduce using rule 34 (BLOCKS -> OC VARS CC .)
    RECURSIVEBOX    reduce using rule 34 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)
    VARLBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)
    MAINBOX         reduce using rule 34 (BLOCKS -> OC VARS CC .)


state 125

    (33) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 149


state 126

    (85) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 150

state 127

    (128) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 151


state 128

    (146) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC CC

    OP              shift and go to state 152


state 129

    (84) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 153


state 130

    (47) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF OP . STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF OP . STM CP OC seen_OC_IF CC seen_CC_IF
    (58) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (59) STM -> . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    STM                            shift and go to state 155
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 154

state 131

    (131) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    OP              shift and go to state 156


state 132

    (35) BLOCKS -> OC BLOCKS2 CC .

    CC              reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)
    MAINBOX         reduce using rule 35 (BLOCKS -> OC BLOCKS2 CC .)


state 133

    (127) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 157


state 134

    (73) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .

    MAINBOX         reduce using rule 73 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .)


state 135

    (86) EXPRESSION -> OPER . seen_EXPF
    (87) EXPRESSION -> OPER . seen_EXPF seen_OPER EXPRESSION
    (88) seen_EXPF -> .

    PLUS            reduce using rule 88 (seen_EXPF -> .)
    MINUS           reduce using rule 88 (seen_EXPF -> .)
    OR              reduce using rule 88 (seen_EXPF -> .)
    DOT             reduce using rule 88 (seen_EXPF -> .)
    CP              reduce using rule 88 (seen_EXPF -> .)
    PC              reduce using rule 88 (seen_EXPF -> .)
    GT              reduce using rule 88 (seen_EXPF -> .)
    GTE             reduce using rule 88 (seen_EXPF -> .)
    LT              reduce using rule 88 (seen_EXPF -> .)
    LTE             reduce using rule 88 (seen_EXPF -> .)
    DOUBLEEQUALS    reduce using rule 88 (seen_EXPF -> .)
    LTGT            reduce using rule 88 (seen_EXPF -> .)
    COMMA           reduce using rule 88 (seen_EXPF -> .)

    seen_EXPF                      shift and go to state 158

state 136

    (111) seen_ID -> IDV .
    (112) seen_ID -> IDV . OB INT CB

    MULTIPLY        reduce using rule 111 (seen_ID -> IDV .)
    DIVISION        reduce using rule 111 (seen_ID -> IDV .)
    AND             reduce using rule 111 (seen_ID -> IDV .)
    PLUS            reduce using rule 111 (seen_ID -> IDV .)
    MINUS           reduce using rule 111 (seen_ID -> IDV .)
    OR              reduce using rule 111 (seen_ID -> IDV .)
    DOT             reduce using rule 111 (seen_ID -> IDV .)
    CP              reduce using rule 111 (seen_ID -> IDV .)
    PC              reduce using rule 111 (seen_ID -> IDV .)
    GT              reduce using rule 111 (seen_ID -> IDV .)
    GTE             reduce using rule 111 (seen_ID -> IDV .)
    LT              reduce using rule 111 (seen_ID -> IDV .)
    LTE             reduce using rule 111 (seen_ID -> IDV .)
    DOUBLEEQUALS    reduce using rule 111 (seen_ID -> IDV .)
    LTGT            reduce using rule 111 (seen_ID -> IDV .)
    COMMA           reduce using rule 111 (seen_ID -> IDV .)
    OB              shift and go to state 159


state 137

    (101) TERM2 -> CTE .

    MULTIPLY        reduce using rule 101 (TERM2 -> CTE .)
    DIVISION        reduce using rule 101 (TERM2 -> CTE .)
    AND             reduce using rule 101 (TERM2 -> CTE .)
    PLUS            reduce using rule 101 (TERM2 -> CTE .)
    MINUS           reduce using rule 101 (TERM2 -> CTE .)
    OR              reduce using rule 101 (TERM2 -> CTE .)
    GT              reduce using rule 101 (TERM2 -> CTE .)
    GTE             reduce using rule 101 (TERM2 -> CTE .)
    LT              reduce using rule 101 (TERM2 -> CTE .)
    LTE             reduce using rule 101 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 101 (TERM2 -> CTE .)
    LTGT            reduce using rule 101 (TERM2 -> CTE .)
    CP              reduce using rule 101 (TERM2 -> CTE .)
    DOT             reduce using rule 101 (TERM2 -> CTE .)
    PC              reduce using rule 101 (TERM2 -> CTE .)
    COMMA           reduce using rule 101 (TERM2 -> CTE .)


state 138

    (103) TERM2 -> MINUS . CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    CTE                            shift and go to state 160
    seen_ID                        shift and go to state 141

state 139

    (106) CTE -> STRING . seen_STRING
    (110) seen_STRING -> .

    MULTIPLY        reduce using rule 110 (seen_STRING -> .)
    DIVISION        reduce using rule 110 (seen_STRING -> .)
    AND             reduce using rule 110 (seen_STRING -> .)
    PLUS            reduce using rule 110 (seen_STRING -> .)
    MINUS           reduce using rule 110 (seen_STRING -> .)
    OR              reduce using rule 110 (seen_STRING -> .)
    DOT             reduce using rule 110 (seen_STRING -> .)
    CP              reduce using rule 110 (seen_STRING -> .)
    PC              reduce using rule 110 (seen_STRING -> .)
    GT              reduce using rule 110 (seen_STRING -> .)
    GTE             reduce using rule 110 (seen_STRING -> .)
    LT              reduce using rule 110 (seen_STRING -> .)
    LTE             reduce using rule 110 (seen_STRING -> .)
    DOUBLEEQUALS    reduce using rule 110 (seen_STRING -> .)
    LTGT            reduce using rule 110 (seen_STRING -> .)
    COMMA           reduce using rule 110 (seen_STRING -> .)

    seen_STRING                    shift and go to state 161

state 140

    (92) OPER -> TERM . seen_TERMF
    (93) OPER -> TERM . seen_TERMF seen_TERM OPER
    (94) seen_TERMF -> .

    MULTIPLY        reduce using rule 94 (seen_TERMF -> .)
    DIVISION        reduce using rule 94 (seen_TERMF -> .)
    AND             reduce using rule 94 (seen_TERMF -> .)
    PLUS            reduce using rule 94 (seen_TERMF -> .)
    MINUS           reduce using rule 94 (seen_TERMF -> .)
    OR              reduce using rule 94 (seen_TERMF -> .)
    DOT             reduce using rule 94 (seen_TERMF -> .)
    CP              reduce using rule 94 (seen_TERMF -> .)
    PC              reduce using rule 94 (seen_TERMF -> .)
    GT              reduce using rule 94 (seen_TERMF -> .)
    GTE             reduce using rule 94 (seen_TERMF -> .)
    LT              reduce using rule 94 (seen_TERMF -> .)
    LTE             reduce using rule 94 (seen_TERMF -> .)
    DOUBLEEQUALS    reduce using rule 94 (seen_TERMF -> .)
    LTGT            reduce using rule 94 (seen_TERMF -> .)
    COMMA           reduce using rule 94 (seen_TERMF -> .)

    seen_TERMF                     shift and go to state 162

state 141

    (107) CTE -> seen_ID .

    MULTIPLY        reduce using rule 107 (CTE -> seen_ID .)
    DIVISION        reduce using rule 107 (CTE -> seen_ID .)
    AND             reduce using rule 107 (CTE -> seen_ID .)
    PLUS            reduce using rule 107 (CTE -> seen_ID .)
    MINUS           reduce using rule 107 (CTE -> seen_ID .)
    OR              reduce using rule 107 (CTE -> seen_ID .)
    DOT             reduce using rule 107 (CTE -> seen_ID .)
    CP              reduce using rule 107 (CTE -> seen_ID .)
    PC              reduce using rule 107 (CTE -> seen_ID .)
    GT              reduce using rule 107 (CTE -> seen_ID .)
    GTE             reduce using rule 107 (CTE -> seen_ID .)
    LT              reduce using rule 107 (CTE -> seen_ID .)
    LTE             reduce using rule 107 (CTE -> seen_ID .)
    DOUBLEEQUALS    reduce using rule 107 (CTE -> seen_ID .)
    LTGT            reduce using rule 107 (CTE -> seen_ID .)
    COMMA           reduce using rule 107 (CTE -> seen_ID .)


state 142

    (102) TERM2 -> PLUS . CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    CTE                            shift and go to state 163
    seen_ID                        shift and go to state 141

state 143

    (124) CONCAT -> EXPRESSION . seen_EXP_SAY DOT CONCAT
    (125) CONCAT -> EXPRESSION . seen_EXP_SAY
    (126) seen_EXP_SAY -> .

    DOT             reduce using rule 126 (seen_EXP_SAY -> .)
    CP              reduce using rule 126 (seen_EXP_SAY -> .)

    seen_EXP_SAY                   shift and go to state 164

state 144

    (99) TERM -> TERM2 .

    MULTIPLY        reduce using rule 99 (TERM -> TERM2 .)
    DIVISION        reduce using rule 99 (TERM -> TERM2 .)
    AND             reduce using rule 99 (TERM -> TERM2 .)
    PLUS            reduce using rule 99 (TERM -> TERM2 .)
    MINUS           reduce using rule 99 (TERM -> TERM2 .)
    OR              reduce using rule 99 (TERM -> TERM2 .)
    GT              reduce using rule 99 (TERM -> TERM2 .)
    GTE             reduce using rule 99 (TERM -> TERM2 .)
    LT              reduce using rule 99 (TERM -> TERM2 .)
    LTE             reduce using rule 99 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 99 (TERM -> TERM2 .)
    LTGT            reduce using rule 99 (TERM -> TERM2 .)
    CP              reduce using rule 99 (TERM -> TERM2 .)
    COMMA           reduce using rule 99 (TERM -> TERM2 .)
    DOT             reduce using rule 99 (TERM -> TERM2 .)
    PC              reduce using rule 99 (TERM -> TERM2 .)


state 145

    (123) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 165


state 146

    (104) CTE -> INT . seen_INT
    (108) seen_INT -> .

    MULTIPLY        reduce using rule 108 (seen_INT -> .)
    DIVISION        reduce using rule 108 (seen_INT -> .)
    AND             reduce using rule 108 (seen_INT -> .)
    PLUS            reduce using rule 108 (seen_INT -> .)
    MINUS           reduce using rule 108 (seen_INT -> .)
    OR              reduce using rule 108 (seen_INT -> .)
    DOT             reduce using rule 108 (seen_INT -> .)
    CP              reduce using rule 108 (seen_INT -> .)
    PC              reduce using rule 108 (seen_INT -> .)
    GT              reduce using rule 108 (seen_INT -> .)
    GTE             reduce using rule 108 (seen_INT -> .)
    LT              reduce using rule 108 (seen_INT -> .)
    LTE             reduce using rule 108 (seen_INT -> .)
    DOUBLEEQUALS    reduce using rule 108 (seen_INT -> .)
    LTGT            reduce using rule 108 (seen_INT -> .)
    COMMA           reduce using rule 108 (seen_INT -> .)

    seen_INT                       shift and go to state 166

state 147

    (105) CTE -> FLOAT . seen_FLOAT
    (109) seen_FLOAT -> .

    MULTIPLY        reduce using rule 109 (seen_FLOAT -> .)
    DIVISION        reduce using rule 109 (seen_FLOAT -> .)
    AND             reduce using rule 109 (seen_FLOAT -> .)
    PLUS            reduce using rule 109 (seen_FLOAT -> .)
    MINUS           reduce using rule 109 (seen_FLOAT -> .)
    OR              reduce using rule 109 (seen_FLOAT -> .)
    DOT             reduce using rule 109 (seen_FLOAT -> .)
    CP              reduce using rule 109 (seen_FLOAT -> .)
    PC              reduce using rule 109 (seen_FLOAT -> .)
    GT              reduce using rule 109 (seen_FLOAT -> .)
    GTE             reduce using rule 109 (seen_FLOAT -> .)
    LT              reduce using rule 109 (seen_FLOAT -> .)
    LTE             reduce using rule 109 (seen_FLOAT -> .)
    DOUBLEEQUALS    reduce using rule 109 (seen_FLOAT -> .)
    LTGT            reduce using rule 109 (seen_FLOAT -> .)
    COMMA           reduce using rule 109 (seen_FLOAT -> .)

    seen_FLOAT                     shift and go to state 167

state 148

    (98) TERM -> OP . seen_OP_TERM STM CP
    (100) seen_OP_TERM -> .

    OP              reduce using rule 100 (seen_OP_TERM -> .)
    PLUS            reduce using rule 100 (seen_OP_TERM -> .)
    MINUS           reduce using rule 100 (seen_OP_TERM -> .)
    INT             reduce using rule 100 (seen_OP_TERM -> .)
    FLOAT           reduce using rule 100 (seen_OP_TERM -> .)
    STRING          reduce using rule 100 (seen_OP_TERM -> .)
    IDV             reduce using rule 100 (seen_OP_TERM -> .)

    seen_OP_TERM                   shift and go to state 168

state 149

    (33) BLOCKS -> OC VARS BLOCKS2 CC .

    CC              reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARLBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)
    MAINBOX         reduce using rule 33 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 150

    (85) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 169


state 151

    (128) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 170


state 152

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC CC
    (58) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (59) STM -> . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    CTE                            shift and go to state 137
    STM                            shift and go to state 171
    EXPRESSION                     shift and go to state 154
    seen_ID                        shift and go to state 141

state 153

    (84) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 84 (RETURN -> RETURNW EQUALS PC .)


state 154

    (58) STM -> EXPRESSION . STM2 EXPRESSION seen_STM
    (59) STM -> EXPRESSION .
    (60) STM2 -> . GT
    (61) STM2 -> . GTE
    (62) STM2 -> . LT
    (63) STM2 -> . LTE
    (64) STM2 -> . DOUBLEEQUALS
    (65) STM2 -> . LTGT

    CP              reduce using rule 59 (STM -> EXPRESSION .)
    GT              shift and go to state 172
    GTE             shift and go to state 173
    LT              shift and go to state 175
    LTE             shift and go to state 177
    DOUBLEEQUALS    shift and go to state 178
    LTGT            shift and go to state 176

    STM2                           shift and go to state 174

state 155

    (47) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF OP STM . CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF OP STM . CP OC seen_OC_IF CC seen_CC_IF

    CP              shift and go to state 179


state 156

    (131) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (137) seen_VAR_LOOP -> . IDV

    IDV             shift and go to state 181

    seen_VAR_LOOP                  shift and go to state 180

state 157

    (127) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 182


state 158

    (86) EXPRESSION -> OPER seen_EXPF .
    (87) EXPRESSION -> OPER seen_EXPF . seen_OPER EXPRESSION
    (89) seen_OPER -> . PLUS
    (90) seen_OPER -> . MINUS
    (91) seen_OPER -> . OR

    CP              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    DOT             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    GT              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    GTE             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    LT              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    LTE             reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    DOUBLEEQUALS    reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    LTGT            reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    PC              reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    COMMA           reduce using rule 86 (EXPRESSION -> OPER seen_EXPF .)
    PLUS            shift and go to state 184
    MINUS           shift and go to state 186
    OR              shift and go to state 183

    seen_OPER                      shift and go to state 185

state 159

    (112) seen_ID -> IDV OB . INT CB

    INT             shift and go to state 187


state 160

    (103) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 103 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 103 (TERM2 -> MINUS CTE .)
    AND             reduce using rule 103 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 103 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 103 (TERM2 -> MINUS CTE .)
    OR              reduce using rule 103 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 103 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 103 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 103 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 103 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 103 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 103 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 103 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 103 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 103 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 103 (TERM2 -> MINUS CTE .)


state 161

    (106) CTE -> STRING seen_STRING .

    MULTIPLY        reduce using rule 106 (CTE -> STRING seen_STRING .)
    DIVISION        reduce using rule 106 (CTE -> STRING seen_STRING .)
    AND             reduce using rule 106 (CTE -> STRING seen_STRING .)
    PLUS            reduce using rule 106 (CTE -> STRING seen_STRING .)
    MINUS           reduce using rule 106 (CTE -> STRING seen_STRING .)
    OR              reduce using rule 106 (CTE -> STRING seen_STRING .)
    DOT             reduce using rule 106 (CTE -> STRING seen_STRING .)
    CP              reduce using rule 106 (CTE -> STRING seen_STRING .)
    PC              reduce using rule 106 (CTE -> STRING seen_STRING .)
    GT              reduce using rule 106 (CTE -> STRING seen_STRING .)
    GTE             reduce using rule 106 (CTE -> STRING seen_STRING .)
    LT              reduce using rule 106 (CTE -> STRING seen_STRING .)
    LTE             reduce using rule 106 (CTE -> STRING seen_STRING .)
    DOUBLEEQUALS    reduce using rule 106 (CTE -> STRING seen_STRING .)
    LTGT            reduce using rule 106 (CTE -> STRING seen_STRING .)
    COMMA           reduce using rule 106 (CTE -> STRING seen_STRING .)


state 162

    (92) OPER -> TERM seen_TERMF .
    (93) OPER -> TERM seen_TERMF . seen_TERM OPER
    (95) seen_TERM -> . MULTIPLY
    (96) seen_TERM -> . DIVISION
    (97) seen_TERM -> . AND

    PLUS            reduce using rule 92 (OPER -> TERM seen_TERMF .)
    MINUS           reduce using rule 92 (OPER -> TERM seen_TERMF .)
    OR              reduce using rule 92 (OPER -> TERM seen_TERMF .)
    DOT             reduce using rule 92 (OPER -> TERM seen_TERMF .)
    CP              reduce using rule 92 (OPER -> TERM seen_TERMF .)
    PC              reduce using rule 92 (OPER -> TERM seen_TERMF .)
    GT              reduce using rule 92 (OPER -> TERM seen_TERMF .)
    GTE             reduce using rule 92 (OPER -> TERM seen_TERMF .)
    LT              reduce using rule 92 (OPER -> TERM seen_TERMF .)
    LTE             reduce using rule 92 (OPER -> TERM seen_TERMF .)
    DOUBLEEQUALS    reduce using rule 92 (OPER -> TERM seen_TERMF .)
    LTGT            reduce using rule 92 (OPER -> TERM seen_TERMF .)
    COMMA           reduce using rule 92 (OPER -> TERM seen_TERMF .)
    MULTIPLY        shift and go to state 191
    DIVISION        shift and go to state 188
    AND             shift and go to state 189

    seen_TERM                      shift and go to state 190

state 163

    (102) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 102 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 102 (TERM2 -> PLUS CTE .)
    AND             reduce using rule 102 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 102 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 102 (TERM2 -> PLUS CTE .)
    OR              reduce using rule 102 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 102 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 102 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 102 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 102 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 102 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 102 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 102 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 102 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 102 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 102 (TERM2 -> PLUS CTE .)


state 164

    (124) CONCAT -> EXPRESSION seen_EXP_SAY . DOT CONCAT
    (125) CONCAT -> EXPRESSION seen_EXP_SAY .

    DOT             shift and go to state 192
    CP              reduce using rule 125 (CONCAT -> EXPRESSION seen_EXP_SAY .)


state 165

    (123) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 193


state 166

    (104) CTE -> INT seen_INT .

    MULTIPLY        reduce using rule 104 (CTE -> INT seen_INT .)
    DIVISION        reduce using rule 104 (CTE -> INT seen_INT .)
    AND             reduce using rule 104 (CTE -> INT seen_INT .)
    PLUS            reduce using rule 104 (CTE -> INT seen_INT .)
    MINUS           reduce using rule 104 (CTE -> INT seen_INT .)
    OR              reduce using rule 104 (CTE -> INT seen_INT .)
    DOT             reduce using rule 104 (CTE -> INT seen_INT .)
    CP              reduce using rule 104 (CTE -> INT seen_INT .)
    PC              reduce using rule 104 (CTE -> INT seen_INT .)
    GT              reduce using rule 104 (CTE -> INT seen_INT .)
    GTE             reduce using rule 104 (CTE -> INT seen_INT .)
    LT              reduce using rule 104 (CTE -> INT seen_INT .)
    LTE             reduce using rule 104 (CTE -> INT seen_INT .)
    DOUBLEEQUALS    reduce using rule 104 (CTE -> INT seen_INT .)
    LTGT            reduce using rule 104 (CTE -> INT seen_INT .)
    COMMA           reduce using rule 104 (CTE -> INT seen_INT .)


state 167

    (105) CTE -> FLOAT seen_FLOAT .

    MULTIPLY        reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    DIVISION        reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    AND             reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    PLUS            reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    MINUS           reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    OR              reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    DOT             reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    CP              reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    PC              reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    GT              reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    GTE             reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    LT              reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    LTE             reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    DOUBLEEQUALS    reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    LTGT            reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)
    COMMA           reduce using rule 105 (CTE -> FLOAT seen_FLOAT .)


state 168

    (98) TERM -> OP seen_OP_TERM . STM CP
    (58) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (59) STM -> . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    STM                            shift and go to state 194
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 154

state 169

    (85) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 85 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 170

    (128) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (129) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (130) PARAMETERS -> . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    PARAMETERS                     shift and go to state 195
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 196

state 171

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC CC

    CP              shift and go to state 197


state 172

    (60) STM2 -> GT .

    OP              reduce using rule 60 (STM2 -> GT .)
    PLUS            reduce using rule 60 (STM2 -> GT .)
    MINUS           reduce using rule 60 (STM2 -> GT .)
    INT             reduce using rule 60 (STM2 -> GT .)
    FLOAT           reduce using rule 60 (STM2 -> GT .)
    STRING          reduce using rule 60 (STM2 -> GT .)
    IDV             reduce using rule 60 (STM2 -> GT .)


state 173

    (61) STM2 -> GTE .

    OP              reduce using rule 61 (STM2 -> GTE .)
    PLUS            reduce using rule 61 (STM2 -> GTE .)
    MINUS           reduce using rule 61 (STM2 -> GTE .)
    INT             reduce using rule 61 (STM2 -> GTE .)
    FLOAT           reduce using rule 61 (STM2 -> GTE .)
    STRING          reduce using rule 61 (STM2 -> GTE .)
    IDV             reduce using rule 61 (STM2 -> GTE .)


state 174

    (58) STM -> EXPRESSION STM2 . EXPRESSION seen_STM
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 198

state 175

    (62) STM2 -> LT .

    OP              reduce using rule 62 (STM2 -> LT .)
    PLUS            reduce using rule 62 (STM2 -> LT .)
    MINUS           reduce using rule 62 (STM2 -> LT .)
    INT             reduce using rule 62 (STM2 -> LT .)
    FLOAT           reduce using rule 62 (STM2 -> LT .)
    STRING          reduce using rule 62 (STM2 -> LT .)
    IDV             reduce using rule 62 (STM2 -> LT .)


state 176

    (65) STM2 -> LTGT .

    OP              reduce using rule 65 (STM2 -> LTGT .)
    PLUS            reduce using rule 65 (STM2 -> LTGT .)
    MINUS           reduce using rule 65 (STM2 -> LTGT .)
    INT             reduce using rule 65 (STM2 -> LTGT .)
    FLOAT           reduce using rule 65 (STM2 -> LTGT .)
    STRING          reduce using rule 65 (STM2 -> LTGT .)
    IDV             reduce using rule 65 (STM2 -> LTGT .)


state 177

    (63) STM2 -> LTE .

    OP              reduce using rule 63 (STM2 -> LTE .)
    PLUS            reduce using rule 63 (STM2 -> LTE .)
    MINUS           reduce using rule 63 (STM2 -> LTE .)
    INT             reduce using rule 63 (STM2 -> LTE .)
    FLOAT           reduce using rule 63 (STM2 -> LTE .)
    STRING          reduce using rule 63 (STM2 -> LTE .)
    IDV             reduce using rule 63 (STM2 -> LTE .)


state 178

    (64) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 64 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 64 (STM2 -> DOUBLEEQUALS .)


state 179

    (47) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF OP STM CP . OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF OP STM CP . OC seen_OC_IF CC seen_CC_IF

    OC              shift and go to state 199


state 180

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    FROM            shift and go to state 200


state 181

    (137) seen_VAR_LOOP -> IDV .

    FROM            reduce using rule 137 (seen_VAR_LOOP -> IDV .)


state 182

    (127) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 201


state 183

    (91) seen_OPER -> OR .

    OP              reduce using rule 91 (seen_OPER -> OR .)
    PLUS            reduce using rule 91 (seen_OPER -> OR .)
    MINUS           reduce using rule 91 (seen_OPER -> OR .)
    INT             reduce using rule 91 (seen_OPER -> OR .)
    FLOAT           reduce using rule 91 (seen_OPER -> OR .)
    STRING          reduce using rule 91 (seen_OPER -> OR .)
    IDV             reduce using rule 91 (seen_OPER -> OR .)


state 184

    (89) seen_OPER -> PLUS .

    OP              reduce using rule 89 (seen_OPER -> PLUS .)
    PLUS            reduce using rule 89 (seen_OPER -> PLUS .)
    MINUS           reduce using rule 89 (seen_OPER -> PLUS .)
    INT             reduce using rule 89 (seen_OPER -> PLUS .)
    FLOAT           reduce using rule 89 (seen_OPER -> PLUS .)
    STRING          reduce using rule 89 (seen_OPER -> PLUS .)
    IDV             reduce using rule 89 (seen_OPER -> PLUS .)


state 185

    (87) EXPRESSION -> OPER seen_EXPF seen_OPER . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 202

state 186

    (90) seen_OPER -> MINUS .

    OP              reduce using rule 90 (seen_OPER -> MINUS .)
    PLUS            reduce using rule 90 (seen_OPER -> MINUS .)
    MINUS           reduce using rule 90 (seen_OPER -> MINUS .)
    INT             reduce using rule 90 (seen_OPER -> MINUS .)
    FLOAT           reduce using rule 90 (seen_OPER -> MINUS .)
    STRING          reduce using rule 90 (seen_OPER -> MINUS .)
    IDV             reduce using rule 90 (seen_OPER -> MINUS .)


state 187

    (112) seen_ID -> IDV OB INT . CB

    CB              shift and go to state 203


state 188

    (96) seen_TERM -> DIVISION .

    OP              reduce using rule 96 (seen_TERM -> DIVISION .)
    PLUS            reduce using rule 96 (seen_TERM -> DIVISION .)
    MINUS           reduce using rule 96 (seen_TERM -> DIVISION .)
    INT             reduce using rule 96 (seen_TERM -> DIVISION .)
    FLOAT           reduce using rule 96 (seen_TERM -> DIVISION .)
    STRING          reduce using rule 96 (seen_TERM -> DIVISION .)
    IDV             reduce using rule 96 (seen_TERM -> DIVISION .)


state 189

    (97) seen_TERM -> AND .

    OP              reduce using rule 97 (seen_TERM -> AND .)
    PLUS            reduce using rule 97 (seen_TERM -> AND .)
    MINUS           reduce using rule 97 (seen_TERM -> AND .)
    INT             reduce using rule 97 (seen_TERM -> AND .)
    FLOAT           reduce using rule 97 (seen_TERM -> AND .)
    STRING          reduce using rule 97 (seen_TERM -> AND .)
    IDV             reduce using rule 97 (seen_TERM -> AND .)


state 190

    (93) OPER -> TERM seen_TERMF seen_TERM . OPER
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 204
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137

state 191

    (95) seen_TERM -> MULTIPLY .

    OP              reduce using rule 95 (seen_TERM -> MULTIPLY .)
    PLUS            reduce using rule 95 (seen_TERM -> MULTIPLY .)
    MINUS           reduce using rule 95 (seen_TERM -> MULTIPLY .)
    INT             reduce using rule 95 (seen_TERM -> MULTIPLY .)
    FLOAT           reduce using rule 95 (seen_TERM -> MULTIPLY .)
    STRING          reduce using rule 95 (seen_TERM -> MULTIPLY .)
    IDV             reduce using rule 95 (seen_TERM -> MULTIPLY .)


state 192

    (124) CONCAT -> EXPRESSION seen_EXP_SAY DOT . CONCAT
    (124) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (125) CONCAT -> . EXPRESSION seen_EXP_SAY
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 143
    CONCAT                         shift and go to state 205

state 193

    (123) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 123 (SAY -> SAYW OP CONCAT CP PC .)


state 194

    (98) TERM -> OP seen_OP_TERM STM . CP

    CP              shift and go to state 206


state 195

    (128) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 207


state 196

    (129) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (130) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 208
    CP              reduce using rule 130 (PARAMETERS -> EXPRESSION .)


state 197

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC CC
    (149) seen_CP_LOOPIF -> .

    OC              reduce using rule 149 (seen_CP_LOOPIF -> .)

    seen_CP_LOOPIF                 shift and go to state 209

state 198

    (58) STM -> EXPRESSION STM2 EXPRESSION . seen_STM
    (66) seen_STM -> .

    CP              reduce using rule 66 (seen_STM -> .)

    seen_STM                       shift and go to state 210

state 199

    (47) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC . seen_OC_IF CC CONDITION2
    (49) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF OP STM CP OC . seen_OC_IF CC seen_CC_IF
    (51) seen_OC_IF -> .

    CC              reduce using rule 51 (seen_OC_IF -> .)
    RETURNW         reduce using rule 51 (seen_OC_IF -> .)
    IDV             reduce using rule 51 (seen_OC_IF -> .)
    LOOPW           reduce using rule 51 (seen_OC_IF -> .)
    LOOPIFW         reduce using rule 51 (seen_OC_IF -> .)
    IF              reduce using rule 51 (seen_OC_IF -> .)
    ASKUSER         reduce using rule 51 (seen_OC_IF -> .)
    SAYW            reduce using rule 51 (seen_OC_IF -> .)
    CALLBOXW        reduce using rule 51 (seen_OC_IF -> .)

    seen_OC_IF                     shift and go to state 211

state 200

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (138) LOOP2 -> . seen_INT_LOOP
    (139) LOOP2 -> . seen_FLOAT_LOOP
    (140) seen_INT_LOOP -> . INT
    (141) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 215
    FLOAT           shift and go to state 212

    seen_FLOAT_LOOP                shift and go to state 214
    LOOP2                          shift and go to state 216
    seen_INT_LOOP                  shift and go to state 213

state 201

    (127) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 217


state 202

    (87) EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .

    CP              reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOT             reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GT              reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GTE             reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LT              reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTE             reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTGT            reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    PC              reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    COMMA           reduce using rule 87 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)


state 203

    (112) seen_ID -> IDV OB INT CB .

    MULTIPLY        reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    DIVISION        reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    AND             reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    PLUS            reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    MINUS           reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    OR              reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    DOT             reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    CP              reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    PC              reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    GT              reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    GTE             reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    LT              reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    LTE             reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    LTGT            reduce using rule 112 (seen_ID -> IDV OB INT CB .)
    COMMA           reduce using rule 112 (seen_ID -> IDV OB INT CB .)


state 204

    (93) OPER -> TERM seen_TERMF seen_TERM OPER .

    PLUS            reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    MINUS           reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    OR              reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOT             reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CP              reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    PC              reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GT              reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GTE             reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LT              reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTE             reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOUBLEEQUALS    reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTGT            reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    COMMA           reduce using rule 93 (OPER -> TERM seen_TERMF seen_TERM OPER .)


state 205

    (124) CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .

    CP              reduce using rule 124 (CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .)


state 206

    (98) TERM -> OP seen_OP_TERM STM CP .

    MULTIPLY        reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    DIVISION        reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    AND             reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    PLUS            reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    MINUS           reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    OR              reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    GT              reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    GTE             reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    LT              reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    LTE             reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    DOUBLEEQUALS    reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    LTGT            reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    CP              reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    COMMA           reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    DOT             reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)
    PC              reduce using rule 98 (TERM -> OP seen_OP_TERM STM CP .)


state 207

    (128) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 218


state 208

    (129) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (129) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (130) PARAMETERS -> . EXPRESSION
    (86) EXPRESSION -> . OPER seen_EXPF
    (87) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (92) OPER -> . TERM seen_TERMF
    (93) OPER -> . TERM seen_TERMF seen_TERM OPER
    (98) TERM -> . OP seen_OP_TERM STM CP
    (99) TERM -> . TERM2
    (101) TERM2 -> . CTE
    (102) TERM2 -> . PLUS CTE
    (103) TERM2 -> . MINUS CTE
    (104) CTE -> . INT seen_INT
    (105) CTE -> . FLOAT seen_FLOAT
    (106) CTE -> . STRING seen_STRING
    (107) CTE -> . seen_ID
    (111) seen_ID -> . IDV
    (112) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 148
    PLUS            shift and go to state 142
    MINUS           shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    STRING          shift and go to state 139
    IDV             shift and go to state 136

    OPER                           shift and go to state 135
    TERM                           shift and go to state 140
    TERM2                          shift and go to state 144
    PARAMETERS                     shift and go to state 219
    seen_ID                        shift and go to state 141
    CTE                            shift and go to state 137
    EXPRESSION                     shift and go to state 196

state 209

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC CC

    OC              shift and go to state 220


state 210

    (58) STM -> EXPRESSION STM2 EXPRESSION seen_STM .

    CP              reduce using rule 58 (STM -> EXPRESSION STM2 EXPRESSION seen_STM .)


state 211

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC_IF . CC CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> IF OP STM CP OC seen_OC_IF . CC seen_CC_IF
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 221
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 222
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 212

    (141) seen_FLOAT_LOOP -> FLOAT .

    TO              reduce using rule 141 (seen_FLOAT_LOOP -> FLOAT .)
    CP              reduce using rule 141 (seen_FLOAT_LOOP -> FLOAT .)
    BY              reduce using rule 141 (seen_FLOAT_LOOP -> FLOAT .)


state 213

    (138) LOOP2 -> seen_INT_LOOP .

    CP              reduce using rule 138 (LOOP2 -> seen_INT_LOOP .)
    BY              reduce using rule 138 (LOOP2 -> seen_INT_LOOP .)
    TO              reduce using rule 138 (LOOP2 -> seen_INT_LOOP .)


state 214

    (139) LOOP2 -> seen_FLOAT_LOOP .

    CP              reduce using rule 139 (LOOP2 -> seen_FLOAT_LOOP .)
    BY              reduce using rule 139 (LOOP2 -> seen_FLOAT_LOOP .)
    TO              reduce using rule 139 (LOOP2 -> seen_FLOAT_LOOP .)


state 215

    (140) seen_INT_LOOP -> INT .

    BY              reduce using rule 140 (seen_INT_LOOP -> INT .)
    CP              reduce using rule 140 (seen_INT_LOOP -> INT .)
    TO              reduce using rule 140 (seen_INT_LOOP -> INT .)


state 216

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC CC

    TO              shift and go to state 223


state 217

    (127) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 224


state 218

    (128) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 128 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 219

    (129) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 129 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 220

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . BLOCKS2 CC
    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . CC
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 225
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 226
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 221

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF CC . CONDITION2
    (50) CONDITION -> IF OP STM CP OC seen_OC_IF CC . seen_CC_IF
    (53) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (52) seen_CC_IF -> .

    ELSE            shift and go to state 227
    RETURNW         reduce using rule 52 (seen_CC_IF -> .)
    IDV             reduce using rule 52 (seen_CC_IF -> .)
    LOOPW           reduce using rule 52 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 52 (seen_CC_IF -> .)
    IF              reduce using rule 52 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 52 (seen_CC_IF -> .)
    SAYW            reduce using rule 52 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 52 (seen_CC_IF -> .)
    CC              reduce using rule 52 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 228
    CONDITION2                     shift and go to state 229

state 222

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC seen_CC_IF

    CC              shift and go to state 230


state 223

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC CC
    (138) LOOP2 -> . seen_INT_LOOP
    (139) LOOP2 -> . seen_FLOAT_LOOP
    (140) seen_INT_LOOP -> . INT
    (141) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 215
    FLOAT           shift and go to state 212

    seen_FLOAT_LOOP                shift and go to state 214
    LOOP2                          shift and go to state 231
    seen_INT_LOOP                  shift and go to state 213

state 224

    (127) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 127 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 225

    (147) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .

    RETURNW         reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IDV             reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPW           reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPIFW         reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IF              reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    ASKUSER         reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    SAYW            reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CALLBOXW        reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CC              reduce using rule 147 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)


state 226

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 . CC

    CC              shift and go to state 232


state 227

    (53) CONDITION2 -> ELSE . seen_ELSE OC CONDITION3
    (56) seen_ELSE -> .

    OC              reduce using rule 56 (seen_ELSE -> .)

    seen_ELSE                      shift and go to state 233

state 228

    (50) CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .

    RETURNW         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IDV             reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPW           reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPIFW         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IF              reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    ASKUSER         reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    SAYW            reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CALLBOXW        reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CC              reduce using rule 50 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)


state 229

    (48) CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .

    RETURNW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IDV             reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPW           reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPIFW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IF              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    ASKUSER         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    SAYW            reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CALLBOXW        reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CC              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)


state 230

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . seen_CC_IF
    (53) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (52) seen_CC_IF -> .

    ELSE            shift and go to state 227
    RETURNW         reduce using rule 52 (seen_CC_IF -> .)
    IDV             reduce using rule 52 (seen_CC_IF -> .)
    LOOPW           reduce using rule 52 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 52 (seen_CC_IF -> .)
    IF              reduce using rule 52 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 52 (seen_CC_IF -> .)
    SAYW            reduce using rule 52 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 52 (seen_CC_IF -> .)
    CC              reduce using rule 52 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 234
    CONDITION2                     shift and go to state 235

state 231

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC CC

    BY              shift and go to state 237
    CP              shift and go to state 236


state 232

    (146) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .

    RETURNW         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IDV             reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPW           reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IF              reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    SAYW            reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CC              reduce using rule 146 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)


state 233

    (53) CONDITION2 -> ELSE seen_ELSE . OC CONDITION3

    OC              shift and go to state 238


state 234

    (49) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .

    RETURNW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IDV             reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPW           reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPIFW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IF              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    ASKUSER         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    SAYW            reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CALLBOXW        reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CC              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)


state 235

    (47) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)


state 236

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC BLOCKS2 CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC CC
    (136) seen_CP_LOOP2 -> .

    OC              reduce using rule 136 (seen_CP_LOOP2 -> .)

    seen_CP_LOOP2                  shift and go to state 239

state 237

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (142) LOOP3 -> . PLUS
    (143) LOOP3 -> . MINUS
    (144) LOOP3 -> .

    PLUS            shift and go to state 241
    MINUS           shift and go to state 240
    INT             reduce using rule 144 (LOOP3 -> .)
    FLOAT           reduce using rule 144 (LOOP3 -> .)

    LOOP3                          shift and go to state 242

state 238

    (53) CONDITION2 -> ELSE seen_ELSE OC . CONDITION3
    (54) CONDITION3 -> . BLOCKS2 CC seen_CC_ELSE
    (55) CONDITION3 -> . CC seen_CC_ELSE
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 243
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    CONDITION3                     shift and go to state 244
    BLOCKS2                        shift and go to state 245
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 239

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC BLOCKS2 CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC CC

    OC              shift and go to state 246


state 240

    (143) LOOP3 -> MINUS .

    INT             reduce using rule 143 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 143 (LOOP3 -> MINUS .)


state 241

    (142) LOOP3 -> PLUS .

    INT             reduce using rule 142 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 142 (LOOP3 -> PLUS .)


state 242

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC CC
    (138) LOOP2 -> . seen_INT_LOOP
    (139) LOOP2 -> . seen_FLOAT_LOOP
    (140) seen_INT_LOOP -> . INT
    (141) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 215
    FLOAT           shift and go to state 212

    seen_FLOAT_LOOP                shift and go to state 214
    LOOP2                          shift and go to state 247
    seen_INT_LOOP                  shift and go to state 213

state 243

    (55) CONDITION3 -> CC . seen_CC_ELSE
    (57) seen_CC_ELSE -> .

    RETURNW         reduce using rule 57 (seen_CC_ELSE -> .)
    IDV             reduce using rule 57 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 57 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 57 (seen_CC_ELSE -> .)
    IF              reduce using rule 57 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 57 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 57 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 57 (seen_CC_ELSE -> .)
    CC              reduce using rule 57 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 248

state 244

    (53) CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .

    RETURNW         reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IDV             reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPW           reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPIFW         reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IF              reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    ASKUSER         reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    SAYW            reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CALLBOXW        reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CC              reduce using rule 53 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)


state 245

    (54) CONDITION3 -> BLOCKS2 . CC seen_CC_ELSE

    CC              shift and go to state 249


state 246

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . BLOCKS2 CC
    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . CC
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 250
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 251
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 247

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC CC

    CP              shift and go to state 252


state 248

    (55) CONDITION3 -> CC seen_CC_ELSE .

    RETURNW         reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    IDV             reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPW           reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    IF              reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    SAYW            reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)
    CC              reduce using rule 55 (CONDITION3 -> CC seen_CC_ELSE .)


state 249

    (54) CONDITION3 -> BLOCKS2 CC . seen_CC_ELSE
    (57) seen_CC_ELSE -> .

    RETURNW         reduce using rule 57 (seen_CC_ELSE -> .)
    IDV             reduce using rule 57 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 57 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 57 (seen_CC_ELSE -> .)
    IF              reduce using rule 57 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 57 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 57 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 57 (seen_CC_ELSE -> .)
    CC              reduce using rule 57 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 253

state 250

    (134) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .

    RETURNW         reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IDV             reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPW           reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPIFW         reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IF              reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    ASKUSER         reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    SAYW            reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CALLBOXW        reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CC              reduce using rule 134 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)


state 251

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 . CC

    CC              shift and go to state 254


state 252

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC CC
    (135) seen_CP_LOOP1 -> .

    OC              reduce using rule 135 (seen_CP_LOOP1 -> .)

    seen_CP_LOOP1                  shift and go to state 255

state 253

    (54) CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .

    RETURNW         reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IDV             reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPW           reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IF              reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    SAYW            reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CC              reduce using rule 54 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)


state 254

    (132) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .

    RETURNW         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IDV             reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IF              reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    SAYW            reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CC              reduce using rule 132 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)


state 255

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC CC

    OC              shift and go to state 256


state 256

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . BLOCKS2 CC
    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . CC
    (37) BLOCKS2 -> . CODE
    (38) BLOCKS2 -> . CODE BLOCKS2
    (39) CODE -> . RETURN
    (40) CODE -> . ASSIGNATION
    (41) CODE -> . LOOP
    (42) CODE -> . LOOPIF
    (43) CODE -> . CONDITION
    (44) CODE -> . ASK
    (45) CODE -> . SAY
    (46) CODE -> . CALLBOX
    (84) RETURN -> . RETURNW EQUALS PC
    (85) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (131) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (132) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (133) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (134) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (146) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (147) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (47) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (49) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (50) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (127) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (123) SAY -> . SAYW OP CONCAT CP PC
    (128) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 257
    RETURNW         shift and go to state 109
    IDV             shift and go to state 101
    LOOPW           shift and go to state 111
    LOOPIFW         shift and go to state 108
    IF              shift and go to state 110
    ASKUSER         shift and go to state 115
    SAYW            shift and go to state 97
    CALLBOXW        shift and go to state 102

    CODE                           shift and go to state 98
    RETURN                         shift and go to state 99
    SAY                            shift and go to state 103
    ASK                            shift and go to state 104
    CONDITION                      shift and go to state 105
    ASSIGNATION                    shift and go to state 106
    BLOCKS2                        shift and go to state 258
    CALLBOX                        shift and go to state 113
    LOOPIF                         shift and go to state 114
    LOOP                           shift and go to state 116

state 257

    (133) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .

    RETURNW         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IDV             reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPW           reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPIFW         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IF              reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    ASKUSER         reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    SAYW            reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CALLBOXW        reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CC              reduce using rule 133 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)


state 258

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 . CC

    CC              shift and go to state 259


state 259

    (131) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .

    RETURNW         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IDV             reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IF              reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    SAYW            reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CC              reduce using rule 131 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 88 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 88 resolved as shift
WARNING: shift/reduce conflict for IDV in state 88 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 88 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 88 resolved as shift
WARNING: shift/reduce conflict for IF in state 88 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 88 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 88 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 88 resolved as shift
