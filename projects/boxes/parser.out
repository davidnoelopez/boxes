Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC VARS BLOCKS CC
Rule 3     VARS -> VARI VARS
Rule 4     VARS -> VARF VARS
Rule 5     VARS -> VARST VARS
Rule 6     VARS -> VARL VARS
Rule 7     VARS -> <empty>
Rule 8     VARF -> VARFSMALL VARF3 PC
Rule 9     VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 10    VARF3 -> IDV EQUALS FLOAT
Rule 11    VARF3 -> IDV COMMA VARF3
Rule 12    VARF3 -> IDV
Rule 13    VARI -> VARISMALL VARI3 PC
Rule 14    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 15    VARI3 -> IDV EQUALS INT
Rule 16    VARI3 -> IDV COMMA VARI3
Rule 17    VARI3 -> IDV
Rule 18    VARST -> VARSTSMALL VARST3 PC
Rule 19    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 20    VARST3 -> IDV EQUALS STRING
Rule 21    VARST3 -> IDV COMMA VARST3
Rule 22    VARST3 -> IDV
Rule 23    VARL -> VARLSMALL VARL3 PC
Rule 24    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 26    VARL3 -> IDV COMMA VARL3
Rule 27    VARL3 -> IDV
Rule 28    VARL4 -> CTEL
Rule 29    VARL4 -> CTEL COMMA VARL4
Rule 30    VARL4 -> <empty>
Rule 31    BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC
Rule 32    BLOCKS -> OC CC
Rule 33    BLOCKS2 -> CODE
Rule 34    BLOCKS2 -> CODE BLOCKS2
Rule 35    CODE -> RETURN
Rule 36    CODE -> ASSIGNATION
Rule 37    CODE -> LOOP
Rule 38    CODE -> LOOPIF
Rule 39    CODE -> CONDITION
Rule 40    CODE -> ASK
Rule 41    CODE -> SAY
Rule 42    CODE -> CALLBOX
Rule 43    CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2
Rule 44    CONDITION -> IF OP STM CP OC CC CONDITION2
Rule 45    CONDITION -> IF OP STM CP OC BLOCKS2 CC
Rule 46    CONDITION -> IF OP STM CP OC CC
Rule 47    CONDITION2 -> ELSE OC BLOCKS2 CC
Rule 48    CONDITION2 -> ELSE OC CC
Rule 49    STM -> EXPRESSION STM2 EXPRESSION
Rule 50    STM -> EXPRESSION
Rule 51    STM2 -> GT
Rule 52    STM2 -> GTE
Rule 53    STM2 -> LT
Rule 54    STM2 -> LTE
Rule 55    STM2 -> DOUBLEEQUALS
Rule 56    STM2 -> LTGT
Rule 57    PARAM -> PARAM2 IDV
Rule 58    PARAM2 -> VARISMALL
Rule 59    PARAM2 -> VARSTSMALL
Rule 60    PARAM2 -> VARFSMALL
Rule 61    PARAM2 -> VARLSMALL
Rule 62    METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
Rule 63    METHODS -> METHODS2 IDM OP METHODS3 CP OC CC
Rule 64    METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
Rule 65    METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS
Rule 66    METHODS2 -> RECURSIVEBOX
Rule 67    METHODS2 -> VOIDBOX
Rule 68    METHODS2 -> VARIBOX
Rule 69    METHODS2 -> VARFBOX
Rule 70    METHODS2 -> VARSBOX
Rule 71    METHODS2 -> VARLBOX
Rule 72    METHODS3 -> PARAM COMMA METHODS3
Rule 73    METHODS3 -> PARAM
Rule 74    METHODS3 -> <empty>
Rule 75    RETURN -> RETURNW EQUALS PC
Rule 76    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 77    EXPRESSION -> OPER
Rule 78    EXPRESSION -> OPER PLUS EXPRESSION
Rule 79    EXPRESSION -> OPER MINUS EXPRESSION
Rule 80    OPER -> TERM
Rule 81    OPER -> TERM MULTIPLY OPER
Rule 82    OPER -> TERM DIVISION OPER
Rule 83    TERM -> OP EXPRESSION CP
Rule 84    TERM -> TERM2
Rule 85    TERM2 -> CTE
Rule 86    TERM2 -> PLUS CTE
Rule 87    TERM2 -> MINUS CTE
Rule 88    CTE -> INT
Rule 89    CTE -> FLOAT
Rule 90    CTE -> STRING
Rule 91    CTE -> IDV
Rule 92    CTE -> IDV OB INT CB
Rule 93    CTEL -> INT
Rule 94    CTEL -> FLOAT
Rule 95    CTEL -> STRING
Rule 96    CTEL -> IDV
Rule 97    CTEL -> IDV OB INT CB
Rule 98    CTEL -> OB CTEL2 CB
Rule 99    CTEL -> OB CB
Rule 100   CTEL2 -> CTEL
Rule 101   CTEL2 -> CTEL COMMA CTEL2
Rule 102   SAY -> SAYW OP CONCAT CP PC
Rule 103   CONCAT -> EXPRESSION DOT CONCAT
Rule 104   CONCAT -> EXPRESSION
Rule 105   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 106   CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 107   PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 108   PARAMETERS -> EXPRESSION
Rule 109   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
Rule 110   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
Rule 111   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
Rule 112   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
Rule 113   LOOP2 -> INT
Rule 114   LOOP2 -> FLOAT
Rule 115   LOOP3 -> PLUS
Rule 116   LOOP3 -> MINUS
Rule 117   LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
Rule 118   LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC

Terminals, with rules where they appear

ASKUSER              : 105
BOX                  : 1 2
BY                   : 109 111
CALLBOXW             : 106
CB                   : 24 25 92 97 98 99
CC                   : 1 2 31 32 43 44 45 46 47 48 62 63 64 65 109 110 111 112 117 118
COMMA                : 9 11 14 16 19 21 25 26 29 72 101 105 106 107
CP                   : 31 43 44 45 46 62 63 64 65 83 102 105 106 109 110 111 112 117 118
DIVISION             : 82
DOT                  : 103
DOUBLEEQUALS         : 55
ELSE                 : 47 48
EQUALS               : 9 10 14 15 19 20 24 25 75 76
FLOAT                : 9 10 89 94 114
FROM                 : 109 110 111 112
GT                   : 51
GTE                  : 52
IDM                  : 62 63 64 65 106
IDV                  : 9 10 11 12 14 15 16 17 19 20 21 22 24 25 26 27 57 76 91 92 96 97 105 109 110 111 112
IF                   : 43 44 45 46
INT                  : 14 15 88 92 93 97 113
LOOPIFW              : 117 118
LOOPW                : 109 110 111 112
LT                   : 53
LTE                  : 54
LTGT                 : 56
MAINBOX              : 31
MINUS                : 79 87 116
MULTIPLY             : 81
OB                   : 24 25 92 97 98 99
OC                   : 1 2 31 32 43 44 45 46 47 48 62 63 64 65 109 110 111 112 117 118
OP                   : 31 43 44 45 46 62 63 64 65 83 102 105 106 109 110 111 112 117 118
PC                   : 8 13 18 23 75 76 102 105 106
PLUS                 : 78 86 115
RECURSIVEBOX         : 66
RETURNW              : 75
SAYW                 : 102
STRING               : 19 20 90 95 105
TO                   : 109 110 111 112
VARFBOX              : 69
VARFSMALL            : 8 60
VARIBOX              : 68
VARISMALL            : 13 58
VARLBOX              : 71
VARLSMALL            : 23 61
VARSBOX              : 70
VARSTSMALL           : 18 59
VOIDBOX              : 67
error                : 

Nonterminals, with rules where they appear

ASK                  : 40
ASSIGNATION          : 36
BLOCKS               : 1 2
BLOCKS2              : 31 34 43 45 47 62 64 109 110 117
BOXES                : 0
CALLBOX              : 42
CODE                 : 33 34
CONCAT               : 102 103
CONDITION            : 39
CONDITION2           : 43 44
CTE                  : 85 86 87
CTEL                 : 28 29 100 101
CTEL2                : 98 101
EXPRESSION           : 49 49 50 76 78 79 83 103 104 107 108 117 118
LOOP                 : 37
LOOP2                : 109 109 109 110 110 111 111 111 112 112
LOOP3                : 109 111
LOOPIF               : 38
METHODS              : 1 64 65
METHODS2             : 62 63 64 65
METHODS3             : 62 63 64 65 72
OPER                 : 77 78 79 81 82
PARAM                : 72 73
PARAM2               : 57
PARAMETERS           : 106 107
RETURN               : 35
SAY                  : 41
STM                  : 43 44 45 46
STM2                 : 49
TERM                 : 80 81 82
TERM2                : 84
VARF                 : 4
VARF3                : 8 9 11
VARI                 : 3
VARI3                : 13 14 16
VARL                 : 6
VARL3                : 23 25 26
VARL4                : 24 25 29
VARS                 : 1 2 3 4 5 6
VARST                : 5
VARST3               : 18 19 21

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS BLOCKS METHODS CC
    (2) BOXES -> . BOX OC VARS BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS BLOCKS METHODS CC
    (2) BOXES -> BOX . OC VARS BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS BLOCKS METHODS CC
    (2) BOXES -> BOX OC . VARS BLOCKS CC
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 4
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 4

    (1) BOXES -> BOX OC VARS . BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS . BLOCKS CC
    (31) BLOCKS -> . MAINBOX OP CP OC BLOCKS2 CC
    (32) BLOCKS -> . OC CC

    MAINBOX         shift and go to state 14
    OC              shift and go to state 15

    BLOCKS                         shift and go to state 13

state 5

    (13) VARI -> VARISMALL . VARI3 PC
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 17

state 6

    (18) VARST -> VARSTSMALL . VARST3 PC
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 18

state 7

    (4) VARS -> VARF . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 20
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 8

    (5) VARS -> VARST . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 21
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 9

    (6) VARS -> VARL . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 22
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 10

    (23) VARL -> VARLSMALL . VARL3 PC
    (24) VARL3 -> . IDV EQUALS OB VARL4 CB
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (26) VARL3 -> . IDV COMMA VARL3
    (27) VARL3 -> . IDV

    IDV             shift and go to state 24

    VARL3                          shift and go to state 23

state 11

    (3) VARS -> VARI . VARS
    (3) VARS -> . VARI VARS
    (4) VARS -> . VARF VARS
    (5) VARS -> . VARST VARS
    (6) VARS -> . VARL VARS
    (7) VARS -> .
    (13) VARI -> . VARISMALL VARI3 PC
    (8) VARF -> . VARFSMALL VARF3 PC
    (18) VARST -> . VARSTSMALL VARST3 PC
    (23) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 7 (VARS -> .)
    OC              reduce using rule 7 (VARS -> .)
    VARISMALL       shift and go to state 5
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 6
    VARLSMALL       shift and go to state 10

    VARS                           shift and go to state 25
    VARF                           shift and go to state 7
    VARST                          shift and go to state 8
    VARL                           shift and go to state 9
    VARI                           shift and go to state 11

state 12

    (8) VARF -> VARFSMALL . VARF3 PC
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 27

state 13

    (1) BOXES -> BOX OC VARS BLOCKS . METHODS CC
    (2) BOXES -> BOX OC VARS BLOCKS . CC
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (64) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (66) METHODS2 -> . RECURSIVEBOX
    (67) METHODS2 -> . VOIDBOX
    (68) METHODS2 -> . VARIBOX
    (69) METHODS2 -> . VARFBOX
    (70) METHODS2 -> . VARSBOX
    (71) METHODS2 -> . VARLBOX

    CC              shift and go to state 30
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS                        shift and go to state 29
    METHODS2                       shift and go to state 36

state 14

    (31) BLOCKS -> MAINBOX . OP CP OC BLOCKS2 CC

    OP              shift and go to state 37


state 15

    (32) BLOCKS -> OC . CC

    CC              shift and go to state 38


state 16

    (14) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (15) VARI3 -> IDV . EQUALS INT
    (16) VARI3 -> IDV . COMMA VARI3
    (17) VARI3 -> IDV .

    EQUALS          shift and go to state 40
    COMMA           shift and go to state 39
    PC              reduce using rule 17 (VARI3 -> IDV .)


state 17

    (13) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 41


state 18

    (18) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 42


state 19

    (19) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (20) VARST3 -> IDV . EQUALS STRING
    (21) VARST3 -> IDV . COMMA VARST3
    (22) VARST3 -> IDV .

    EQUALS          shift and go to state 44
    COMMA           shift and go to state 43
    PC              reduce using rule 22 (VARST3 -> IDV .)


state 20

    (4) VARS -> VARF VARS .

    MAINBOX         reduce using rule 4 (VARS -> VARF VARS .)
    OC              reduce using rule 4 (VARS -> VARF VARS .)


state 21

    (5) VARS -> VARST VARS .

    MAINBOX         reduce using rule 5 (VARS -> VARST VARS .)
    OC              reduce using rule 5 (VARS -> VARST VARS .)


state 22

    (6) VARS -> VARL VARS .

    MAINBOX         reduce using rule 6 (VARS -> VARL VARS .)
    OC              reduce using rule 6 (VARS -> VARL VARS .)


state 23

    (23) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 45


state 24

    (24) VARL3 -> IDV . EQUALS OB VARL4 CB
    (25) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (26) VARL3 -> IDV . COMMA VARL3
    (27) VARL3 -> IDV .

    EQUALS          shift and go to state 46
    COMMA           shift and go to state 47
    PC              reduce using rule 27 (VARL3 -> IDV .)


state 25

    (3) VARS -> VARI VARS .

    MAINBOX         reduce using rule 3 (VARS -> VARI VARS .)
    OC              reduce using rule 3 (VARS -> VARI VARS .)


state 26

    (9) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> IDV . EQUALS FLOAT
    (11) VARF3 -> IDV . COMMA VARF3
    (12) VARF3 -> IDV .

    EQUALS          shift and go to state 49
    COMMA           shift and go to state 48
    PC              reduce using rule 12 (VARF3 -> IDV .)


state 27

    (8) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 50


state 28

    (66) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 66 (METHODS2 -> RECURSIVEBOX .)


state 29

    (1) BOXES -> BOX OC VARS BLOCKS METHODS . CC

    CC              shift and go to state 51


state 30

    (2) BOXES -> BOX OC VARS BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS BLOCKS CC .)


state 31

    (68) METHODS2 -> VARIBOX .

    IDM             reduce using rule 68 (METHODS2 -> VARIBOX .)


state 32

    (71) METHODS2 -> VARLBOX .

    IDM             reduce using rule 71 (METHODS2 -> VARLBOX .)


state 33

    (69) METHODS2 -> VARFBOX .

    IDM             reduce using rule 69 (METHODS2 -> VARFBOX .)


state 34

    (70) METHODS2 -> VARSBOX .

    IDM             reduce using rule 70 (METHODS2 -> VARSBOX .)


state 35

    (67) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 67 (METHODS2 -> VOIDBOX .)


state 36

    (62) METHODS -> METHODS2 . IDM OP METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> METHODS2 . IDM OP METHODS3 CP OC CC
    (64) METHODS -> METHODS2 . IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 . IDM OP METHODS3 CP OC CC METHODS

    IDM             shift and go to state 52


state 37

    (31) BLOCKS -> MAINBOX OP . CP OC BLOCKS2 CC

    CP              shift and go to state 53


state 38

    (32) BLOCKS -> OC CC .

    CC              reduce using rule 32 (BLOCKS -> OC CC .)
    RECURSIVEBOX    reduce using rule 32 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 32 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 32 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 32 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 32 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 32 (BLOCKS -> OC CC .)


state 39

    (16) VARI3 -> IDV COMMA . VARI3
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 54

state 40

    (14) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (15) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 55


state 41

    (13) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)
    OC              reduce using rule 13 (VARI -> VARISMALL VARI3 PC .)


state 42

    (18) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)
    OC              reduce using rule 18 (VARST -> VARSTSMALL VARST3 PC .)


state 43

    (21) VARST3 -> IDV COMMA . VARST3
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 56

state 44

    (19) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (20) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 57


state 45

    (23) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)
    OC              reduce using rule 23 (VARL -> VARLSMALL VARL3 PC .)


state 46

    (24) VARL3 -> IDV EQUALS . OB VARL4 CB
    (25) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 58


state 47

    (26) VARL3 -> IDV COMMA . VARL3
    (24) VARL3 -> . IDV EQUALS OB VARL4 CB
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (26) VARL3 -> . IDV COMMA VARL3
    (27) VARL3 -> . IDV

    IDV             shift and go to state 24

    VARL3                          shift and go to state 59

state 48

    (11) VARF3 -> IDV COMMA . VARF3
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 60

state 49

    (9) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (10) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 61


state 50

    (8) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)
    OC              reduce using rule 8 (VARF -> VARFSMALL VARF3 PC .)


state 51

    (1) BOXES -> BOX OC VARS BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS BLOCKS METHODS CC .)


state 52

    (62) METHODS -> METHODS2 IDM . OP METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> METHODS2 IDM . OP METHODS3 CP OC CC
    (64) METHODS -> METHODS2 IDM . OP METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 IDM . OP METHODS3 CP OC CC METHODS

    OP              shift and go to state 62


state 53

    (31) BLOCKS -> MAINBOX OP CP . OC BLOCKS2 CC

    OC              shift and go to state 63


state 54

    (16) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 16 (VARI3 -> IDV COMMA VARI3 .)


state 55

    (14) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (15) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 64
    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT .)


state 56

    (21) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 21 (VARST3 -> IDV COMMA VARST3 .)


state 57

    (19) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (20) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 65
    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING .)


state 58

    (24) VARL3 -> IDV EQUALS OB . VARL4 CB
    (25) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (28) VARL4 -> . CTEL
    (29) VARL4 -> . CTEL COMMA VARL4
    (30) VARL4 -> .
    (93) CTEL -> . INT
    (94) CTEL -> . FLOAT
    (95) CTEL -> . STRING
    (96) CTEL -> . IDV
    (97) CTEL -> . IDV OB INT CB
    (98) CTEL -> . OB CTEL2 CB
    (99) CTEL -> . OB CB

    CB              reduce using rule 30 (VARL4 -> .)
    INT             shift and go to state 71
    FLOAT           shift and go to state 69
    STRING          shift and go to state 66
    IDV             shift and go to state 68
    OB              shift and go to state 70

    CTEL                           shift and go to state 72
    VARL4                          shift and go to state 67

state 59

    (26) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 26 (VARL3 -> IDV COMMA VARL3 .)


state 60

    (11) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 11 (VARF3 -> IDV COMMA VARF3 .)


state 61

    (9) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (10) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 73
    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT .)


state 62

    (62) METHODS -> METHODS2 IDM OP . METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> METHODS2 IDM OP . METHODS3 CP OC CC
    (64) METHODS -> METHODS2 IDM OP . METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 IDM OP . METHODS3 CP OC CC METHODS
    (72) METHODS3 -> . PARAM COMMA METHODS3
    (73) METHODS3 -> . PARAM
    (74) METHODS3 -> .
    (57) PARAM -> . PARAM2 IDV
    (58) PARAM2 -> . VARISMALL
    (59) PARAM2 -> . VARSTSMALL
    (60) PARAM2 -> . VARFSMALL
    (61) PARAM2 -> . VARLSMALL

    CP              reduce using rule 74 (METHODS3 -> .)
    VARISMALL       shift and go to state 75
    VARSTSMALL      shift and go to state 76
    VARFSMALL       shift and go to state 78
    VARLSMALL       shift and go to state 74

    PARAM                          shift and go to state 77
    PARAM2                         shift and go to state 79
    METHODS3                       shift and go to state 80

state 63

    (31) BLOCKS -> MAINBOX OP CP OC . BLOCKS2 CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 94
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 64

    (14) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (14) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (15) VARI3 -> . IDV EQUALS INT
    (16) VARI3 -> . IDV COMMA VARI3
    (17) VARI3 -> . IDV

    IDV             shift and go to state 16

    VARI3                          shift and go to state 99

state 65

    (19) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (19) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (20) VARST3 -> . IDV EQUALS STRING
    (21) VARST3 -> . IDV COMMA VARST3
    (22) VARST3 -> . IDV

    IDV             shift and go to state 19

    VARST3                         shift and go to state 100

state 66

    (95) CTEL -> STRING .

    COMMA           reduce using rule 95 (CTEL -> STRING .)
    CB              reduce using rule 95 (CTEL -> STRING .)


state 67

    (24) VARL3 -> IDV EQUALS OB VARL4 . CB
    (25) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 101


state 68

    (96) CTEL -> IDV .
    (97) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 96 (CTEL -> IDV .)
    CB              reduce using rule 96 (CTEL -> IDV .)
    OB              shift and go to state 102


state 69

    (94) CTEL -> FLOAT .

    COMMA           reduce using rule 94 (CTEL -> FLOAT .)
    CB              reduce using rule 94 (CTEL -> FLOAT .)


state 70

    (98) CTEL -> OB . CTEL2 CB
    (99) CTEL -> OB . CB
    (100) CTEL2 -> . CTEL
    (101) CTEL2 -> . CTEL COMMA CTEL2
    (93) CTEL -> . INT
    (94) CTEL -> . FLOAT
    (95) CTEL -> . STRING
    (96) CTEL -> . IDV
    (97) CTEL -> . IDV OB INT CB
    (98) CTEL -> . OB CTEL2 CB
    (99) CTEL -> . OB CB

    CB              shift and go to state 103
    INT             shift and go to state 71
    FLOAT           shift and go to state 69
    STRING          shift and go to state 66
    IDV             shift and go to state 68
    OB              shift and go to state 70

    CTEL2                          shift and go to state 104
    CTEL                           shift and go to state 105

state 71

    (93) CTEL -> INT .

    COMMA           reduce using rule 93 (CTEL -> INT .)
    CB              reduce using rule 93 (CTEL -> INT .)


state 72

    (28) VARL4 -> CTEL .
    (29) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 28 (VARL4 -> CTEL .)
    COMMA           shift and go to state 106


state 73

    (9) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (9) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT
    (11) VARF3 -> . IDV COMMA VARF3
    (12) VARF3 -> . IDV

    IDV             shift and go to state 26

    VARF3                          shift and go to state 107

state 74

    (61) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 61 (PARAM2 -> VARLSMALL .)


state 75

    (58) PARAM2 -> VARISMALL .

    IDV             reduce using rule 58 (PARAM2 -> VARISMALL .)


state 76

    (59) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 59 (PARAM2 -> VARSTSMALL .)


state 77

    (72) METHODS3 -> PARAM . COMMA METHODS3
    (73) METHODS3 -> PARAM .

    COMMA           shift and go to state 108
    CP              reduce using rule 73 (METHODS3 -> PARAM .)


state 78

    (60) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 60 (PARAM2 -> VARFSMALL .)


state 79

    (57) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 109


state 80

    (62) METHODS -> METHODS2 IDM OP METHODS3 . CP OC BLOCKS2 CC
    (63) METHODS -> METHODS2 IDM OP METHODS3 . CP OC CC
    (64) METHODS -> METHODS2 IDM OP METHODS3 . CP OC BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 IDM OP METHODS3 . CP OC CC METHODS

    CP              shift and go to state 110


state 81

    (102) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 111


state 82

    (33) BLOCKS2 -> CODE .
    (34) BLOCKS2 -> CODE . BLOCKS2
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 33 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 112
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 83

    (35) CODE -> RETURN .

    RETURNW         reduce using rule 35 (CODE -> RETURN .)
    IDV             reduce using rule 35 (CODE -> RETURN .)
    LOOPW           reduce using rule 35 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 35 (CODE -> RETURN .)
    IF              reduce using rule 35 (CODE -> RETURN .)
    ASKUSER         reduce using rule 35 (CODE -> RETURN .)
    SAYW            reduce using rule 35 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 35 (CODE -> RETURN .)
    CC              reduce using rule 35 (CODE -> RETURN .)


state 84

    (76) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 113


state 85

    (41) CODE -> SAY .

    RETURNW         reduce using rule 41 (CODE -> SAY .)
    IDV             reduce using rule 41 (CODE -> SAY .)
    LOOPW           reduce using rule 41 (CODE -> SAY .)
    LOOPIFW         reduce using rule 41 (CODE -> SAY .)
    IF              reduce using rule 41 (CODE -> SAY .)
    ASKUSER         reduce using rule 41 (CODE -> SAY .)
    SAYW            reduce using rule 41 (CODE -> SAY .)
    CALLBOXW        reduce using rule 41 (CODE -> SAY .)
    CC              reduce using rule 41 (CODE -> SAY .)


state 86

    (40) CODE -> ASK .

    RETURNW         reduce using rule 40 (CODE -> ASK .)
    IDV             reduce using rule 40 (CODE -> ASK .)
    LOOPW           reduce using rule 40 (CODE -> ASK .)
    LOOPIFW         reduce using rule 40 (CODE -> ASK .)
    IF              reduce using rule 40 (CODE -> ASK .)
    ASKUSER         reduce using rule 40 (CODE -> ASK .)
    SAYW            reduce using rule 40 (CODE -> ASK .)
    CALLBOXW        reduce using rule 40 (CODE -> ASK .)
    CC              reduce using rule 40 (CODE -> ASK .)


state 87

    (109) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC CC

    OP              shift and go to state 114


state 88

    (39) CODE -> CONDITION .

    RETURNW         reduce using rule 39 (CODE -> CONDITION .)
    IDV             reduce using rule 39 (CODE -> CONDITION .)
    LOOPW           reduce using rule 39 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 39 (CODE -> CONDITION .)
    IF              reduce using rule 39 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 39 (CODE -> CONDITION .)
    SAYW            reduce using rule 39 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 39 (CODE -> CONDITION .)
    CC              reduce using rule 39 (CODE -> CONDITION .)


state 89

    (36) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 36 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 36 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 36 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 36 (CODE -> ASSIGNATION .)
    IF              reduce using rule 36 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 36 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 36 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 36 (CODE -> ASSIGNATION .)
    CC              reduce using rule 36 (CODE -> ASSIGNATION .)


state 90

    (106) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 115


state 91

    (117) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC CC

    OP              shift and go to state 116


state 92

    (75) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 117


state 93

    (43) CONDITION -> IF . OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> IF . OP STM CP OC CC CONDITION2
    (45) CONDITION -> IF . OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> IF . OP STM CP OC CC

    OP              shift and go to state 118


state 94

    (31) BLOCKS -> MAINBOX OP CP OC BLOCKS2 . CC

    CC              shift and go to state 119


state 95

    (42) CODE -> CALLBOX .

    RETURNW         reduce using rule 42 (CODE -> CALLBOX .)
    IDV             reduce using rule 42 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 42 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 42 (CODE -> CALLBOX .)
    IF              reduce using rule 42 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 42 (CODE -> CALLBOX .)
    SAYW            reduce using rule 42 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 42 (CODE -> CALLBOX .)
    CC              reduce using rule 42 (CODE -> CALLBOX .)


state 96

    (38) CODE -> LOOPIF .

    RETURNW         reduce using rule 38 (CODE -> LOOPIF .)
    IDV             reduce using rule 38 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 38 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 38 (CODE -> LOOPIF .)
    IF              reduce using rule 38 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 38 (CODE -> LOOPIF .)
    SAYW            reduce using rule 38 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 38 (CODE -> LOOPIF .)
    CC              reduce using rule 38 (CODE -> LOOPIF .)


state 97

    (105) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 120


state 98

    (37) CODE -> LOOP .

    RETURNW         reduce using rule 37 (CODE -> LOOP .)
    IDV             reduce using rule 37 (CODE -> LOOP .)
    LOOPW           reduce using rule 37 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 37 (CODE -> LOOP .)
    IF              reduce using rule 37 (CODE -> LOOP .)
    ASKUSER         reduce using rule 37 (CODE -> LOOP .)
    SAYW            reduce using rule 37 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 37 (CODE -> LOOP .)
    CC              reduce using rule 37 (CODE -> LOOP .)


state 99

    (14) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 14 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 100

    (19) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 19 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 101

    (24) VARL3 -> IDV EQUALS OB VARL4 CB .
    (25) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 24 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 121


state 102

    (97) CTEL -> IDV OB . INT CB

    INT             shift and go to state 122


state 103

    (99) CTEL -> OB CB .

    COMMA           reduce using rule 99 (CTEL -> OB CB .)
    CB              reduce using rule 99 (CTEL -> OB CB .)


state 104

    (98) CTEL -> OB CTEL2 . CB

    CB              shift and go to state 123


state 105

    (100) CTEL2 -> CTEL .
    (101) CTEL2 -> CTEL . COMMA CTEL2

    CB              reduce using rule 100 (CTEL2 -> CTEL .)
    COMMA           shift and go to state 124


state 106

    (29) VARL4 -> CTEL COMMA . VARL4
    (28) VARL4 -> . CTEL
    (29) VARL4 -> . CTEL COMMA VARL4
    (30) VARL4 -> .
    (93) CTEL -> . INT
    (94) CTEL -> . FLOAT
    (95) CTEL -> . STRING
    (96) CTEL -> . IDV
    (97) CTEL -> . IDV OB INT CB
    (98) CTEL -> . OB CTEL2 CB
    (99) CTEL -> . OB CB

    CB              reduce using rule 30 (VARL4 -> .)
    INT             shift and go to state 71
    FLOAT           shift and go to state 69
    STRING          shift and go to state 66
    IDV             shift and go to state 68
    OB              shift and go to state 70

    VARL4                          shift and go to state 125
    CTEL                           shift and go to state 72

state 107

    (9) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 9 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 108

    (72) METHODS3 -> PARAM COMMA . METHODS3
    (72) METHODS3 -> . PARAM COMMA METHODS3
    (73) METHODS3 -> . PARAM
    (74) METHODS3 -> .
    (57) PARAM -> . PARAM2 IDV
    (58) PARAM2 -> . VARISMALL
    (59) PARAM2 -> . VARSTSMALL
    (60) PARAM2 -> . VARFSMALL
    (61) PARAM2 -> . VARLSMALL

    CP              reduce using rule 74 (METHODS3 -> .)
    VARISMALL       shift and go to state 75
    VARSTSMALL      shift and go to state 76
    VARFSMALL       shift and go to state 78
    VARLSMALL       shift and go to state 74

    METHODS3                       shift and go to state 126
    PARAM                          shift and go to state 77
    PARAM2                         shift and go to state 79

state 109

    (57) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 57 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 57 (PARAM -> PARAM2 IDV .)


state 110

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP . OC BLOCKS2 CC
    (63) METHODS -> METHODS2 IDM OP METHODS3 CP . OC CC
    (64) METHODS -> METHODS2 IDM OP METHODS3 CP . OC BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 IDM OP METHODS3 CP . OC CC METHODS

    OC              shift and go to state 127


state 111

    (102) SAY -> SAYW OP . CONCAT CP PC
    (103) CONCAT -> . EXPRESSION DOT CONCAT
    (104) CONCAT -> . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 137
    CONCAT                         shift and go to state 139

state 112

    (34) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 34 (BLOCKS2 -> CODE BLOCKS2 .)


state 113

    (76) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    EXPRESSION                     shift and go to state 141
    TERM2                          shift and go to state 130

state 114

    (109) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC CC

    IDV             shift and go to state 142


state 115

    (106) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 143


state 116

    (117) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC CC
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 144

state 117

    (75) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 145


state 118

    (43) CONDITION -> IF OP . STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> IF OP . STM CP OC CC CONDITION2
    (45) CONDITION -> IF OP . STM CP OC BLOCKS2 CC
    (46) CONDITION -> IF OP . STM CP OC CC
    (49) STM -> . EXPRESSION STM2 EXPRESSION
    (50) STM -> . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    STM                            shift and go to state 147
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 146

state 119

    (31) BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .

    CC              reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    RECURSIVEBOX    reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 31 (BLOCKS -> MAINBOX OP CP OC BLOCKS2 CC .)


state 120

    (105) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 148


state 121

    (25) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (24) VARL3 -> . IDV EQUALS OB VARL4 CB
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (26) VARL3 -> . IDV COMMA VARL3
    (27) VARL3 -> . IDV

    IDV             shift and go to state 24

    VARL3                          shift and go to state 149

state 122

    (97) CTEL -> IDV OB INT . CB

    CB              shift and go to state 150


state 123

    (98) CTEL -> OB CTEL2 CB .

    COMMA           reduce using rule 98 (CTEL -> OB CTEL2 CB .)
    CB              reduce using rule 98 (CTEL -> OB CTEL2 CB .)


state 124

    (101) CTEL2 -> CTEL COMMA . CTEL2
    (100) CTEL2 -> . CTEL
    (101) CTEL2 -> . CTEL COMMA CTEL2
    (93) CTEL -> . INT
    (94) CTEL -> . FLOAT
    (95) CTEL -> . STRING
    (96) CTEL -> . IDV
    (97) CTEL -> . IDV OB INT CB
    (98) CTEL -> . OB CTEL2 CB
    (99) CTEL -> . OB CB

    INT             shift and go to state 71
    FLOAT           shift and go to state 69
    STRING          shift and go to state 66
    IDV             shift and go to state 68
    OB              shift and go to state 70

    CTEL2                          shift and go to state 151
    CTEL                           shift and go to state 105

state 125

    (29) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 29 (VARL4 -> CTEL COMMA VARL4 .)


state 126

    (72) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 72 (METHODS3 -> PARAM COMMA METHODS3 .)


state 127

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC . BLOCKS2 CC
    (63) METHODS -> METHODS2 IDM OP METHODS3 CP OC . CC
    (64) METHODS -> METHODS2 IDM OP METHODS3 CP OC . BLOCKS2 CC METHODS
    (65) METHODS -> METHODS2 IDM OP METHODS3 CP OC . CC METHODS
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 152
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 153
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98
    ASSIGNATION                    shift and go to state 89

state 128

    (77) EXPRESSION -> OPER .
    (78) EXPRESSION -> OPER . PLUS EXPRESSION
    (79) EXPRESSION -> OPER . MINUS EXPRESSION

    CP              reduce using rule 77 (EXPRESSION -> OPER .)
    DOT             reduce using rule 77 (EXPRESSION -> OPER .)
    COMMA           reduce using rule 77 (EXPRESSION -> OPER .)
    PC              reduce using rule 77 (EXPRESSION -> OPER .)
    GT              reduce using rule 77 (EXPRESSION -> OPER .)
    GTE             reduce using rule 77 (EXPRESSION -> OPER .)
    LT              reduce using rule 77 (EXPRESSION -> OPER .)
    LTE             reduce using rule 77 (EXPRESSION -> OPER .)
    DOUBLEEQUALS    reduce using rule 77 (EXPRESSION -> OPER .)
    LTGT            reduce using rule 77 (EXPRESSION -> OPER .)
    PLUS            shift and go to state 154
    MINUS           shift and go to state 155


state 129

    (80) OPER -> TERM .
    (81) OPER -> TERM . MULTIPLY OPER
    (82) OPER -> TERM . DIVISION OPER

    PLUS            reduce using rule 80 (OPER -> TERM .)
    MINUS           reduce using rule 80 (OPER -> TERM .)
    DOT             reduce using rule 80 (OPER -> TERM .)
    CP              reduce using rule 80 (OPER -> TERM .)
    PC              reduce using rule 80 (OPER -> TERM .)
    GT              reduce using rule 80 (OPER -> TERM .)
    GTE             reduce using rule 80 (OPER -> TERM .)
    LT              reduce using rule 80 (OPER -> TERM .)
    LTE             reduce using rule 80 (OPER -> TERM .)
    DOUBLEEQUALS    reduce using rule 80 (OPER -> TERM .)
    LTGT            reduce using rule 80 (OPER -> TERM .)
    COMMA           reduce using rule 80 (OPER -> TERM .)
    MULTIPLY        shift and go to state 156
    DIVISION        shift and go to state 157


state 130

    (84) TERM -> TERM2 .

    MULTIPLY        reduce using rule 84 (TERM -> TERM2 .)
    DIVISION        reduce using rule 84 (TERM -> TERM2 .)
    PLUS            reduce using rule 84 (TERM -> TERM2 .)
    MINUS           reduce using rule 84 (TERM -> TERM2 .)
    DOT             reduce using rule 84 (TERM -> TERM2 .)
    CP              reduce using rule 84 (TERM -> TERM2 .)
    PC              reduce using rule 84 (TERM -> TERM2 .)
    GT              reduce using rule 84 (TERM -> TERM2 .)
    GTE             reduce using rule 84 (TERM -> TERM2 .)
    LT              reduce using rule 84 (TERM -> TERM2 .)
    LTE             reduce using rule 84 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 84 (TERM -> TERM2 .)
    LTGT            reduce using rule 84 (TERM -> TERM2 .)
    COMMA           reduce using rule 84 (TERM -> TERM2 .)


state 131

    (88) CTE -> INT .

    MULTIPLY        reduce using rule 88 (CTE -> INT .)
    DIVISION        reduce using rule 88 (CTE -> INT .)
    PLUS            reduce using rule 88 (CTE -> INT .)
    MINUS           reduce using rule 88 (CTE -> INT .)
    DOT             reduce using rule 88 (CTE -> INT .)
    CP              reduce using rule 88 (CTE -> INT .)
    GT              reduce using rule 88 (CTE -> INT .)
    GTE             reduce using rule 88 (CTE -> INT .)
    LT              reduce using rule 88 (CTE -> INT .)
    LTE             reduce using rule 88 (CTE -> INT .)
    DOUBLEEQUALS    reduce using rule 88 (CTE -> INT .)
    LTGT            reduce using rule 88 (CTE -> INT .)
    PC              reduce using rule 88 (CTE -> INT .)
    COMMA           reduce using rule 88 (CTE -> INT .)


state 132

    (89) CTE -> FLOAT .

    MULTIPLY        reduce using rule 89 (CTE -> FLOAT .)
    DIVISION        reduce using rule 89 (CTE -> FLOAT .)
    PLUS            reduce using rule 89 (CTE -> FLOAT .)
    MINUS           reduce using rule 89 (CTE -> FLOAT .)
    DOT             reduce using rule 89 (CTE -> FLOAT .)
    CP              reduce using rule 89 (CTE -> FLOAT .)
    GT              reduce using rule 89 (CTE -> FLOAT .)
    GTE             reduce using rule 89 (CTE -> FLOAT .)
    LT              reduce using rule 89 (CTE -> FLOAT .)
    LTE             reduce using rule 89 (CTE -> FLOAT .)
    DOUBLEEQUALS    reduce using rule 89 (CTE -> FLOAT .)
    LTGT            reduce using rule 89 (CTE -> FLOAT .)
    PC              reduce using rule 89 (CTE -> FLOAT .)
    COMMA           reduce using rule 89 (CTE -> FLOAT .)


state 133

    (85) TERM2 -> CTE .

    MULTIPLY        reduce using rule 85 (TERM2 -> CTE .)
    DIVISION        reduce using rule 85 (TERM2 -> CTE .)
    PLUS            reduce using rule 85 (TERM2 -> CTE .)
    MINUS           reduce using rule 85 (TERM2 -> CTE .)
    DOT             reduce using rule 85 (TERM2 -> CTE .)
    CP              reduce using rule 85 (TERM2 -> CTE .)
    PC              reduce using rule 85 (TERM2 -> CTE .)
    GT              reduce using rule 85 (TERM2 -> CTE .)
    GTE             reduce using rule 85 (TERM2 -> CTE .)
    LT              reduce using rule 85 (TERM2 -> CTE .)
    LTE             reduce using rule 85 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 85 (TERM2 -> CTE .)
    LTGT            reduce using rule 85 (TERM2 -> CTE .)
    COMMA           reduce using rule 85 (TERM2 -> CTE .)


state 134

    (91) CTE -> IDV .
    (92) CTE -> IDV . OB INT CB

    MULTIPLY        reduce using rule 91 (CTE -> IDV .)
    DIVISION        reduce using rule 91 (CTE -> IDV .)
    PLUS            reduce using rule 91 (CTE -> IDV .)
    MINUS           reduce using rule 91 (CTE -> IDV .)
    DOT             reduce using rule 91 (CTE -> IDV .)
    CP              reduce using rule 91 (CTE -> IDV .)
    GT              reduce using rule 91 (CTE -> IDV .)
    GTE             reduce using rule 91 (CTE -> IDV .)
    LT              reduce using rule 91 (CTE -> IDV .)
    LTE             reduce using rule 91 (CTE -> IDV .)
    DOUBLEEQUALS    reduce using rule 91 (CTE -> IDV .)
    LTGT            reduce using rule 91 (CTE -> IDV .)
    PC              reduce using rule 91 (CTE -> IDV .)
    COMMA           reduce using rule 91 (CTE -> IDV .)
    OB              shift and go to state 158


state 135

    (86) TERM2 -> PLUS . CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    CTE                            shift and go to state 159

state 136

    (90) CTE -> STRING .

    MULTIPLY        reduce using rule 90 (CTE -> STRING .)
    DIVISION        reduce using rule 90 (CTE -> STRING .)
    PLUS            reduce using rule 90 (CTE -> STRING .)
    MINUS           reduce using rule 90 (CTE -> STRING .)
    DOT             reduce using rule 90 (CTE -> STRING .)
    CP              reduce using rule 90 (CTE -> STRING .)
    GT              reduce using rule 90 (CTE -> STRING .)
    GTE             reduce using rule 90 (CTE -> STRING .)
    LT              reduce using rule 90 (CTE -> STRING .)
    LTE             reduce using rule 90 (CTE -> STRING .)
    DOUBLEEQUALS    reduce using rule 90 (CTE -> STRING .)
    LTGT            reduce using rule 90 (CTE -> STRING .)
    PC              reduce using rule 90 (CTE -> STRING .)
    COMMA           reduce using rule 90 (CTE -> STRING .)


state 137

    (103) CONCAT -> EXPRESSION . DOT CONCAT
    (104) CONCAT -> EXPRESSION .

    DOT             shift and go to state 160
    CP              reduce using rule 104 (CONCAT -> EXPRESSION .)


state 138

    (87) TERM2 -> MINUS . CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    CTE                            shift and go to state 161

state 139

    (102) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 162


state 140

    (83) TERM -> OP . EXPRESSION CP
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    EXPRESSION                     shift and go to state 163
    TERM2                          shift and go to state 130

state 141

    (76) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 164


state 142

    (109) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC CC

    FROM            shift and go to state 165


state 143

    (106) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 166


state 144

    (117) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC BLOCKS2 CC
    (118) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC CC

    CP              shift and go to state 167


state 145

    (75) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 75 (RETURN -> RETURNW EQUALS PC .)


state 146

    (49) STM -> EXPRESSION . STM2 EXPRESSION
    (50) STM -> EXPRESSION .
    (51) STM2 -> . GT
    (52) STM2 -> . GTE
    (53) STM2 -> . LT
    (54) STM2 -> . LTE
    (55) STM2 -> . DOUBLEEQUALS
    (56) STM2 -> . LTGT

    CP              reduce using rule 50 (STM -> EXPRESSION .)
    GT              shift and go to state 168
    GTE             shift and go to state 169
    LT              shift and go to state 171
    LTE             shift and go to state 173
    DOUBLEEQUALS    shift and go to state 174
    LTGT            shift and go to state 172

    STM2                           shift and go to state 170

state 147

    (43) CONDITION -> IF OP STM . CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> IF OP STM . CP OC CC CONDITION2
    (45) CONDITION -> IF OP STM . CP OC BLOCKS2 CC
    (46) CONDITION -> IF OP STM . CP OC CC

    CP              shift and go to state 175


state 148

    (105) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 176


state 149

    (25) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 150

    (97) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 97 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 97 (CTEL -> IDV OB INT CB .)


state 151

    (101) CTEL2 -> CTEL COMMA CTEL2 .

    CB              reduce using rule 101 (CTEL2 -> CTEL COMMA CTEL2 .)


state 152

    (63) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .
    (65) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC . METHODS
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (64) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (66) METHODS2 -> . RECURSIVEBOX
    (67) METHODS2 -> . VOIDBOX
    (68) METHODS2 -> . VARIBOX
    (69) METHODS2 -> . VARFBOX
    (70) METHODS2 -> . VARSBOX
    (71) METHODS2 -> . VARLBOX

    CC              reduce using rule 63 (METHODS -> METHODS2 IDM OP METHODS3 CP OC CC .)
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS2                       shift and go to state 36
    METHODS                        shift and go to state 177

state 153

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 . CC
    (64) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 . CC METHODS

    CC              shift and go to state 178


state 154

    (78) EXPRESSION -> OPER PLUS . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    EXPRESSION                     shift and go to state 179
    TERM2                          shift and go to state 130

state 155

    (79) EXPRESSION -> OPER MINUS . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    EXPRESSION                     shift and go to state 180
    TERM2                          shift and go to state 130

state 156

    (81) OPER -> TERM MULTIPLY . OPER
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 181
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130

state 157

    (82) OPER -> TERM DIVISION . OPER
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 182
    CTE                            shift and go to state 133
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130

state 158

    (92) CTE -> IDV OB . INT CB

    INT             shift and go to state 183


state 159

    (86) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 86 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 86 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 86 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 86 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 86 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 86 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 86 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 86 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 86 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 86 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 86 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 86 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 86 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 86 (TERM2 -> PLUS CTE .)


state 160

    (103) CONCAT -> EXPRESSION DOT . CONCAT
    (103) CONCAT -> . EXPRESSION DOT CONCAT
    (104) CONCAT -> . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 137
    CONCAT                         shift and go to state 184

state 161

    (87) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 87 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 87 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 87 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 87 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 87 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 87 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 87 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 87 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 87 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 87 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 87 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 87 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 87 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 87 (TERM2 -> MINUS CTE .)


state 162

    (102) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 185


state 163

    (83) TERM -> OP EXPRESSION . CP

    CP              shift and go to state 186


state 164

    (76) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 76 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 165

    (109) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC CC
    (113) LOOP2 -> . INT
    (114) LOOP2 -> . FLOAT

    INT             shift and go to state 188
    FLOAT           shift and go to state 187

    LOOP2                          shift and go to state 189

state 166

    (106) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (107) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (108) PARAMETERS -> . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    PARAMETERS                     shift and go to state 190
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 191

state 167

    (117) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC BLOCKS2 CC
    (118) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC CC

    OC              shift and go to state 192


state 168

    (51) STM2 -> GT .

    OP              reduce using rule 51 (STM2 -> GT .)
    PLUS            reduce using rule 51 (STM2 -> GT .)
    MINUS           reduce using rule 51 (STM2 -> GT .)
    INT             reduce using rule 51 (STM2 -> GT .)
    FLOAT           reduce using rule 51 (STM2 -> GT .)
    STRING          reduce using rule 51 (STM2 -> GT .)
    IDV             reduce using rule 51 (STM2 -> GT .)


state 169

    (52) STM2 -> GTE .

    OP              reduce using rule 52 (STM2 -> GTE .)
    PLUS            reduce using rule 52 (STM2 -> GTE .)
    MINUS           reduce using rule 52 (STM2 -> GTE .)
    INT             reduce using rule 52 (STM2 -> GTE .)
    FLOAT           reduce using rule 52 (STM2 -> GTE .)
    STRING          reduce using rule 52 (STM2 -> GTE .)
    IDV             reduce using rule 52 (STM2 -> GTE .)


state 170

    (49) STM -> EXPRESSION STM2 . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 193

state 171

    (53) STM2 -> LT .

    OP              reduce using rule 53 (STM2 -> LT .)
    PLUS            reduce using rule 53 (STM2 -> LT .)
    MINUS           reduce using rule 53 (STM2 -> LT .)
    INT             reduce using rule 53 (STM2 -> LT .)
    FLOAT           reduce using rule 53 (STM2 -> LT .)
    STRING          reduce using rule 53 (STM2 -> LT .)
    IDV             reduce using rule 53 (STM2 -> LT .)


state 172

    (56) STM2 -> LTGT .

    OP              reduce using rule 56 (STM2 -> LTGT .)
    PLUS            reduce using rule 56 (STM2 -> LTGT .)
    MINUS           reduce using rule 56 (STM2 -> LTGT .)
    INT             reduce using rule 56 (STM2 -> LTGT .)
    FLOAT           reduce using rule 56 (STM2 -> LTGT .)
    STRING          reduce using rule 56 (STM2 -> LTGT .)
    IDV             reduce using rule 56 (STM2 -> LTGT .)


state 173

    (54) STM2 -> LTE .

    OP              reduce using rule 54 (STM2 -> LTE .)
    PLUS            reduce using rule 54 (STM2 -> LTE .)
    MINUS           reduce using rule 54 (STM2 -> LTE .)
    INT             reduce using rule 54 (STM2 -> LTE .)
    FLOAT           reduce using rule 54 (STM2 -> LTE .)
    STRING          reduce using rule 54 (STM2 -> LTE .)
    IDV             reduce using rule 54 (STM2 -> LTE .)


state 174

    (55) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 55 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 55 (STM2 -> DOUBLEEQUALS .)


state 175

    (43) CONDITION -> IF OP STM CP . OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> IF OP STM CP . OC CC CONDITION2
    (45) CONDITION -> IF OP STM CP . OC BLOCKS2 CC
    (46) CONDITION -> IF OP STM CP . OC CC

    OC              shift and go to state 194


state 176

    (105) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 195


state 177

    (65) METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS .

    CC              reduce using rule 65 (METHODS -> METHODS2 IDM OP METHODS3 CP OC CC METHODS .)


state 178

    (62) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .
    (64) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC . METHODS
    (62) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC
    (63) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC
    (64) METHODS -> . METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS
    (65) METHODS -> . METHODS2 IDM OP METHODS3 CP OC CC METHODS
    (66) METHODS2 -> . RECURSIVEBOX
    (67) METHODS2 -> . VOIDBOX
    (68) METHODS2 -> . VARIBOX
    (69) METHODS2 -> . VARFBOX
    (70) METHODS2 -> . VARSBOX
    (71) METHODS2 -> . VARLBOX

    CC              reduce using rule 62 (METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC .)
    RECURSIVEBOX    shift and go to state 28
    VOIDBOX         shift and go to state 35
    VARIBOX         shift and go to state 31
    VARFBOX         shift and go to state 33
    VARSBOX         shift and go to state 34
    VARLBOX         shift and go to state 32

    METHODS2                       shift and go to state 36
    METHODS                        shift and go to state 196

state 179

    (78) EXPRESSION -> OPER PLUS EXPRESSION .

    CP              reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOT             reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    COMMA           reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    PC              reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GT              reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    GTE             reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LT              reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTE             reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)
    LTGT            reduce using rule 78 (EXPRESSION -> OPER PLUS EXPRESSION .)


state 180

    (79) EXPRESSION -> OPER MINUS EXPRESSION .

    CP              reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOT             reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    COMMA           reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    PC              reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GT              reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    GTE             reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LT              reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTE             reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)
    LTGT            reduce using rule 79 (EXPRESSION -> OPER MINUS EXPRESSION .)


state 181

    (81) OPER -> TERM MULTIPLY OPER .

    PLUS            reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    MINUS           reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    DOT             reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    CP              reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    PC              reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    GT              reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    GTE             reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    LT              reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    LTE             reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    DOUBLEEQUALS    reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    LTGT            reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)
    COMMA           reduce using rule 81 (OPER -> TERM MULTIPLY OPER .)


state 182

    (82) OPER -> TERM DIVISION OPER .

    PLUS            reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    MINUS           reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    DOT             reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    CP              reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    PC              reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    GT              reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    GTE             reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    LT              reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    LTE             reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    DOUBLEEQUALS    reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    LTGT            reduce using rule 82 (OPER -> TERM DIVISION OPER .)
    COMMA           reduce using rule 82 (OPER -> TERM DIVISION OPER .)


state 183

    (92) CTE -> IDV OB INT . CB

    CB              shift and go to state 197


state 184

    (103) CONCAT -> EXPRESSION DOT CONCAT .

    CP              reduce using rule 103 (CONCAT -> EXPRESSION DOT CONCAT .)


state 185

    (102) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 102 (SAY -> SAYW OP CONCAT CP PC .)


state 186

    (83) TERM -> OP EXPRESSION CP .

    MULTIPLY        reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    DIVISION        reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    PLUS            reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    MINUS           reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    DOT             reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    CP              reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    PC              reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    GT              reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    GTE             reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    LT              reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    LTE             reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    LTGT            reduce using rule 83 (TERM -> OP EXPRESSION CP .)
    COMMA           reduce using rule 83 (TERM -> OP EXPRESSION CP .)


state 187

    (114) LOOP2 -> FLOAT .

    BY              reduce using rule 114 (LOOP2 -> FLOAT .)
    CP              reduce using rule 114 (LOOP2 -> FLOAT .)
    TO              reduce using rule 114 (LOOP2 -> FLOAT .)


state 188

    (113) LOOP2 -> INT .

    BY              reduce using rule 113 (LOOP2 -> INT .)
    CP              reduce using rule 113 (LOOP2 -> INT .)
    TO              reduce using rule 113 (LOOP2 -> INT .)


state 189

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC CC

    TO              shift and go to state 198


state 190

    (106) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 199


state 191

    (107) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (108) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 200
    CP              reduce using rule 108 (PARAMETERS -> EXPRESSION .)


state 192

    (117) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . BLOCKS2 CC
    (118) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 201
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 202
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 193

    (49) STM -> EXPRESSION STM2 EXPRESSION .

    CP              reduce using rule 49 (STM -> EXPRESSION STM2 EXPRESSION .)


state 194

    (43) CONDITION -> IF OP STM CP OC . BLOCKS2 CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC . CC CONDITION2
    (45) CONDITION -> IF OP STM CP OC . BLOCKS2 CC
    (46) CONDITION -> IF OP STM CP OC . CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 203
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 204
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 195

    (105) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 205


state 196

    (64) METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS .

    CC              reduce using rule 64 (METHODS -> METHODS2 IDM OP METHODS3 CP OC BLOCKS2 CC METHODS .)


state 197

    (92) CTE -> IDV OB INT CB .

    MULTIPLY        reduce using rule 92 (CTE -> IDV OB INT CB .)
    DIVISION        reduce using rule 92 (CTE -> IDV OB INT CB .)
    PLUS            reduce using rule 92 (CTE -> IDV OB INT CB .)
    MINUS           reduce using rule 92 (CTE -> IDV OB INT CB .)
    DOT             reduce using rule 92 (CTE -> IDV OB INT CB .)
    CP              reduce using rule 92 (CTE -> IDV OB INT CB .)
    GT              reduce using rule 92 (CTE -> IDV OB INT CB .)
    GTE             reduce using rule 92 (CTE -> IDV OB INT CB .)
    LT              reduce using rule 92 (CTE -> IDV OB INT CB .)
    LTE             reduce using rule 92 (CTE -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 92 (CTE -> IDV OB INT CB .)
    LTGT            reduce using rule 92 (CTE -> IDV OB INT CB .)
    PC              reduce using rule 92 (CTE -> IDV OB INT CB .)
    COMMA           reduce using rule 92 (CTE -> IDV OB INT CB .)


state 198

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC CC
    (113) LOOP2 -> . INT
    (114) LOOP2 -> . FLOAT

    INT             shift and go to state 188
    FLOAT           shift and go to state 187

    LOOP2                          shift and go to state 206

state 199

    (106) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 207


state 200

    (107) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (107) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (108) PARAMETERS -> . EXPRESSION
    (77) EXPRESSION -> . OPER
    (78) EXPRESSION -> . OPER PLUS EXPRESSION
    (79) EXPRESSION -> . OPER MINUS EXPRESSION
    (80) OPER -> . TERM
    (81) OPER -> . TERM MULTIPLY OPER
    (82) OPER -> . TERM DIVISION OPER
    (83) TERM -> . OP EXPRESSION CP
    (84) TERM -> . TERM2
    (85) TERM2 -> . CTE
    (86) TERM2 -> . PLUS CTE
    (87) TERM2 -> . MINUS CTE
    (88) CTE -> . INT
    (89) CTE -> . FLOAT
    (90) CTE -> . STRING
    (91) CTE -> . IDV
    (92) CTE -> . IDV OB INT CB

    OP              shift and go to state 140
    PLUS            shift and go to state 135
    MINUS           shift and go to state 138
    INT             shift and go to state 131
    FLOAT           shift and go to state 132
    STRING          shift and go to state 136
    IDV             shift and go to state 134

    OPER                           shift and go to state 128
    TERM                           shift and go to state 129
    TERM2                          shift and go to state 130
    PARAMETERS                     shift and go to state 208
    CTE                            shift and go to state 133
    EXPRESSION                     shift and go to state 191

state 201

    (118) LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .

    RETURNW         reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IDV             reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPW           reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPIFW         reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IF              reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    ASKUSER         reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    SAYW            reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CALLBOXW        reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CC              reduce using rule 118 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)


state 202

    (117) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 . CC

    CC              shift and go to state 209


state 203

    (44) CONDITION -> IF OP STM CP OC CC . CONDITION2
    (46) CONDITION -> IF OP STM CP OC CC .
    (47) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (48) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    IDV             reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    LOOPW           reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    LOOPIFW         reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    IF              reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    ASKUSER         reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    SAYW            reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    CALLBOXW        reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    CC              reduce using rule 46 (CONDITION -> IF OP STM CP OC CC .)
    ELSE            shift and go to state 210

    CONDITION2                     shift and go to state 211

state 204

    (43) CONDITION -> IF OP STM CP OC BLOCKS2 . CC CONDITION2
    (45) CONDITION -> IF OP STM CP OC BLOCKS2 . CC

    CC              shift and go to state 212


state 205

    (105) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 213


state 206

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC CC

    BY              shift and go to state 215
    CP              shift and go to state 214


state 207

    (106) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 106 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 208

    (107) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 107 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 209

    (117) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IDV             reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IF              reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CC              reduce using rule 117 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)


state 210

    (47) CONDITION2 -> ELSE . OC BLOCKS2 CC
    (48) CONDITION2 -> ELSE . OC CC

    OC              shift and go to state 216


state 211

    (44) CONDITION -> IF OP STM CP OC CC CONDITION2 .

    RETURNW         reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IDV             reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPW           reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    LOOPIFW         reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    IF              reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    ASKUSER         reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    SAYW            reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CALLBOXW        reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)
    CC              reduce using rule 44 (CONDITION -> IF OP STM CP OC CC CONDITION2 .)


state 212

    (43) CONDITION -> IF OP STM CP OC BLOCKS2 CC . CONDITION2
    (45) CONDITION -> IF OP STM CP OC BLOCKS2 CC .
    (47) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (48) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IDV             reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    IF              reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    CC              reduce using rule 45 (CONDITION -> IF OP STM CP OC BLOCKS2 CC .)
    ELSE            shift and go to state 210

    CONDITION2                     shift and go to state 217

state 213

    (105) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 105 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 214

    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC BLOCKS2 CC
    (112) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC CC

    OC              shift and go to state 218


state 215

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC CC
    (115) LOOP3 -> . PLUS
    (116) LOOP3 -> . MINUS

    PLUS            shift and go to state 220
    MINUS           shift and go to state 219

    LOOP3                          shift and go to state 221

state 216

    (47) CONDITION2 -> ELSE OC . BLOCKS2 CC
    (48) CONDITION2 -> ELSE OC . CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 222
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 223
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 217

    (43) CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 43 (CONDITION -> IF OP STM CP OC BLOCKS2 CC CONDITION2 .)


state 218

    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . BLOCKS2 CC
    (112) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 224
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 225
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    ASK                            shift and go to state 86
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 219

    (116) LOOP3 -> MINUS .

    INT             reduce using rule 116 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 116 (LOOP3 -> MINUS .)


state 220

    (115) LOOP3 -> PLUS .

    INT             reduce using rule 115 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 115 (LOOP3 -> PLUS .)


state 221

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC CC
    (113) LOOP2 -> . INT
    (114) LOOP2 -> . FLOAT

    INT             shift and go to state 188
    FLOAT           shift and go to state 187

    LOOP2                          shift and go to state 226

state 222

    (48) CONDITION2 -> ELSE OC CC .

    RETURNW         reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    IDV             reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    LOOPW           reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    LOOPIFW         reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    IF              reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    ASKUSER         reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    SAYW            reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    CALLBOXW        reduce using rule 48 (CONDITION2 -> ELSE OC CC .)
    CC              reduce using rule 48 (CONDITION2 -> ELSE OC CC .)


state 223

    (47) CONDITION2 -> ELSE OC BLOCKS2 . CC

    CC              shift and go to state 227


state 224

    (112) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .

    RETURNW         reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IDV             reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPW           reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IF              reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    SAYW            reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CC              reduce using rule 112 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)


state 225

    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 228


state 226

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC CC

    CP              shift and go to state 229


state 227

    (47) CONDITION2 -> ELSE OC BLOCKS2 CC .

    RETURNW         reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IDV             reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPW           reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IF              reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    SAYW            reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CC              reduce using rule 47 (CONDITION2 -> ELSE OC BLOCKS2 CC .)


state 228

    (110) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 110 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)


state 229

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC CC

    OC              shift and go to state 230


state 230

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . BLOCKS2 CC
    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . CC
    (33) BLOCKS2 -> . CODE
    (34) BLOCKS2 -> . CODE BLOCKS2
    (35) CODE -> . RETURN
    (36) CODE -> . ASSIGNATION
    (37) CODE -> . LOOP
    (38) CODE -> . LOOPIF
    (39) CODE -> . CONDITION
    (40) CODE -> . ASK
    (41) CODE -> . SAY
    (42) CODE -> . CALLBOX
    (75) RETURN -> . RETURNW EQUALS PC
    (76) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (109) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (110) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (111) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (112) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (117) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (118) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (43) CONDITION -> . IF OP STM CP OC BLOCKS2 CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC CC CONDITION2
    (45) CONDITION -> . IF OP STM CP OC BLOCKS2 CC
    (46) CONDITION -> . IF OP STM CP OC CC
    (105) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (102) SAY -> . SAYW OP CONCAT CP PC
    (106) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 231
    RETURNW         shift and go to state 92
    IDV             shift and go to state 84
    LOOPW           shift and go to state 87
    LOOPIFW         shift and go to state 91
    IF              shift and go to state 93
    ASKUSER         shift and go to state 97
    SAYW            shift and go to state 81
    CALLBOXW        shift and go to state 90

    CODE                           shift and go to state 82
    RETURN                         shift and go to state 83
    ASSIGNATION                    shift and go to state 89
    ASK                            shift and go to state 86
    SAY                            shift and go to state 85
    BLOCKS2                        shift and go to state 232
    CALLBOX                        shift and go to state 95
    LOOPIF                         shift and go to state 96
    CONDITION                      shift and go to state 88
    LOOP                           shift and go to state 98

state 231

    (111) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .

    RETURNW         reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IDV             reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPW           reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IF              reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    SAYW            reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CC              reduce using rule 111 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)


state 232

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 233


state 233

    (109) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 109 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)

