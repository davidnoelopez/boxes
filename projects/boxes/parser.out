Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
Rule 2     BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
Rule 3     before_vars -> <empty>
Rule 4     seen_globalvars -> <empty>
Rule 5     seen_methods -> <empty>
Rule 6     VARS -> VARI VARS
Rule 7     VARS -> VARF VARS
Rule 8     VARS -> VARST VARS
Rule 9     VARS -> <empty>
Rule 10    VARF -> VARFSMALL VARF3 PC
Rule 11    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 12    VARF3 -> IDV EQUALS FLOAT
Rule 13    VARF3 -> IDV VAR_ARRAY COMMA VARF3
Rule 14    VARF3 -> IDV VAR_ARRAY
Rule 15    VAR_ARRAY -> OB seen_ARRAY_LIMIT CB VAR_ARRAY
Rule 16    VAR_ARRAY -> <empty>
Rule 17    seen_ARRAY_LIMIT -> INT
Rule 18    VARI -> VARISMALL VARI3 PC
Rule 19    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 20    VARI3 -> IDV EQUALS INT
Rule 21    VARI3 -> IDV VAR_ARRAY COMMA VARI3
Rule 22    VARI3 -> IDV VAR_ARRAY
Rule 23    VARST -> VARSTSMALL VARST3 PC
Rule 24    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 25    VARST3 -> IDV EQUALS STRING
Rule 26    VARST3 -> IDV VAR_ARRAY COMMA VARST3
Rule 27    VARST3 -> IDV VAR_ARRAY
Rule 28    BLOCKS -> OC VARS BLOCKS2 CC
Rule 29    BLOCKS -> OC VARS CC
Rule 30    BLOCKS -> OC BLOCKS2 CC
Rule 31    BLOCKS -> OC CC
Rule 32    BLOCKS2 -> CODE
Rule 33    BLOCKS2 -> CODE BLOCKS2
Rule 34    CODE -> RETURN
Rule 35    CODE -> ASSIGNATION
Rule 36    CODE -> LOOP
Rule 37    CODE -> LOOPIF
Rule 38    CODE -> CONDITION
Rule 39    CODE -> ASK
Rule 40    CODE -> SAY
Rule 41    CODE -> CALLBOX
Rule 42    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
Rule 43    CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2
Rule 44    CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
Rule 45    CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF
Rule 46    seen_OC_IF -> <empty>
Rule 47    seen_CC_IF -> <empty>
Rule 48    CONDITION2 -> ELSE seen_ELSE OC CONDITION3
Rule 49    CONDITION3 -> BLOCKS2 CC seen_CC_ELSE
Rule 50    CONDITION3 -> CC seen_CC_ELSE
Rule 51    seen_ELSE -> <empty>
Rule 52    seen_CC_ELSE -> <empty>
Rule 53    STM -> EXPRESSION STM2 EXPRESSION seen_STM
Rule 54    STM -> EXPRESSION
Rule 55    STM2 -> GT
Rule 56    STM2 -> GTE
Rule 57    STM2 -> LT
Rule 58    STM2 -> LTE
Rule 59    STM2 -> DOUBLEEQUALS
Rule 60    STM2 -> LTGT
Rule 61    seen_STM -> <empty>
Rule 62    PARAM -> PARAM2 IDV
Rule 63    PARAM2 -> VARISMALL
Rule 64    PARAM2 -> VARSTSMALL
Rule 65    PARAM2 -> VARFSMALL
Rule 66    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
Rule 67    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
Rule 68    METHOD_UPDATE -> <empty>
Rule 69    seen_IDM -> IDM
Rule 70    METHODS2 -> RECURSIVEBOX
Rule 71    METHODS2 -> VOIDBOX
Rule 72    METHODS2 -> VARIBOX
Rule 73    METHODS2 -> VARFBOX
Rule 74    METHODS2 -> VARSBOX
Rule 75    METHODS3 -> PARAM COMMA METHODS3
Rule 76    METHODS3 -> PARAM
Rule 77    METHODS3 -> <empty>
Rule 78    RETURN -> RETURNW EXPRESSION PC
Rule 79    ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
Rule 80    ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC
Rule 81    seen_ID_ASSIGNATION -> IDV
Rule 82    EXPRESSION -> OPER seen_EXPF
Rule 83    EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION
Rule 84    seen_EXPF -> <empty>
Rule 85    seen_OPER -> PLUS
Rule 86    seen_OPER -> MINUS
Rule 87    seen_OPER -> OR
Rule 88    OPER -> TERM seen_TERMF
Rule 89    OPER -> TERM seen_TERMF seen_TERM OPER
Rule 90    seen_TERMF -> <empty>
Rule 91    seen_TERM -> MULTIPLY
Rule 92    seen_TERM -> DIVISION
Rule 93    seen_TERM -> AND
Rule 94    TERM -> OP seen_OP_TERM STM CP
Rule 95    TERM -> TERM2
Rule 96    seen_OP_TERM -> <empty>
Rule 97    TERM2 -> CTE
Rule 98    TERM2 -> PLUS CTE
Rule 99    TERM2 -> MINUS CTE
Rule 100   CTE -> INT seen_INT
Rule 101   CTE -> FLOAT seen_FLOAT
Rule 102   CTE -> STRING seen_STRING
Rule 103   CTE -> seen_ID
Rule 104   CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
Rule 105   seen_INT -> <empty>
Rule 106   seen_FLOAT -> <empty>
Rule 107   seen_STRING -> <empty>
Rule 108   seen_ID -> IDV
Rule 109   seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
Rule 110   seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB
Rule 111   start_ARRAY -> <empty>
Rule 112   end_ARRAY -> <empty>
Rule 113   seen_EXPRESSION_ARRAY -> <empty>
Rule 114   SAY -> SAYW OP CONCAT CP PC
Rule 115   CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT
Rule 116   CONCAT -> EXPRESSION seen_EXP_SAY
Rule 117   seen_EXP_SAY -> <empty>
Rule 118   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 119   CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
Rule 120   CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC
Rule 121   SEEN_IDM_CALL -> IDM
Rule 122   SEEN_CALL -> <empty>
Rule 123   PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS
Rule 124   PARAMETERS -> SEEN_EXPRESSION_PARAM
Rule 125   SEEN_EXPRESSION_PARAM -> EXPRESSION
Rule 126   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
Rule 127   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
Rule 128   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
Rule 129   LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
Rule 130   seen_CP_LOOP1 -> <empty>
Rule 131   seen_CP_LOOP2 -> <empty>
Rule 132   seen_VAR_LOOP -> IDV
Rule 133   LOOP2 -> seen_INT_LOOP
Rule 134   LOOP2 -> seen_FLOAT_LOOP
Rule 135   seen_INT_LOOP -> INT
Rule 136   seen_FLOAT_LOOP -> FLOAT
Rule 137   LOOP3 -> PLUS
Rule 138   LOOP3 -> MINUS
Rule 139   LOOP3 -> <empty>
Rule 140   seen_LOOP -> <empty>
Rule 141   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
Rule 142   LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
Rule 143   seen_LOOPIF -> <empty>
Rule 144   seen_CP_LOOPIF -> <empty>

Terminals, with rules where they appear

AND                  : 93
ASKUSER              : 118
BOX                  : 1 2
BY                   : 126 128
CALLBOXW             : 119 120
CB                   : 15 109 110
CC                   : 1 2 28 29 30 31 42 43 44 45 49 50 126 127 128 129 141 142
COMMA                : 11 13 19 21 24 26 75 118 119 123
CP                   : 1 2 42 43 44 45 66 67 94 114 118 119 120 126 127 128 129 141 142
DIVISION             : 92
DOT                  : 115
DOUBLEEQUALS         : 59
ELSE                 : 48
EQUALS               : 11 12 19 20 24 25 79 80
FLOAT                : 11 12 101 136
FROM                 : 126 127 128 129
GT                   : 55
GTE                  : 56
IDM                  : 69 121
IDV                  : 11 12 13 14 19 20 21 22 24 25 26 27 62 81 108 118 132
IF                   : 42 43 44 45
INT                  : 17 19 20 100 135
LOOPIFW              : 141 142
LOOPW                : 126 127 128 129
LT                   : 57
LTE                  : 58
LTGT                 : 60
MAINBOX              : 1 2
MINUS                : 86 99 138
MULTIPLY             : 91
OB                   : 15 109 110
OC                   : 1 2 28 29 30 31 42 43 44 45 48 126 127 128 129 141 142
OP                   : 1 2 42 43 44 45 66 67 94 114 118 119 120 126 127 128 129 141 142
OR                   : 87
PC                   : 10 18 23 78 79 80 114 118 119 120
PLUS                 : 85 98 137
RECURSIVEBOX         : 70
RETURNW              : 78
SAYW                 : 114
STRING               : 24 25 102 118
TO                   : 126 127 128 129
VARFBOX              : 73
VARFSMALL            : 10 65
VARIBOX              : 72
VARISMALL            : 18 63
VARSBOX              : 74
VARSTSMALL           : 23 64
VOIDBOX              : 71
error                : 

Nonterminals, with rules where they appear

ASK                  : 39
ASSIGNATION          : 35
BLOCKS               : 1 2 66 67
BLOCKS2              : 28 30 33 42 44 49 126 127 141
BOXES                : 0
CALLBOX              : 41
CODE                 : 32 33
CONCAT               : 114 115
CONDITION            : 38
CONDITION2           : 42 43
CONDITION3           : 48
CTE                  : 97 98 99
EXPRESSION           : 53 53 54 78 79 80 83 109 110 115 116 125
LOOP                 : 36
LOOP2                : 126 126 126 127 127 128 128 128 129 129
LOOP3                : 126 128
LOOPIF               : 37
METHODS              : 1 67
METHODS2             : 66 67
METHODS3             : 66 67 75
METHOD_UPDATE        : 66 67
OPER                 : 82 83 89
PARAM                : 75 76
PARAM2               : 62
PARAMETERS           : 119 123
RETURN               : 34
SAY                  : 40
SEEN_CALL            : 119
SEEN_EXPRESSION_PARAM : 123 124
SEEN_IDM_CALL        : 119 120
STM                  : 42 43 44 45 94 141 142
STM2                 : 53
TERM                 : 88 89
TERM2                : 95
VARF                 : 7
VARF3                : 10 11 13
VARI                 : 6
VARI3                : 18 19 21
VARS                 : 1 2 6 7 8 28 29
VARST                : 8
VARST3               : 23 24 26
VAR_ARRAY            : 13 14 15 21 22 26 27
before_vars          : 1 2
end_ARRAY            : 79 104
seen_ARRAY_CTE       : 79 104 109
seen_ARRAY_LIMIT     : 15
seen_CC_ELSE         : 49 50
seen_CC_IF           : 44 45
seen_CP_LOOP1        : 126 128
seen_CP_LOOP2        : 127 129
seen_CP_LOOPIF       : 141 142
seen_ELSE            : 48
seen_EXPF            : 82 83
seen_EXPRESSION_ARRAY : 109 110
seen_EXP_SAY         : 115 116
seen_FLOAT           : 101
seen_FLOAT_LOOP      : 134
seen_ID              : 103 104
seen_IDM             : 66 67
seen_ID_ASSIGNATION  : 79 80
seen_INT             : 100
seen_INT_LOOP        : 133
seen_LOOP            : 126 127 128 129
seen_LOOPIF          : 141 142
seen_OC_IF           : 42 43 44 45
seen_OPER            : 83
seen_OP_TERM         : 94
seen_STM             : 53
seen_STRING          : 102
seen_TERM            : 89
seen_TERMF           : 88 89
seen_VAR_LOOP        : 126 127 128 129
seen_globalvars      : 1 2
seen_methods         : 1 2
start_ARRAY          : 79 104

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> . BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX . OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC . before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (3) before_vars -> .

    VARISMALL       reduce using rule 3 (before_vars -> .)
    VARFSMALL       reduce using rule 3 (before_vars -> .)
    VARSTSMALL      reduce using rule 3 (before_vars -> .)
    RECURSIVEBOX    reduce using rule 3 (before_vars -> .)
    VOIDBOX         reduce using rule 3 (before_vars -> .)
    VARIBOX         reduce using rule 3 (before_vars -> .)
    VARFBOX         reduce using rule 3 (before_vars -> .)
    VARSBOX         reduce using rule 3 (before_vars -> .)
    MAINBOX         reduce using rule 3 (before_vars -> .)

    before_vars                    shift and go to state 4

state 4

    (1) BOXES -> BOX OC before_vars . VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars . VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> .
    (18) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (23) VARST -> . VARSTSMALL VARST3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 10
    VARFSMALL       shift and go to state 11
    VARSTSMALL      shift and go to state 8

    VARS                           shift and go to state 5
    VARF                           shift and go to state 6
    VARST                          shift and go to state 9
    VARI                           shift and go to state 7

state 5

    (1) BOXES -> BOX OC before_vars VARS . seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars VARS . seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC
    (4) seen_globalvars -> .

    RECURSIVEBOX    reduce using rule 4 (seen_globalvars -> .)
    VOIDBOX         reduce using rule 4 (seen_globalvars -> .)
    VARIBOX         reduce using rule 4 (seen_globalvars -> .)
    VARFBOX         reduce using rule 4 (seen_globalvars -> .)
    VARSBOX         reduce using rule 4 (seen_globalvars -> .)
    MAINBOX         reduce using rule 4 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 12

state 6

    (7) VARS -> VARF . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> .
    (18) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (23) VARST -> . VARSTSMALL VARST3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 10
    VARFSMALL       shift and go to state 11
    VARSTSMALL      shift and go to state 8

    VARS                           shift and go to state 13
    VARF                           shift and go to state 6
    VARST                          shift and go to state 9
    VARI                           shift and go to state 7

state 7

    (6) VARS -> VARI . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> .
    (18) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (23) VARST -> . VARSTSMALL VARST3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 10
    VARFSMALL       shift and go to state 11
    VARSTSMALL      shift and go to state 8

    VARS                           shift and go to state 14
    VARF                           shift and go to state 6
    VARST                          shift and go to state 9
    VARI                           shift and go to state 7

state 8

    (23) VARST -> VARSTSMALL . VARST3 PC
    (24) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (25) VARST3 -> . IDV EQUALS STRING
    (26) VARST3 -> . IDV VAR_ARRAY COMMA VARST3
    (27) VARST3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 16

    VARST3                         shift and go to state 15

state 9

    (8) VARS -> VARST . VARS
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> .
    (18) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (23) VARST -> . VARSTSMALL VARST3 PC

    RECURSIVEBOX    reduce using rule 9 (VARS -> .)
    VOIDBOX         reduce using rule 9 (VARS -> .)
    VARIBOX         reduce using rule 9 (VARS -> .)
    VARFBOX         reduce using rule 9 (VARS -> .)
    VARSBOX         reduce using rule 9 (VARS -> .)
    MAINBOX         reduce using rule 9 (VARS -> .)
    CC              reduce using rule 9 (VARS -> .)
    RETURNW         reduce using rule 9 (VARS -> .)
    LOOPW           reduce using rule 9 (VARS -> .)
    LOOPIFW         reduce using rule 9 (VARS -> .)
    IF              reduce using rule 9 (VARS -> .)
    ASKUSER         reduce using rule 9 (VARS -> .)
    SAYW            reduce using rule 9 (VARS -> .)
    CALLBOXW        reduce using rule 9 (VARS -> .)
    IDV             reduce using rule 9 (VARS -> .)
    VARISMALL       shift and go to state 10
    VARFSMALL       shift and go to state 11
    VARSTSMALL      shift and go to state 8

    VARS                           shift and go to state 17
    VARF                           shift and go to state 6
    VARST                          shift and go to state 9
    VARI                           shift and go to state 7

state 10

    (18) VARI -> VARISMALL . VARI3 PC
    (19) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (20) VARI3 -> . IDV EQUALS INT
    (21) VARI3 -> . IDV VAR_ARRAY COMMA VARI3
    (22) VARI3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 18

    VARI3                          shift and go to state 19

state 11

    (10) VARF -> VARFSMALL . VARF3 PC
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV VAR_ARRAY COMMA VARF3
    (14) VARF3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 20

    VARF3                          shift and go to state 21

state 12

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars . METHODS seen_methods MAINBOX OP CP BLOCKS CC
    (2) BOXES -> BOX OC before_vars VARS seen_globalvars . seen_methods MAINBOX OP CP BLOCKS CC
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (67) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (5) seen_methods -> .
    (70) METHODS2 -> . RECURSIVEBOX
    (71) METHODS2 -> . VOIDBOX
    (72) METHODS2 -> . VARIBOX
    (73) METHODS2 -> . VARFBOX
    (74) METHODS2 -> . VARSBOX

    MAINBOX         reduce using rule 5 (seen_methods -> .)
    RECURSIVEBOX    shift and go to state 22
    VOIDBOX         shift and go to state 28
    VARIBOX         shift and go to state 27
    VARFBOX         shift and go to state 25
    VARSBOX         shift and go to state 26

    seen_methods                   shift and go to state 24
    METHODS2                       shift and go to state 29
    METHODS                        shift and go to state 23

state 13

    (7) VARS -> VARF VARS .

    RECURSIVEBOX    reduce using rule 7 (VARS -> VARF VARS .)
    VOIDBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARIBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARFBOX         reduce using rule 7 (VARS -> VARF VARS .)
    VARSBOX         reduce using rule 7 (VARS -> VARF VARS .)
    MAINBOX         reduce using rule 7 (VARS -> VARF VARS .)
    CC              reduce using rule 7 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARF VARS .)
    IF              reduce using rule 7 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARF VARS .)
    SAYW            reduce using rule 7 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARF VARS .)
    IDV             reduce using rule 7 (VARS -> VARF VARS .)


state 14

    (6) VARS -> VARI VARS .

    RECURSIVEBOX    reduce using rule 6 (VARS -> VARI VARS .)
    VOIDBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARIBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARFBOX         reduce using rule 6 (VARS -> VARI VARS .)
    VARSBOX         reduce using rule 6 (VARS -> VARI VARS .)
    MAINBOX         reduce using rule 6 (VARS -> VARI VARS .)
    CC              reduce using rule 6 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARI VARS .)
    IF              reduce using rule 6 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARI VARS .)
    SAYW            reduce using rule 6 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARI VARS .)
    IDV             reduce using rule 6 (VARS -> VARI VARS .)


state 15

    (23) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 30


state 16

    (24) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (25) VARST3 -> IDV . EQUALS STRING
    (26) VARST3 -> IDV . VAR_ARRAY COMMA VARST3
    (27) VARST3 -> IDV . VAR_ARRAY
    (15) VAR_ARRAY -> . OB seen_ARRAY_LIMIT CB VAR_ARRAY
    (16) VAR_ARRAY -> .

    EQUALS          shift and go to state 31
    OB              shift and go to state 32
    COMMA           reduce using rule 16 (VAR_ARRAY -> .)
    PC              reduce using rule 16 (VAR_ARRAY -> .)

    VAR_ARRAY                      shift and go to state 33

state 17

    (8) VARS -> VARST VARS .

    RECURSIVEBOX    reduce using rule 8 (VARS -> VARST VARS .)
    VOIDBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARIBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARFBOX         reduce using rule 8 (VARS -> VARST VARS .)
    VARSBOX         reduce using rule 8 (VARS -> VARST VARS .)
    MAINBOX         reduce using rule 8 (VARS -> VARST VARS .)
    CC              reduce using rule 8 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 8 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 8 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 8 (VARS -> VARST VARS .)
    IF              reduce using rule 8 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 8 (VARS -> VARST VARS .)
    SAYW            reduce using rule 8 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 8 (VARS -> VARST VARS .)
    IDV             reduce using rule 8 (VARS -> VARST VARS .)


state 18

    (19) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (20) VARI3 -> IDV . EQUALS INT
    (21) VARI3 -> IDV . VAR_ARRAY COMMA VARI3
    (22) VARI3 -> IDV . VAR_ARRAY
    (15) VAR_ARRAY -> . OB seen_ARRAY_LIMIT CB VAR_ARRAY
    (16) VAR_ARRAY -> .

    EQUALS          shift and go to state 34
    OB              shift and go to state 32
    COMMA           reduce using rule 16 (VAR_ARRAY -> .)
    PC              reduce using rule 16 (VAR_ARRAY -> .)

    VAR_ARRAY                      shift and go to state 35

state 19

    (18) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 36


state 20

    (11) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> IDV . EQUALS FLOAT
    (13) VARF3 -> IDV . VAR_ARRAY COMMA VARF3
    (14) VARF3 -> IDV . VAR_ARRAY
    (15) VAR_ARRAY -> . OB seen_ARRAY_LIMIT CB VAR_ARRAY
    (16) VAR_ARRAY -> .

    EQUALS          shift and go to state 37
    OB              shift and go to state 32
    COMMA           reduce using rule 16 (VAR_ARRAY -> .)
    PC              reduce using rule 16 (VAR_ARRAY -> .)

    VAR_ARRAY                      shift and go to state 38

state 21

    (10) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 39


state 22

    (70) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 70 (METHODS2 -> RECURSIVEBOX .)


state 23

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS . seen_methods MAINBOX OP CP BLOCKS CC
    (5) seen_methods -> .

    MAINBOX         reduce using rule 5 (seen_methods -> .)

    seen_methods                   shift and go to state 40

state 24

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 41


state 25

    (73) METHODS2 -> VARFBOX .

    IDM             reduce using rule 73 (METHODS2 -> VARFBOX .)


state 26

    (74) METHODS2 -> VARSBOX .

    IDM             reduce using rule 74 (METHODS2 -> VARSBOX .)


state 27

    (72) METHODS2 -> VARIBOX .

    IDM             reduce using rule 72 (METHODS2 -> VARIBOX .)


state 28

    (71) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 71 (METHODS2 -> VOIDBOX .)


state 29

    (66) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (67) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (69) seen_IDM -> . IDM

    IDM             shift and go to state 43

    seen_IDM                       shift and go to state 42

state 30

    (23) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    RECURSIVEBOX    reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VOIDBOX         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VARIBOX         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VARFBOX         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    VARSBOX         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 23 (VARST -> VARSTSMALL VARST3 PC .)


state 31

    (24) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (25) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 44


state 32

    (15) VAR_ARRAY -> OB . seen_ARRAY_LIMIT CB VAR_ARRAY
    (17) seen_ARRAY_LIMIT -> . INT

    INT             shift and go to state 45

    seen_ARRAY_LIMIT               shift and go to state 46

state 33

    (26) VARST3 -> IDV VAR_ARRAY . COMMA VARST3
    (27) VARST3 -> IDV VAR_ARRAY .

    COMMA           shift and go to state 47
    PC              reduce using rule 27 (VARST3 -> IDV VAR_ARRAY .)


state 34

    (19) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (20) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 48


state 35

    (21) VARI3 -> IDV VAR_ARRAY . COMMA VARI3
    (22) VARI3 -> IDV VAR_ARRAY .

    COMMA           shift and go to state 49
    PC              reduce using rule 22 (VARI3 -> IDV VAR_ARRAY .)


state 36

    (18) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    RECURSIVEBOX    reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VOIDBOX         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VARIBOX         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VARFBOX         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    VARSBOX         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 18 (VARI -> VARISMALL VARI3 PC .)


state 37

    (11) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (12) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 50


state 38

    (13) VARF3 -> IDV VAR_ARRAY . COMMA VARF3
    (14) VARF3 -> IDV VAR_ARRAY .

    COMMA           shift and go to state 51
    PC              reduce using rule 14 (VARF3 -> IDV VAR_ARRAY .)


state 39

    (10) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    RECURSIVEBOX    reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VOIDBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARIBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARFBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    VARSBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 10 (VARF -> VARFSMALL VARF3 PC .)


state 40

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 52


state 41

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 53


state 42

    (66) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHOD_UPDATE
    (67) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS

    OP              shift and go to state 54


state 43

    (69) seen_IDM -> IDM .

    OP              reduce using rule 69 (seen_IDM -> IDM .)


state 44

    (24) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (25) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 55
    PC              reduce using rule 25 (VARST3 -> IDV EQUALS STRING .)


state 45

    (17) seen_ARRAY_LIMIT -> INT .

    CB              reduce using rule 17 (seen_ARRAY_LIMIT -> INT .)


state 46

    (15) VAR_ARRAY -> OB seen_ARRAY_LIMIT . CB VAR_ARRAY

    CB              shift and go to state 56


state 47

    (26) VARST3 -> IDV VAR_ARRAY COMMA . VARST3
    (24) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (25) VARST3 -> . IDV EQUALS STRING
    (26) VARST3 -> . IDV VAR_ARRAY COMMA VARST3
    (27) VARST3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 16

    VARST3                         shift and go to state 57

state 48

    (19) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (20) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 58
    PC              reduce using rule 20 (VARI3 -> IDV EQUALS INT .)


state 49

    (21) VARI3 -> IDV VAR_ARRAY COMMA . VARI3
    (19) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (20) VARI3 -> . IDV EQUALS INT
    (21) VARI3 -> . IDV VAR_ARRAY COMMA VARI3
    (22) VARI3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 18

    VARI3                          shift and go to state 59

state 50

    (11) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (12) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 60
    PC              reduce using rule 12 (VARF3 -> IDV EQUALS FLOAT .)


state 51

    (13) VARF3 -> IDV VAR_ARRAY COMMA . VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV VAR_ARRAY COMMA VARF3
    (14) VARF3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 20

    VARF3                          shift and go to state 61

state 52

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 62


state 53

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 63


state 54

    (66) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHOD_UPDATE
    (67) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (75) METHODS3 -> . PARAM COMMA METHODS3
    (76) METHODS3 -> . PARAM
    (77) METHODS3 -> .
    (62) PARAM -> . PARAM2 IDV
    (63) PARAM2 -> . VARISMALL
    (64) PARAM2 -> . VARSTSMALL
    (65) PARAM2 -> . VARFSMALL

    CP              reduce using rule 77 (METHODS3 -> .)
    VARISMALL       shift and go to state 64
    VARSTSMALL      shift and go to state 65
    VARFSMALL       shift and go to state 67

    PARAM                          shift and go to state 66
    PARAM2                         shift and go to state 68
    METHODS3                       shift and go to state 69

state 55

    (24) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (24) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (25) VARST3 -> . IDV EQUALS STRING
    (26) VARST3 -> . IDV VAR_ARRAY COMMA VARST3
    (27) VARST3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 16

    VARST3                         shift and go to state 70

state 56

    (15) VAR_ARRAY -> OB seen_ARRAY_LIMIT CB . VAR_ARRAY
    (15) VAR_ARRAY -> . OB seen_ARRAY_LIMIT CB VAR_ARRAY
    (16) VAR_ARRAY -> .

    OB              shift and go to state 32
    COMMA           reduce using rule 16 (VAR_ARRAY -> .)
    PC              reduce using rule 16 (VAR_ARRAY -> .)

    VAR_ARRAY                      shift and go to state 71

state 57

    (26) VARST3 -> IDV VAR_ARRAY COMMA VARST3 .

    PC              reduce using rule 26 (VARST3 -> IDV VAR_ARRAY COMMA VARST3 .)


state 58

    (19) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (19) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (20) VARI3 -> . IDV EQUALS INT
    (21) VARI3 -> . IDV VAR_ARRAY COMMA VARI3
    (22) VARI3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 18

    VARI3                          shift and go to state 72

state 59

    (21) VARI3 -> IDV VAR_ARRAY COMMA VARI3 .

    PC              reduce using rule 21 (VARI3 -> IDV VAR_ARRAY COMMA VARI3 .)


state 60

    (11) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (12) VARF3 -> . IDV EQUALS FLOAT
    (13) VARF3 -> . IDV VAR_ARRAY COMMA VARF3
    (14) VARF3 -> . IDV VAR_ARRAY

    IDV             shift and go to state 20

    VARF3                          shift and go to state 73

state 61

    (13) VARF3 -> IDV VAR_ARRAY COMMA VARF3 .

    PC              reduce using rule 13 (VARF3 -> IDV VAR_ARRAY COMMA VARF3 .)


state 62

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 74


state 63

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP . BLOCKS CC
    (28) BLOCKS -> . OC VARS BLOCKS2 CC
    (29) BLOCKS -> . OC VARS CC
    (30) BLOCKS -> . OC BLOCKS2 CC
    (31) BLOCKS -> . OC CC

    OC              shift and go to state 76

    BLOCKS                         shift and go to state 75

state 64

    (63) PARAM2 -> VARISMALL .

    IDV             reduce using rule 63 (PARAM2 -> VARISMALL .)


state 65

    (64) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 64 (PARAM2 -> VARSTSMALL .)


state 66

    (75) METHODS3 -> PARAM . COMMA METHODS3
    (76) METHODS3 -> PARAM .

    COMMA           shift and go to state 77
    CP              reduce using rule 76 (METHODS3 -> PARAM .)


state 67

    (65) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 65 (PARAM2 -> VARFSMALL .)


state 68

    (62) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 78


state 69

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHOD_UPDATE
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHOD_UPDATE METHODS

    CP              shift and go to state 79


state 70

    (24) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 24 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 71

    (15) VAR_ARRAY -> OB seen_ARRAY_LIMIT CB VAR_ARRAY .

    COMMA           reduce using rule 15 (VAR_ARRAY -> OB seen_ARRAY_LIMIT CB VAR_ARRAY .)
    PC              reduce using rule 15 (VAR_ARRAY -> OB seen_ARRAY_LIMIT CB VAR_ARRAY .)


state 72

    (19) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 19 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 73

    (11) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 74

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP . BLOCKS CC
    (28) BLOCKS -> . OC VARS BLOCKS2 CC
    (29) BLOCKS -> . OC VARS CC
    (30) BLOCKS -> . OC BLOCKS2 CC
    (31) BLOCKS -> . OC CC

    OC              shift and go to state 76

    BLOCKS                         shift and go to state 80

state 75

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 81


state 76

    (28) BLOCKS -> OC . VARS BLOCKS2 CC
    (29) BLOCKS -> OC . VARS CC
    (30) BLOCKS -> OC . BLOCKS2 CC
    (31) BLOCKS -> OC . CC
    (6) VARS -> . VARI VARS
    (7) VARS -> . VARF VARS
    (8) VARS -> . VARST VARS
    (9) VARS -> .
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (18) VARI -> . VARISMALL VARI3 PC
    (10) VARF -> . VARFSMALL VARF3 PC
    (23) VARST -> . VARSTSMALL VARST3 PC
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
    CC              shift and go to state 93
    VARISMALL       shift and go to state 10
    VARFSMALL       shift and go to state 11
    VARSTSMALL      shift and go to state 8
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

  ! CC              [ reduce using rule 9 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 9 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 9 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 9 (VARS -> .) ]
  ! IF              [ reduce using rule 9 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 9 (VARS -> .) ]
  ! SAYW            [ reduce using rule 9 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 9 (VARS -> .) ]
  ! IDV             [ reduce using rule 9 (VARS -> .) ]

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    VARS                           shift and go to state 85
    VARF                           shift and go to state 6
    seen_ID_ASSIGNATION            shift and go to state 87
    VARI                           shift and go to state 7
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    VARST                          shift and go to state 9
    BLOCKS2                        shift and go to state 99
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 77

    (75) METHODS3 -> PARAM COMMA . METHODS3
    (75) METHODS3 -> . PARAM COMMA METHODS3
    (76) METHODS3 -> . PARAM
    (77) METHODS3 -> .
    (62) PARAM -> . PARAM2 IDV
    (63) PARAM2 -> . VARISMALL
    (64) PARAM2 -> . VARSTSMALL
    (65) PARAM2 -> . VARFSMALL

    CP              reduce using rule 77 (METHODS3 -> .)
    VARISMALL       shift and go to state 64
    VARSTSMALL      shift and go to state 65
    VARFSMALL       shift and go to state 67

    METHODS3                       shift and go to state 103
    PARAM                          shift and go to state 66
    PARAM2                         shift and go to state 68

state 78

    (62) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 62 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 62 (PARAM -> PARAM2 IDV .)


state 79

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHOD_UPDATE
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHOD_UPDATE METHODS
    (28) BLOCKS -> . OC VARS BLOCKS2 CC
    (29) BLOCKS -> . OC VARS CC
    (30) BLOCKS -> . OC BLOCKS2 CC
    (31) BLOCKS -> . OC CC

    OC              shift and go to state 76

    BLOCKS                         shift and go to state 104

state 80

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS . CC

    CC              shift and go to state 105


state 81

    (2) BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC before_vars VARS seen_globalvars seen_methods MAINBOX OP CP BLOCKS CC .)


state 82

    (114) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 106


state 83

    (32) BLOCKS2 -> CODE .
    (33) BLOCKS2 -> CODE . BLOCKS2
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              reduce using rule 32 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 107
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 84

    (34) CODE -> RETURN .

    RETURNW         reduce using rule 34 (CODE -> RETURN .)
    LOOPW           reduce using rule 34 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 34 (CODE -> RETURN .)
    IF              reduce using rule 34 (CODE -> RETURN .)
    ASKUSER         reduce using rule 34 (CODE -> RETURN .)
    SAYW            reduce using rule 34 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 34 (CODE -> RETURN .)
    IDV             reduce using rule 34 (CODE -> RETURN .)
    CC              reduce using rule 34 (CODE -> RETURN .)


state 85

    (28) BLOCKS -> OC VARS . BLOCKS2 CC
    (29) BLOCKS -> OC VARS . CC
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 108
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 109
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 86

    (81) seen_ID_ASSIGNATION -> IDV .

    EQUALS          reduce using rule 81 (seen_ID_ASSIGNATION -> IDV .)
    OB              reduce using rule 81 (seen_ID_ASSIGNATION -> IDV .)


state 87

    (79) ASSIGNATION -> seen_ID_ASSIGNATION . start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> seen_ID_ASSIGNATION . EQUALS EXPRESSION PC
    (111) start_ARRAY -> .

    EQUALS          shift and go to state 110
    OB              reduce using rule 111 (start_ARRAY -> .)

    start_ARRAY                    shift and go to state 111

state 88

    (119) CALLBOX -> CALLBOXW . OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> CALLBOXW . OP SEEN_IDM_CALL CP PC

    OP              shift and go to state 112


state 89

    (40) CODE -> SAY .

    RETURNW         reduce using rule 40 (CODE -> SAY .)
    LOOPW           reduce using rule 40 (CODE -> SAY .)
    LOOPIFW         reduce using rule 40 (CODE -> SAY .)
    IF              reduce using rule 40 (CODE -> SAY .)
    ASKUSER         reduce using rule 40 (CODE -> SAY .)
    SAYW            reduce using rule 40 (CODE -> SAY .)
    CALLBOXW        reduce using rule 40 (CODE -> SAY .)
    IDV             reduce using rule 40 (CODE -> SAY .)
    CC              reduce using rule 40 (CODE -> SAY .)


state 90

    (39) CODE -> ASK .

    RETURNW         reduce using rule 39 (CODE -> ASK .)
    LOOPW           reduce using rule 39 (CODE -> ASK .)
    LOOPIFW         reduce using rule 39 (CODE -> ASK .)
    IF              reduce using rule 39 (CODE -> ASK .)
    ASKUSER         reduce using rule 39 (CODE -> ASK .)
    SAYW            reduce using rule 39 (CODE -> ASK .)
    CALLBOXW        reduce using rule 39 (CODE -> ASK .)
    IDV             reduce using rule 39 (CODE -> ASK .)
    CC              reduce using rule 39 (CODE -> ASK .)


state 91

    (38) CODE -> CONDITION .

    RETURNW         reduce using rule 38 (CODE -> CONDITION .)
    LOOPW           reduce using rule 38 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 38 (CODE -> CONDITION .)
    IF              reduce using rule 38 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 38 (CODE -> CONDITION .)
    SAYW            reduce using rule 38 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 38 (CODE -> CONDITION .)
    IDV             reduce using rule 38 (CODE -> CONDITION .)
    CC              reduce using rule 38 (CODE -> CONDITION .)


state 92

    (35) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 35 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 35 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 35 (CODE -> ASSIGNATION .)
    IF              reduce using rule 35 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 35 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 35 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 35 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 35 (CODE -> ASSIGNATION .)
    CC              reduce using rule 35 (CODE -> ASSIGNATION .)


state 93

    (31) BLOCKS -> OC CC .

    RECURSIVEBOX    reduce using rule 31 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 31 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 31 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 31 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 31 (BLOCKS -> OC CC .)
    MAINBOX         reduce using rule 31 (BLOCKS -> OC CC .)
    CC              reduce using rule 31 (BLOCKS -> OC CC .)


state 94

    (141) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW . seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (143) seen_LOOPIF -> .

    OP              reduce using rule 143 (seen_LOOPIF -> .)

    seen_LOOPIF                    shift and go to state 113

state 95

    (78) RETURN -> RETURNW . EXPRESSION PC
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 122

state 96

    (42) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF . OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> IF . OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF . OP STM CP OC seen_OC_IF CC seen_CC_IF

    OP              shift and go to state 127


state 97

    (126) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW . seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (140) seen_LOOP -> .

    OP              reduce using rule 140 (seen_LOOP -> .)

    seen_LOOP                      shift and go to state 128

state 98

    (118) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 129


state 99

    (30) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 130


state 100

    (41) CODE -> CALLBOX .

    RETURNW         reduce using rule 41 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 41 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 41 (CODE -> CALLBOX .)
    IF              reduce using rule 41 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 41 (CODE -> CALLBOX .)
    SAYW            reduce using rule 41 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 41 (CODE -> CALLBOX .)
    IDV             reduce using rule 41 (CODE -> CALLBOX .)
    CC              reduce using rule 41 (CODE -> CALLBOX .)


state 101

    (37) CODE -> LOOPIF .

    RETURNW         reduce using rule 37 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 37 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 37 (CODE -> LOOPIF .)
    IF              reduce using rule 37 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 37 (CODE -> LOOPIF .)
    SAYW            reduce using rule 37 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 37 (CODE -> LOOPIF .)
    IDV             reduce using rule 37 (CODE -> LOOPIF .)
    CC              reduce using rule 37 (CODE -> LOOPIF .)


state 102

    (36) CODE -> LOOP .

    RETURNW         reduce using rule 36 (CODE -> LOOP .)
    LOOPW           reduce using rule 36 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 36 (CODE -> LOOP .)
    IF              reduce using rule 36 (CODE -> LOOP .)
    ASKUSER         reduce using rule 36 (CODE -> LOOP .)
    SAYW            reduce using rule 36 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 36 (CODE -> LOOP .)
    IDV             reduce using rule 36 (CODE -> LOOP .)
    CC              reduce using rule 36 (CODE -> LOOP .)


state 103

    (75) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 75 (METHODS3 -> PARAM COMMA METHODS3 .)


state 104

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHOD_UPDATE
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHOD_UPDATE METHODS
    (68) METHOD_UPDATE -> .

    RECURSIVEBOX    reduce using rule 68 (METHOD_UPDATE -> .)
    VOIDBOX         reduce using rule 68 (METHOD_UPDATE -> .)
    VARIBOX         reduce using rule 68 (METHOD_UPDATE -> .)
    VARFBOX         reduce using rule 68 (METHOD_UPDATE -> .)
    VARSBOX         reduce using rule 68 (METHOD_UPDATE -> .)
    MAINBOX         reduce using rule 68 (METHOD_UPDATE -> .)

    METHOD_UPDATE                  shift and go to state 131

state 105

    (1) BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC before_vars VARS seen_globalvars METHODS seen_methods MAINBOX OP CP BLOCKS CC .)


state 106

    (114) SAY -> SAYW OP . CONCAT CP PC
    (115) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (116) CONCAT -> . EXPRESSION seen_EXP_SAY
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 132
    CONCAT                         shift and go to state 133

state 107

    (33) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 33 (BLOCKS2 -> CODE BLOCKS2 .)


state 108

    (29) BLOCKS -> OC VARS CC .

    RECURSIVEBOX    reduce using rule 29 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 29 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 29 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 29 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 29 (BLOCKS -> OC VARS CC .)
    MAINBOX         reduce using rule 29 (BLOCKS -> OC VARS CC .)
    CC              reduce using rule 29 (BLOCKS -> OC VARS CC .)


state 109

    (28) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 134


state 110

    (80) ASSIGNATION -> seen_ID_ASSIGNATION EQUALS . EXPRESSION PC
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 135

state 111

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY . seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (109) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB

    OB              shift and go to state 137

    seen_ARRAY_CTE                 shift and go to state 136

state 112

    (119) CALLBOX -> CALLBOXW OP . SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> CALLBOXW OP . SEEN_IDM_CALL CP PC
    (121) SEEN_IDM_CALL -> . IDM

    IDM             shift and go to state 139

    SEEN_IDM_CALL                  shift and go to state 138

state 113

    (141) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF . OP STM CP seen_CP_LOOPIF OC CC

    OP              shift and go to state 140


state 114

    (82) EXPRESSION -> OPER . seen_EXPF
    (83) EXPRESSION -> OPER . seen_EXPF seen_OPER EXPRESSION
    (84) seen_EXPF -> .

    PLUS            reduce using rule 84 (seen_EXPF -> .)
    MINUS           reduce using rule 84 (seen_EXPF -> .)
    OR              reduce using rule 84 (seen_EXPF -> .)
    PC              reduce using rule 84 (seen_EXPF -> .)
    DOT             reduce using rule 84 (seen_EXPF -> .)
    CP              reduce using rule 84 (seen_EXPF -> .)
    GT              reduce using rule 84 (seen_EXPF -> .)
    GTE             reduce using rule 84 (seen_EXPF -> .)
    LT              reduce using rule 84 (seen_EXPF -> .)
    LTE             reduce using rule 84 (seen_EXPF -> .)
    DOUBLEEQUALS    reduce using rule 84 (seen_EXPF -> .)
    LTGT            reduce using rule 84 (seen_EXPF -> .)
    CB              reduce using rule 84 (seen_EXPF -> .)
    COMMA           reduce using rule 84 (seen_EXPF -> .)

    seen_EXPF                      shift and go to state 141

state 115

    (108) seen_ID -> IDV .

    OB              reduce using rule 108 (seen_ID -> IDV .)
    MULTIPLY        reduce using rule 108 (seen_ID -> IDV .)
    DIVISION        reduce using rule 108 (seen_ID -> IDV .)
    AND             reduce using rule 108 (seen_ID -> IDV .)
    PLUS            reduce using rule 108 (seen_ID -> IDV .)
    MINUS           reduce using rule 108 (seen_ID -> IDV .)
    OR              reduce using rule 108 (seen_ID -> IDV .)
    PC              reduce using rule 108 (seen_ID -> IDV .)
    DOT             reduce using rule 108 (seen_ID -> IDV .)
    CP              reduce using rule 108 (seen_ID -> IDV .)
    GT              reduce using rule 108 (seen_ID -> IDV .)
    GTE             reduce using rule 108 (seen_ID -> IDV .)
    LT              reduce using rule 108 (seen_ID -> IDV .)
    LTE             reduce using rule 108 (seen_ID -> IDV .)
    DOUBLEEQUALS    reduce using rule 108 (seen_ID -> IDV .)
    LTGT            reduce using rule 108 (seen_ID -> IDV .)
    CB              reduce using rule 108 (seen_ID -> IDV .)
    COMMA           reduce using rule 108 (seen_ID -> IDV .)


state 116

    (97) TERM2 -> CTE .

    MULTIPLY        reduce using rule 97 (TERM2 -> CTE .)
    DIVISION        reduce using rule 97 (TERM2 -> CTE .)
    AND             reduce using rule 97 (TERM2 -> CTE .)
    PLUS            reduce using rule 97 (TERM2 -> CTE .)
    MINUS           reduce using rule 97 (TERM2 -> CTE .)
    OR              reduce using rule 97 (TERM2 -> CTE .)
    DOT             reduce using rule 97 (TERM2 -> CTE .)
    CP              reduce using rule 97 (TERM2 -> CTE .)
    GT              reduce using rule 97 (TERM2 -> CTE .)
    GTE             reduce using rule 97 (TERM2 -> CTE .)
    LT              reduce using rule 97 (TERM2 -> CTE .)
    LTE             reduce using rule 97 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 97 (TERM2 -> CTE .)
    LTGT            reduce using rule 97 (TERM2 -> CTE .)
    CB              reduce using rule 97 (TERM2 -> CTE .)
    COMMA           reduce using rule 97 (TERM2 -> CTE .)
    PC              reduce using rule 97 (TERM2 -> CTE .)


state 117

    (99) TERM2 -> MINUS . CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 142

state 118

    (102) CTE -> STRING . seen_STRING
    (107) seen_STRING -> .

    MULTIPLY        reduce using rule 107 (seen_STRING -> .)
    DIVISION        reduce using rule 107 (seen_STRING -> .)
    AND             reduce using rule 107 (seen_STRING -> .)
    PLUS            reduce using rule 107 (seen_STRING -> .)
    MINUS           reduce using rule 107 (seen_STRING -> .)
    OR              reduce using rule 107 (seen_STRING -> .)
    PC              reduce using rule 107 (seen_STRING -> .)
    DOT             reduce using rule 107 (seen_STRING -> .)
    CP              reduce using rule 107 (seen_STRING -> .)
    GT              reduce using rule 107 (seen_STRING -> .)
    GTE             reduce using rule 107 (seen_STRING -> .)
    LT              reduce using rule 107 (seen_STRING -> .)
    LTE             reduce using rule 107 (seen_STRING -> .)
    DOUBLEEQUALS    reduce using rule 107 (seen_STRING -> .)
    LTGT            reduce using rule 107 (seen_STRING -> .)
    CB              reduce using rule 107 (seen_STRING -> .)
    COMMA           reduce using rule 107 (seen_STRING -> .)

    seen_STRING                    shift and go to state 143

state 119

    (88) OPER -> TERM . seen_TERMF
    (89) OPER -> TERM . seen_TERMF seen_TERM OPER
    (90) seen_TERMF -> .

    MULTIPLY        reduce using rule 90 (seen_TERMF -> .)
    DIVISION        reduce using rule 90 (seen_TERMF -> .)
    AND             reduce using rule 90 (seen_TERMF -> .)
    PLUS            reduce using rule 90 (seen_TERMF -> .)
    MINUS           reduce using rule 90 (seen_TERMF -> .)
    OR              reduce using rule 90 (seen_TERMF -> .)
    PC              reduce using rule 90 (seen_TERMF -> .)
    DOT             reduce using rule 90 (seen_TERMF -> .)
    CP              reduce using rule 90 (seen_TERMF -> .)
    GT              reduce using rule 90 (seen_TERMF -> .)
    GTE             reduce using rule 90 (seen_TERMF -> .)
    LT              reduce using rule 90 (seen_TERMF -> .)
    LTE             reduce using rule 90 (seen_TERMF -> .)
    DOUBLEEQUALS    reduce using rule 90 (seen_TERMF -> .)
    LTGT            reduce using rule 90 (seen_TERMF -> .)
    CB              reduce using rule 90 (seen_TERMF -> .)
    COMMA           reduce using rule 90 (seen_TERMF -> .)

    seen_TERMF                     shift and go to state 144

state 120

    (103) CTE -> seen_ID .
    (104) CTE -> seen_ID . start_ARRAY seen_ARRAY_CTE end_ARRAY
    (111) start_ARRAY -> .

    MULTIPLY        reduce using rule 103 (CTE -> seen_ID .)
    DIVISION        reduce using rule 103 (CTE -> seen_ID .)
    AND             reduce using rule 103 (CTE -> seen_ID .)
    PLUS            reduce using rule 103 (CTE -> seen_ID .)
    MINUS           reduce using rule 103 (CTE -> seen_ID .)
    OR              reduce using rule 103 (CTE -> seen_ID .)
    PC              reduce using rule 103 (CTE -> seen_ID .)
    CB              reduce using rule 103 (CTE -> seen_ID .)
    DOT             reduce using rule 103 (CTE -> seen_ID .)
    CP              reduce using rule 103 (CTE -> seen_ID .)
    GT              reduce using rule 103 (CTE -> seen_ID .)
    GTE             reduce using rule 103 (CTE -> seen_ID .)
    LT              reduce using rule 103 (CTE -> seen_ID .)
    LTE             reduce using rule 103 (CTE -> seen_ID .)
    DOUBLEEQUALS    reduce using rule 103 (CTE -> seen_ID .)
    LTGT            reduce using rule 103 (CTE -> seen_ID .)
    COMMA           reduce using rule 103 (CTE -> seen_ID .)
    OB              reduce using rule 111 (start_ARRAY -> .)

    start_ARRAY                    shift and go to state 145

state 121

    (98) TERM2 -> PLUS . CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 146

state 122

    (78) RETURN -> RETURNW EXPRESSION . PC

    PC              shift and go to state 147


state 123

    (95) TERM -> TERM2 .

    MULTIPLY        reduce using rule 95 (TERM -> TERM2 .)
    DIVISION        reduce using rule 95 (TERM -> TERM2 .)
    AND             reduce using rule 95 (TERM -> TERM2 .)
    PLUS            reduce using rule 95 (TERM -> TERM2 .)
    MINUS           reduce using rule 95 (TERM -> TERM2 .)
    OR              reduce using rule 95 (TERM -> TERM2 .)
    COMMA           reduce using rule 95 (TERM -> TERM2 .)
    CP              reduce using rule 95 (TERM -> TERM2 .)
    DOT             reduce using rule 95 (TERM -> TERM2 .)
    PC              reduce using rule 95 (TERM -> TERM2 .)
    GT              reduce using rule 95 (TERM -> TERM2 .)
    GTE             reduce using rule 95 (TERM -> TERM2 .)
    LT              reduce using rule 95 (TERM -> TERM2 .)
    LTE             reduce using rule 95 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 95 (TERM -> TERM2 .)
    LTGT            reduce using rule 95 (TERM -> TERM2 .)
    CB              reduce using rule 95 (TERM -> TERM2 .)


state 124

    (100) CTE -> INT . seen_INT
    (105) seen_INT -> .

    MULTIPLY        reduce using rule 105 (seen_INT -> .)
    DIVISION        reduce using rule 105 (seen_INT -> .)
    AND             reduce using rule 105 (seen_INT -> .)
    PLUS            reduce using rule 105 (seen_INT -> .)
    MINUS           reduce using rule 105 (seen_INT -> .)
    OR              reduce using rule 105 (seen_INT -> .)
    PC              reduce using rule 105 (seen_INT -> .)
    DOT             reduce using rule 105 (seen_INT -> .)
    CP              reduce using rule 105 (seen_INT -> .)
    GT              reduce using rule 105 (seen_INT -> .)
    GTE             reduce using rule 105 (seen_INT -> .)
    LT              reduce using rule 105 (seen_INT -> .)
    LTE             reduce using rule 105 (seen_INT -> .)
    DOUBLEEQUALS    reduce using rule 105 (seen_INT -> .)
    LTGT            reduce using rule 105 (seen_INT -> .)
    CB              reduce using rule 105 (seen_INT -> .)
    COMMA           reduce using rule 105 (seen_INT -> .)

    seen_INT                       shift and go to state 148

state 125

    (101) CTE -> FLOAT . seen_FLOAT
    (106) seen_FLOAT -> .

    MULTIPLY        reduce using rule 106 (seen_FLOAT -> .)
    DIVISION        reduce using rule 106 (seen_FLOAT -> .)
    AND             reduce using rule 106 (seen_FLOAT -> .)
    PLUS            reduce using rule 106 (seen_FLOAT -> .)
    MINUS           reduce using rule 106 (seen_FLOAT -> .)
    OR              reduce using rule 106 (seen_FLOAT -> .)
    PC              reduce using rule 106 (seen_FLOAT -> .)
    DOT             reduce using rule 106 (seen_FLOAT -> .)
    CP              reduce using rule 106 (seen_FLOAT -> .)
    GT              reduce using rule 106 (seen_FLOAT -> .)
    GTE             reduce using rule 106 (seen_FLOAT -> .)
    LT              reduce using rule 106 (seen_FLOAT -> .)
    LTE             reduce using rule 106 (seen_FLOAT -> .)
    DOUBLEEQUALS    reduce using rule 106 (seen_FLOAT -> .)
    LTGT            reduce using rule 106 (seen_FLOAT -> .)
    CB              reduce using rule 106 (seen_FLOAT -> .)
    COMMA           reduce using rule 106 (seen_FLOAT -> .)

    seen_FLOAT                     shift and go to state 149

state 126

    (94) TERM -> OP . seen_OP_TERM STM CP
    (96) seen_OP_TERM -> .

    OP              reduce using rule 96 (seen_OP_TERM -> .)
    PLUS            reduce using rule 96 (seen_OP_TERM -> .)
    MINUS           reduce using rule 96 (seen_OP_TERM -> .)
    INT             reduce using rule 96 (seen_OP_TERM -> .)
    FLOAT           reduce using rule 96 (seen_OP_TERM -> .)
    STRING          reduce using rule 96 (seen_OP_TERM -> .)
    IDV             reduce using rule 96 (seen_OP_TERM -> .)

    seen_OP_TERM                   shift and go to state 150

state 127

    (42) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP . STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> IF OP . STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF OP . STM CP OC seen_OC_IF CC seen_CC_IF
    (53) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (54) STM -> . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    CTE                            shift and go to state 116
    TERM                           shift and go to state 119
    seen_ID                        shift and go to state 120
    EXPRESSION                     shift and go to state 151
    TERM2                          shift and go to state 123
    STM                            shift and go to state 152

state 128

    (126) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP . OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    OP              shift and go to state 153


state 129

    (118) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 154


state 130

    (30) BLOCKS -> OC BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    MAINBOX         reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)
    CC              reduce using rule 30 (BLOCKS -> OC BLOCKS2 CC .)


state 131

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE .
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE . METHODS
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE
    (67) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS
    (70) METHODS2 -> . RECURSIVEBOX
    (71) METHODS2 -> . VOIDBOX
    (72) METHODS2 -> . VARIBOX
    (73) METHODS2 -> . VARFBOX
    (74) METHODS2 -> . VARSBOX

    MAINBOX         reduce using rule 66 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE .)
    RECURSIVEBOX    shift and go to state 22
    VOIDBOX         shift and go to state 28
    VARIBOX         shift and go to state 27
    VARFBOX         shift and go to state 25
    VARSBOX         shift and go to state 26

    METHODS                        shift and go to state 155
    METHODS2                       shift and go to state 29

state 132

    (115) CONCAT -> EXPRESSION . seen_EXP_SAY DOT CONCAT
    (116) CONCAT -> EXPRESSION . seen_EXP_SAY
    (117) seen_EXP_SAY -> .

    DOT             reduce using rule 117 (seen_EXP_SAY -> .)
    CP              reduce using rule 117 (seen_EXP_SAY -> .)

    seen_EXP_SAY                   shift and go to state 156

state 133

    (114) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 157


state 134

    (28) BLOCKS -> OC VARS BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    MAINBOX         reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)
    CC              reduce using rule 28 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 135

    (80) ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION . PC

    PC              shift and go to state 158


state 136

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE . end_ARRAY EQUALS EXPRESSION PC
    (112) end_ARRAY -> .

    EQUALS          reduce using rule 112 (end_ARRAY -> .)

    end_ARRAY                      shift and go to state 159

state 137

    (109) seen_ARRAY_CTE -> OB . EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> OB . EXPRESSION seen_EXPRESSION_ARRAY CB
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM2                          shift and go to state 123
    TERM                           shift and go to state 119
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 160

state 138

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL . COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL . CP PC

    COMMA           shift and go to state 161
    CP              shift and go to state 162


state 139

    (121) SEEN_IDM_CALL -> IDM .

    COMMA           reduce using rule 121 (SEEN_IDM_CALL -> IDM .)
    CP              reduce using rule 121 (SEEN_IDM_CALL -> IDM .)


state 140

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP . STM CP seen_CP_LOOPIF OC CC
    (53) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (54) STM -> . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    CTE                            shift and go to state 116
    seen_ID                        shift and go to state 120
    TERM                           shift and go to state 119
    EXPRESSION                     shift and go to state 151
    TERM2                          shift and go to state 123
    STM                            shift and go to state 163

state 141

    (82) EXPRESSION -> OPER seen_EXPF .
    (83) EXPRESSION -> OPER seen_EXPF . seen_OPER EXPRESSION
    (85) seen_OPER -> . PLUS
    (86) seen_OPER -> . MINUS
    (87) seen_OPER -> . OR

    GT              reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    GTE             reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    LT              reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    LTE             reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    DOUBLEEQUALS    reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    LTGT            reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    CP              reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    COMMA           reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    DOT             reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    PC              reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    CB              reduce using rule 82 (EXPRESSION -> OPER seen_EXPF .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 167
    OR              shift and go to state 164

    seen_OPER                      shift and go to state 166

state 142

    (99) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 99 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 99 (TERM2 -> MINUS CTE .)
    AND             reduce using rule 99 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 99 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 99 (TERM2 -> MINUS CTE .)
    OR              reduce using rule 99 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 99 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 99 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 99 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 99 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 99 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 99 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 99 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 99 (TERM2 -> MINUS CTE .)
    CB              reduce using rule 99 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 99 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 99 (TERM2 -> MINUS CTE .)


state 143

    (102) CTE -> STRING seen_STRING .

    MULTIPLY        reduce using rule 102 (CTE -> STRING seen_STRING .)
    DIVISION        reduce using rule 102 (CTE -> STRING seen_STRING .)
    AND             reduce using rule 102 (CTE -> STRING seen_STRING .)
    PLUS            reduce using rule 102 (CTE -> STRING seen_STRING .)
    MINUS           reduce using rule 102 (CTE -> STRING seen_STRING .)
    OR              reduce using rule 102 (CTE -> STRING seen_STRING .)
    PC              reduce using rule 102 (CTE -> STRING seen_STRING .)
    CB              reduce using rule 102 (CTE -> STRING seen_STRING .)
    DOT             reduce using rule 102 (CTE -> STRING seen_STRING .)
    CP              reduce using rule 102 (CTE -> STRING seen_STRING .)
    GT              reduce using rule 102 (CTE -> STRING seen_STRING .)
    GTE             reduce using rule 102 (CTE -> STRING seen_STRING .)
    LT              reduce using rule 102 (CTE -> STRING seen_STRING .)
    LTE             reduce using rule 102 (CTE -> STRING seen_STRING .)
    DOUBLEEQUALS    reduce using rule 102 (CTE -> STRING seen_STRING .)
    LTGT            reduce using rule 102 (CTE -> STRING seen_STRING .)
    COMMA           reduce using rule 102 (CTE -> STRING seen_STRING .)


state 144

    (88) OPER -> TERM seen_TERMF .
    (89) OPER -> TERM seen_TERMF . seen_TERM OPER
    (91) seen_TERM -> . MULTIPLY
    (92) seen_TERM -> . DIVISION
    (93) seen_TERM -> . AND

    PLUS            reduce using rule 88 (OPER -> TERM seen_TERMF .)
    MINUS           reduce using rule 88 (OPER -> TERM seen_TERMF .)
    OR              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    PC              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    CB              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    COMMA           reduce using rule 88 (OPER -> TERM seen_TERMF .)
    CP              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    DOT             reduce using rule 88 (OPER -> TERM seen_TERMF .)
    GT              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    GTE             reduce using rule 88 (OPER -> TERM seen_TERMF .)
    LT              reduce using rule 88 (OPER -> TERM seen_TERMF .)
    LTE             reduce using rule 88 (OPER -> TERM seen_TERMF .)
    DOUBLEEQUALS    reduce using rule 88 (OPER -> TERM seen_TERMF .)
    LTGT            reduce using rule 88 (OPER -> TERM seen_TERMF .)
    MULTIPLY        shift and go to state 171
    DIVISION        shift and go to state 168
    AND             shift and go to state 169

    seen_TERM                      shift and go to state 170

state 145

    (104) CTE -> seen_ID start_ARRAY . seen_ARRAY_CTE end_ARRAY
    (109) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB

    OB              shift and go to state 137

    seen_ARRAY_CTE                 shift and go to state 172

state 146

    (98) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 98 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 98 (TERM2 -> PLUS CTE .)
    AND             reduce using rule 98 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 98 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 98 (TERM2 -> PLUS CTE .)
    OR              reduce using rule 98 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 98 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 98 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 98 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 98 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 98 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 98 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 98 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 98 (TERM2 -> PLUS CTE .)
    CB              reduce using rule 98 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 98 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 98 (TERM2 -> PLUS CTE .)


state 147

    (78) RETURN -> RETURNW EXPRESSION PC .

    RETURNW         reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    LOOPW           reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    LOOPIFW         reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    IF              reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    ASKUSER         reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    SAYW            reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    CALLBOXW        reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    IDV             reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)
    CC              reduce using rule 78 (RETURN -> RETURNW EXPRESSION PC .)


state 148

    (100) CTE -> INT seen_INT .

    MULTIPLY        reduce using rule 100 (CTE -> INT seen_INT .)
    DIVISION        reduce using rule 100 (CTE -> INT seen_INT .)
    AND             reduce using rule 100 (CTE -> INT seen_INT .)
    PLUS            reduce using rule 100 (CTE -> INT seen_INT .)
    MINUS           reduce using rule 100 (CTE -> INT seen_INT .)
    OR              reduce using rule 100 (CTE -> INT seen_INT .)
    PC              reduce using rule 100 (CTE -> INT seen_INT .)
    CB              reduce using rule 100 (CTE -> INT seen_INT .)
    DOT             reduce using rule 100 (CTE -> INT seen_INT .)
    CP              reduce using rule 100 (CTE -> INT seen_INT .)
    GT              reduce using rule 100 (CTE -> INT seen_INT .)
    GTE             reduce using rule 100 (CTE -> INT seen_INT .)
    LT              reduce using rule 100 (CTE -> INT seen_INT .)
    LTE             reduce using rule 100 (CTE -> INT seen_INT .)
    DOUBLEEQUALS    reduce using rule 100 (CTE -> INT seen_INT .)
    LTGT            reduce using rule 100 (CTE -> INT seen_INT .)
    COMMA           reduce using rule 100 (CTE -> INT seen_INT .)


state 149

    (101) CTE -> FLOAT seen_FLOAT .

    MULTIPLY        reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    DIVISION        reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    AND             reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    PLUS            reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    MINUS           reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    OR              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    PC              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    CB              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    DOT             reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    CP              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    GT              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    GTE             reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    LT              reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    LTE             reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    DOUBLEEQUALS    reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    LTGT            reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)
    COMMA           reduce using rule 101 (CTE -> FLOAT seen_FLOAT .)


state 150

    (94) TERM -> OP seen_OP_TERM . STM CP
    (53) STM -> . EXPRESSION STM2 EXPRESSION seen_STM
    (54) STM -> . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    STM                            shift and go to state 173
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 151

state 151

    (53) STM -> EXPRESSION . STM2 EXPRESSION seen_STM
    (54) STM -> EXPRESSION .
    (55) STM2 -> . GT
    (56) STM2 -> . GTE
    (57) STM2 -> . LT
    (58) STM2 -> . LTE
    (59) STM2 -> . DOUBLEEQUALS
    (60) STM2 -> . LTGT

    CP              reduce using rule 54 (STM -> EXPRESSION .)
    GT              shift and go to state 174
    GTE             shift and go to state 175
    LT              shift and go to state 177
    LTE             shift and go to state 179
    DOUBLEEQUALS    shift and go to state 180
    LTGT            shift and go to state 178

    STM2                           shift and go to state 176

state 152

    (42) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM . CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> IF OP STM . CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF OP STM . CP OC seen_OC_IF CC seen_CC_IF

    CP              shift and go to state 181


state 153

    (126) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP . seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (132) seen_VAR_LOOP -> . IDV

    IDV             shift and go to state 183

    seen_VAR_LOOP                  shift and go to state 182

state 154

    (118) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 184


state 155

    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS .

    MAINBOX         reduce using rule 67 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHOD_UPDATE METHODS .)


state 156

    (115) CONCAT -> EXPRESSION seen_EXP_SAY . DOT CONCAT
    (116) CONCAT -> EXPRESSION seen_EXP_SAY .

    DOT             shift and go to state 185
    CP              reduce using rule 116 (CONCAT -> EXPRESSION seen_EXP_SAY .)


state 157

    (114) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 186


state 158

    (80) ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    IF              reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    IDV             reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)
    CC              reduce using rule 80 (ASSIGNATION -> seen_ID_ASSIGNATION EQUALS EXPRESSION PC .)


state 159

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 187


state 160

    (109) seen_ARRAY_CTE -> OB EXPRESSION . seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> OB EXPRESSION . seen_EXPRESSION_ARRAY CB
    (113) seen_EXPRESSION_ARRAY -> .

    CB              reduce using rule 113 (seen_EXPRESSION_ARRAY -> .)

    seen_EXPRESSION_ARRAY          shift and go to state 188

state 161

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA . SEEN_CALL PARAMETERS CP PC
    (122) SEEN_CALL -> .

    OP              reduce using rule 122 (SEEN_CALL -> .)
    PLUS            reduce using rule 122 (SEEN_CALL -> .)
    MINUS           reduce using rule 122 (SEEN_CALL -> .)
    INT             reduce using rule 122 (SEEN_CALL -> .)
    FLOAT           reduce using rule 122 (SEEN_CALL -> .)
    STRING          reduce using rule 122 (SEEN_CALL -> .)
    IDV             reduce using rule 122 (SEEN_CALL -> .)

    SEEN_CALL                      shift and go to state 189

state 162

    (120) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP . PC

    PC              shift and go to state 190


state 163

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP STM . CP seen_CP_LOOPIF OC CC

    CP              shift and go to state 191


state 164

    (87) seen_OPER -> OR .

    OP              reduce using rule 87 (seen_OPER -> OR .)
    PLUS            reduce using rule 87 (seen_OPER -> OR .)
    MINUS           reduce using rule 87 (seen_OPER -> OR .)
    INT             reduce using rule 87 (seen_OPER -> OR .)
    FLOAT           reduce using rule 87 (seen_OPER -> OR .)
    STRING          reduce using rule 87 (seen_OPER -> OR .)
    IDV             reduce using rule 87 (seen_OPER -> OR .)


state 165

    (85) seen_OPER -> PLUS .

    OP              reduce using rule 85 (seen_OPER -> PLUS .)
    PLUS            reduce using rule 85 (seen_OPER -> PLUS .)
    MINUS           reduce using rule 85 (seen_OPER -> PLUS .)
    INT             reduce using rule 85 (seen_OPER -> PLUS .)
    FLOAT           reduce using rule 85 (seen_OPER -> PLUS .)
    STRING          reduce using rule 85 (seen_OPER -> PLUS .)
    IDV             reduce using rule 85 (seen_OPER -> PLUS .)


state 166

    (83) EXPRESSION -> OPER seen_EXPF seen_OPER . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 192

state 167

    (86) seen_OPER -> MINUS .

    OP              reduce using rule 86 (seen_OPER -> MINUS .)
    PLUS            reduce using rule 86 (seen_OPER -> MINUS .)
    MINUS           reduce using rule 86 (seen_OPER -> MINUS .)
    INT             reduce using rule 86 (seen_OPER -> MINUS .)
    FLOAT           reduce using rule 86 (seen_OPER -> MINUS .)
    STRING          reduce using rule 86 (seen_OPER -> MINUS .)
    IDV             reduce using rule 86 (seen_OPER -> MINUS .)


state 168

    (92) seen_TERM -> DIVISION .

    OP              reduce using rule 92 (seen_TERM -> DIVISION .)
    PLUS            reduce using rule 92 (seen_TERM -> DIVISION .)
    MINUS           reduce using rule 92 (seen_TERM -> DIVISION .)
    INT             reduce using rule 92 (seen_TERM -> DIVISION .)
    FLOAT           reduce using rule 92 (seen_TERM -> DIVISION .)
    STRING          reduce using rule 92 (seen_TERM -> DIVISION .)
    IDV             reduce using rule 92 (seen_TERM -> DIVISION .)


state 169

    (93) seen_TERM -> AND .

    OP              reduce using rule 93 (seen_TERM -> AND .)
    PLUS            reduce using rule 93 (seen_TERM -> AND .)
    MINUS           reduce using rule 93 (seen_TERM -> AND .)
    INT             reduce using rule 93 (seen_TERM -> AND .)
    FLOAT           reduce using rule 93 (seen_TERM -> AND .)
    STRING          reduce using rule 93 (seen_TERM -> AND .)
    IDV             reduce using rule 93 (seen_TERM -> AND .)


state 170

    (89) OPER -> TERM seen_TERMF seen_TERM . OPER
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 193
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116

state 171

    (91) seen_TERM -> MULTIPLY .

    OP              reduce using rule 91 (seen_TERM -> MULTIPLY .)
    PLUS            reduce using rule 91 (seen_TERM -> MULTIPLY .)
    MINUS           reduce using rule 91 (seen_TERM -> MULTIPLY .)
    INT             reduce using rule 91 (seen_TERM -> MULTIPLY .)
    FLOAT           reduce using rule 91 (seen_TERM -> MULTIPLY .)
    STRING          reduce using rule 91 (seen_TERM -> MULTIPLY .)
    IDV             reduce using rule 91 (seen_TERM -> MULTIPLY .)


state 172

    (104) CTE -> seen_ID start_ARRAY seen_ARRAY_CTE . end_ARRAY
    (112) end_ARRAY -> .

    MULTIPLY        reduce using rule 112 (end_ARRAY -> .)
    DIVISION        reduce using rule 112 (end_ARRAY -> .)
    AND             reduce using rule 112 (end_ARRAY -> .)
    PLUS            reduce using rule 112 (end_ARRAY -> .)
    MINUS           reduce using rule 112 (end_ARRAY -> .)
    OR              reduce using rule 112 (end_ARRAY -> .)
    PC              reduce using rule 112 (end_ARRAY -> .)
    DOT             reduce using rule 112 (end_ARRAY -> .)
    CP              reduce using rule 112 (end_ARRAY -> .)
    GT              reduce using rule 112 (end_ARRAY -> .)
    GTE             reduce using rule 112 (end_ARRAY -> .)
    LT              reduce using rule 112 (end_ARRAY -> .)
    LTE             reduce using rule 112 (end_ARRAY -> .)
    DOUBLEEQUALS    reduce using rule 112 (end_ARRAY -> .)
    LTGT            reduce using rule 112 (end_ARRAY -> .)
    CB              reduce using rule 112 (end_ARRAY -> .)
    COMMA           reduce using rule 112 (end_ARRAY -> .)

    end_ARRAY                      shift and go to state 194

state 173

    (94) TERM -> OP seen_OP_TERM STM . CP

    CP              shift and go to state 195


state 174

    (55) STM2 -> GT .

    OP              reduce using rule 55 (STM2 -> GT .)
    PLUS            reduce using rule 55 (STM2 -> GT .)
    MINUS           reduce using rule 55 (STM2 -> GT .)
    INT             reduce using rule 55 (STM2 -> GT .)
    FLOAT           reduce using rule 55 (STM2 -> GT .)
    STRING          reduce using rule 55 (STM2 -> GT .)
    IDV             reduce using rule 55 (STM2 -> GT .)


state 175

    (56) STM2 -> GTE .

    OP              reduce using rule 56 (STM2 -> GTE .)
    PLUS            reduce using rule 56 (STM2 -> GTE .)
    MINUS           reduce using rule 56 (STM2 -> GTE .)
    INT             reduce using rule 56 (STM2 -> GTE .)
    FLOAT           reduce using rule 56 (STM2 -> GTE .)
    STRING          reduce using rule 56 (STM2 -> GTE .)
    IDV             reduce using rule 56 (STM2 -> GTE .)


state 176

    (53) STM -> EXPRESSION STM2 . EXPRESSION seen_STM
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 196

state 177

    (57) STM2 -> LT .

    OP              reduce using rule 57 (STM2 -> LT .)
    PLUS            reduce using rule 57 (STM2 -> LT .)
    MINUS           reduce using rule 57 (STM2 -> LT .)
    INT             reduce using rule 57 (STM2 -> LT .)
    FLOAT           reduce using rule 57 (STM2 -> LT .)
    STRING          reduce using rule 57 (STM2 -> LT .)
    IDV             reduce using rule 57 (STM2 -> LT .)


state 178

    (60) STM2 -> LTGT .

    OP              reduce using rule 60 (STM2 -> LTGT .)
    PLUS            reduce using rule 60 (STM2 -> LTGT .)
    MINUS           reduce using rule 60 (STM2 -> LTGT .)
    INT             reduce using rule 60 (STM2 -> LTGT .)
    FLOAT           reduce using rule 60 (STM2 -> LTGT .)
    STRING          reduce using rule 60 (STM2 -> LTGT .)
    IDV             reduce using rule 60 (STM2 -> LTGT .)


state 179

    (58) STM2 -> LTE .

    OP              reduce using rule 58 (STM2 -> LTE .)
    PLUS            reduce using rule 58 (STM2 -> LTE .)
    MINUS           reduce using rule 58 (STM2 -> LTE .)
    INT             reduce using rule 58 (STM2 -> LTE .)
    FLOAT           reduce using rule 58 (STM2 -> LTE .)
    STRING          reduce using rule 58 (STM2 -> LTE .)
    IDV             reduce using rule 58 (STM2 -> LTE .)


state 180

    (59) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 59 (STM2 -> DOUBLEEQUALS .)


state 181

    (42) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM CP . OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> IF OP STM CP . OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF OP STM CP . OC seen_OC_IF CC seen_CC_IF

    OC              shift and go to state 197


state 182

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP . FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC

    FROM            shift and go to state 198


state 183

    (132) seen_VAR_LOOP -> IDV .

    FROM            reduce using rule 132 (seen_VAR_LOOP -> IDV .)


state 184

    (118) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 199


state 185

    (115) CONCAT -> EXPRESSION seen_EXP_SAY DOT . CONCAT
    (115) CONCAT -> . EXPRESSION seen_EXP_SAY DOT CONCAT
    (116) CONCAT -> . EXPRESSION seen_EXP_SAY
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 132
    CONCAT                         shift and go to state 200

state 186

    (114) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 114 (SAY -> SAYW OP CONCAT CP PC .)


state 187

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS . EXPRESSION PC
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    TERM2                          shift and go to state 123
    TERM                           shift and go to state 119
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 201

state 188

    (109) seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY . CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY . CB

    CB              shift and go to state 202


state 189

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL . PARAMETERS CP PC
    (123) PARAMETERS -> . SEEN_EXPRESSION_PARAM COMMA PARAMETERS
    (124) PARAMETERS -> . SEEN_EXPRESSION_PARAM
    (125) SEEN_EXPRESSION_PARAM -> . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    CTE                            shift and go to state 116
    TERM                           shift and go to state 119
    PARAMETERS                     shift and go to state 203
    seen_ID                        shift and go to state 120
    EXPRESSION                     shift and go to state 204
    SEEN_EXPRESSION_PARAM          shift and go to state 205
    TERM2                          shift and go to state 123

state 190

    (120) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .

    RETURNW         reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    LOOPW           reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    LOOPIFW         reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    IF              reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    ASKUSER         reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    SAYW            reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    CALLBOXW        reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    IDV             reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)
    CC              reduce using rule 120 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL CP PC .)


state 191

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP . seen_CP_LOOPIF OC CC
    (144) seen_CP_LOOPIF -> .

    OC              reduce using rule 144 (seen_CP_LOOPIF -> .)

    seen_CP_LOOPIF                 shift and go to state 206

state 192

    (83) EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .

    GT              reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GTE             reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LT              reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTE             reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTGT            reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    CP              reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    COMMA           reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOT             reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    PC              reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    CB              reduce using rule 83 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)


state 193

    (89) OPER -> TERM seen_TERMF seen_TERM OPER .

    PLUS            reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    MINUS           reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    OR              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    PC              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CB              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    COMMA           reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CP              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOT             reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GT              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GTE             reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LT              reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTE             reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOUBLEEQUALS    reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTGT            reduce using rule 89 (OPER -> TERM seen_TERMF seen_TERM OPER .)


state 194

    (104) CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .

    MULTIPLY        reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    DIVISION        reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    AND             reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    PLUS            reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    MINUS           reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    OR              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    PC              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    CB              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    DOT             reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    CP              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    GT              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    GTE             reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    LT              reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    LTE             reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    DOUBLEEQUALS    reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    LTGT            reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)
    COMMA           reduce using rule 104 (CTE -> seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY .)


state 195

    (94) TERM -> OP seen_OP_TERM STM CP .

    MULTIPLY        reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    DIVISION        reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    AND             reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    PLUS            reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    MINUS           reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    OR              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    COMMA           reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    CP              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    DOT             reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    PC              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    GT              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    GTE             reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    LT              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    LTE             reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    DOUBLEEQUALS    reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    LTGT            reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)
    CB              reduce using rule 94 (TERM -> OP seen_OP_TERM STM CP .)


state 196

    (53) STM -> EXPRESSION STM2 EXPRESSION . seen_STM
    (61) seen_STM -> .

    CP              reduce using rule 61 (seen_STM -> .)

    seen_STM                       shift and go to state 207

state 197

    (42) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM CP OC . seen_OC_IF CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC . seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF OP STM CP OC . seen_OC_IF CC seen_CC_IF
    (46) seen_OC_IF -> .

    CC              reduce using rule 46 (seen_OC_IF -> .)
    RETURNW         reduce using rule 46 (seen_OC_IF -> .)
    LOOPW           reduce using rule 46 (seen_OC_IF -> .)
    LOOPIFW         reduce using rule 46 (seen_OC_IF -> .)
    IF              reduce using rule 46 (seen_OC_IF -> .)
    ASKUSER         reduce using rule 46 (seen_OC_IF -> .)
    SAYW            reduce using rule 46 (seen_OC_IF -> .)
    CALLBOXW        reduce using rule 46 (seen_OC_IF -> .)
    IDV             reduce using rule 46 (seen_OC_IF -> .)

    seen_OC_IF                     shift and go to state 208

state 198

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM . LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (133) LOOP2 -> . seen_INT_LOOP
    (134) LOOP2 -> . seen_FLOAT_LOOP
    (135) seen_INT_LOOP -> . INT
    (136) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 212
    FLOAT           shift and go to state 209

    seen_FLOAT_LOOP                shift and go to state 211
    LOOP2                          shift and go to state 213
    seen_INT_LOOP                  shift and go to state 210

state 199

    (118) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 214


state 200

    (115) CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .

    CP              reduce using rule 115 (CONCAT -> EXPRESSION seen_EXP_SAY DOT CONCAT .)


state 201

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION . PC

    PC              shift and go to state 215


state 202

    (109) seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB . seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .
    (109) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE
    (110) seen_ARRAY_CTE -> . OB EXPRESSION seen_EXPRESSION_ARRAY CB

    MULTIPLY        reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    DIVISION        reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    AND             reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    PLUS            reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    MINUS           reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    OR              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    PC              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    DOT             reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    CP              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    GT              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    GTE             reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    LT              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    LTE             reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    DOUBLEEQUALS    reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    LTGT            reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    CB              reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    COMMA           reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    EQUALS          reduce using rule 110 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB .)
    OB              shift and go to state 137

    seen_ARRAY_CTE                 shift and go to state 216

state 203

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS . CP PC

    CP              shift and go to state 217


state 204

    (125) SEEN_EXPRESSION_PARAM -> EXPRESSION .

    COMMA           reduce using rule 125 (SEEN_EXPRESSION_PARAM -> EXPRESSION .)
    CP              reduce using rule 125 (SEEN_EXPRESSION_PARAM -> EXPRESSION .)


state 205

    (123) PARAMETERS -> SEEN_EXPRESSION_PARAM . COMMA PARAMETERS
    (124) PARAMETERS -> SEEN_EXPRESSION_PARAM .

    COMMA           shift and go to state 218
    CP              reduce using rule 124 (PARAMETERS -> SEEN_EXPRESSION_PARAM .)


state 206

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF . OC CC

    OC              shift and go to state 219


state 207

    (53) STM -> EXPRESSION STM2 EXPRESSION seen_STM .

    CP              reduce using rule 53 (STM -> EXPRESSION STM2 EXPRESSION seen_STM .)


state 208

    (42) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC CONDITION2
    (43) CONDITION -> IF OP STM CP OC seen_OC_IF . CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC seen_OC_IF . BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> IF OP STM CP OC seen_OC_IF . CC seen_CC_IF
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 220
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 221
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 209

    (136) seen_FLOAT_LOOP -> FLOAT .

    TO              reduce using rule 136 (seen_FLOAT_LOOP -> FLOAT .)
    BY              reduce using rule 136 (seen_FLOAT_LOOP -> FLOAT .)
    CP              reduce using rule 136 (seen_FLOAT_LOOP -> FLOAT .)


state 210

    (133) LOOP2 -> seen_INT_LOOP .

    TO              reduce using rule 133 (LOOP2 -> seen_INT_LOOP .)
    BY              reduce using rule 133 (LOOP2 -> seen_INT_LOOP .)
    CP              reduce using rule 133 (LOOP2 -> seen_INT_LOOP .)


state 211

    (134) LOOP2 -> seen_FLOAT_LOOP .

    TO              reduce using rule 134 (LOOP2 -> seen_FLOAT_LOOP .)
    BY              reduce using rule 134 (LOOP2 -> seen_FLOAT_LOOP .)
    CP              reduce using rule 134 (LOOP2 -> seen_FLOAT_LOOP .)


state 212

    (135) seen_INT_LOOP -> INT .

    BY              reduce using rule 135 (seen_INT_LOOP -> INT .)
    CP              reduce using rule 135 (seen_INT_LOOP -> INT .)
    TO              reduce using rule 135 (seen_INT_LOOP -> INT .)


state 213

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 . TO LOOP2 CP seen_CP_LOOP2 OC CC

    TO              shift and go to state 222


state 214

    (118) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 223


state 215

    (79) ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    IF              reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    IDV             reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)
    CC              reduce using rule 79 (ASSIGNATION -> seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC .)


state 216

    (109) seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .

    MULTIPLY        reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    DIVISION        reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    AND             reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    PLUS            reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    MINUS           reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    OR              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    PC              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    DOT             reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    CP              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    GT              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    GTE             reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    LT              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    LTE             reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    DOUBLEEQUALS    reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    LTGT            reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    CB              reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    COMMA           reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)
    EQUALS          reduce using rule 109 (seen_ARRAY_CTE -> OB EXPRESSION seen_EXPRESSION_ARRAY CB seen_ARRAY_CTE .)


state 217

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP . PC

    PC              shift and go to state 224


state 218

    (123) PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA . PARAMETERS
    (123) PARAMETERS -> . SEEN_EXPRESSION_PARAM COMMA PARAMETERS
    (124) PARAMETERS -> . SEEN_EXPRESSION_PARAM
    (125) SEEN_EXPRESSION_PARAM -> . EXPRESSION
    (82) EXPRESSION -> . OPER seen_EXPF
    (83) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (88) OPER -> . TERM seen_TERMF
    (89) OPER -> . TERM seen_TERMF seen_TERM OPER
    (94) TERM -> . OP seen_OP_TERM STM CP
    (95) TERM -> . TERM2
    (97) TERM2 -> . CTE
    (98) TERM2 -> . PLUS CTE
    (99) TERM2 -> . MINUS CTE
    (100) CTE -> . INT seen_INT
    (101) CTE -> . FLOAT seen_FLOAT
    (102) CTE -> . STRING seen_STRING
    (103) CTE -> . seen_ID
    (104) CTE -> . seen_ID start_ARRAY seen_ARRAY_CTE end_ARRAY
    (108) seen_ID -> . IDV

    OP              shift and go to state 126
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    INT             shift and go to state 124
    FLOAT           shift and go to state 125
    STRING          shift and go to state 118
    IDV             shift and go to state 115

    OPER                           shift and go to state 114
    SEEN_EXPRESSION_PARAM          shift and go to state 205
    TERM                           shift and go to state 119
    TERM2                          shift and go to state 123
    PARAMETERS                     shift and go to state 225
    seen_ID                        shift and go to state 120
    CTE                            shift and go to state 116
    EXPRESSION                     shift and go to state 204

state 219

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . BLOCKS2 CC
    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC . CC
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 226
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 227
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 220

    (43) CONDITION -> IF OP STM CP OC seen_OC_IF CC . CONDITION2
    (45) CONDITION -> IF OP STM CP OC seen_OC_IF CC . seen_CC_IF
    (48) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (47) seen_CC_IF -> .

    ELSE            shift and go to state 228
    RETURNW         reduce using rule 47 (seen_CC_IF -> .)
    LOOPW           reduce using rule 47 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 47 (seen_CC_IF -> .)
    IF              reduce using rule 47 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 47 (seen_CC_IF -> .)
    SAYW            reduce using rule 47 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 47 (seen_CC_IF -> .)
    IDV             reduce using rule 47 (seen_CC_IF -> .)
    CC              reduce using rule 47 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 229
    CONDITION2                     shift and go to state 230

state 221

    (42) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC CONDITION2
    (44) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 . CC seen_CC_IF

    CC              shift and go to state 231


state 222

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO . LOOP2 CP seen_CP_LOOP2 OC CC
    (133) LOOP2 -> . seen_INT_LOOP
    (134) LOOP2 -> . seen_FLOAT_LOOP
    (135) seen_INT_LOOP -> . INT
    (136) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 212
    FLOAT           shift and go to state 209

    seen_FLOAT_LOOP                shift and go to state 211
    LOOP2                          shift and go to state 232
    seen_INT_LOOP                  shift and go to state 210

state 223

    (118) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 224

    (119) CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .

    RETURNW         reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    LOOPW           reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    IF              reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    ASKUSER         reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    SAYW            reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    IDV             reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)
    CC              reduce using rule 119 (CALLBOX -> CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC .)


state 225

    (123) PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS .

    CP              reduce using rule 123 (PARAMETERS -> SEEN_EXPRESSION_PARAM COMMA PARAMETERS .)


state 226

    (142) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .

    RETURNW         reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPW           reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    LOOPIFW         reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IF              reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    ASKUSER         reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    SAYW            reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CALLBOXW        reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    IDV             reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)
    CC              reduce using rule 142 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC .)


state 227

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 . CC

    CC              shift and go to state 233


state 228

    (48) CONDITION2 -> ELSE . seen_ELSE OC CONDITION3
    (51) seen_ELSE -> .

    OC              reduce using rule 51 (seen_ELSE -> .)

    seen_ELSE                      shift and go to state 234

state 229

    (45) CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .

    RETURNW         reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPW           reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    LOOPIFW         reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IF              reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    ASKUSER         reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    SAYW            reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CALLBOXW        reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    IDV             reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)
    CC              reduce using rule 45 (CONDITION -> IF OP STM CP OC seen_OC_IF CC seen_CC_IF .)


state 230

    (43) CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .

    RETURNW         reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPW           reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    LOOPIFW         reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IF              reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    ASKUSER         reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    SAYW            reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CALLBOXW        reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    IDV             reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)
    CC              reduce using rule 43 (CONDITION -> IF OP STM CP OC seen_OC_IF CC CONDITION2 .)


state 231

    (42) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . CONDITION2
    (44) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC . seen_CC_IF
    (48) CONDITION2 -> . ELSE seen_ELSE OC CONDITION3
    (47) seen_CC_IF -> .

    ELSE            shift and go to state 228
    RETURNW         reduce using rule 47 (seen_CC_IF -> .)
    LOOPW           reduce using rule 47 (seen_CC_IF -> .)
    LOOPIFW         reduce using rule 47 (seen_CC_IF -> .)
    IF              reduce using rule 47 (seen_CC_IF -> .)
    ASKUSER         reduce using rule 47 (seen_CC_IF -> .)
    SAYW            reduce using rule 47 (seen_CC_IF -> .)
    CALLBOXW        reduce using rule 47 (seen_CC_IF -> .)
    IDV             reduce using rule 47 (seen_CC_IF -> .)
    CC              reduce using rule 47 (seen_CC_IF -> .)

    seen_CC_IF                     shift and go to state 235
    CONDITION2                     shift and go to state 236

state 232

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 . CP seen_CP_LOOP2 OC CC

    BY              shift and go to state 238
    CP              shift and go to state 237


state 233

    (141) LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .

    RETURNW         reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPW           reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IF              reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    SAYW            reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    IDV             reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)
    CC              reduce using rule 141 (LOOPIF -> LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC .)


state 234

    (48) CONDITION2 -> ELSE seen_ELSE . OC CONDITION3

    OC              shift and go to state 239


state 235

    (44) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .

    RETURNW         reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPW           reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    LOOPIFW         reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IF              reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    ASKUSER         reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    SAYW            reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CALLBOXW        reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    IDV             reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)
    CC              reduce using rule 44 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF .)


state 236

    (42) CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 42 (CONDITION -> IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2 .)


state 237

    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC BLOCKS2 CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP . seen_CP_LOOP2 OC CC
    (131) seen_CP_LOOP2 -> .

    OC              reduce using rule 131 (seen_CP_LOOP2 -> .)

    seen_CP_LOOP2                  shift and go to state 240

state 238

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (137) LOOP3 -> . PLUS
    (138) LOOP3 -> . MINUS
    (139) LOOP3 -> .

    PLUS            shift and go to state 242
    MINUS           shift and go to state 241
    INT             reduce using rule 139 (LOOP3 -> .)
    FLOAT           reduce using rule 139 (LOOP3 -> .)

    LOOP3                          shift and go to state 243

state 239

    (48) CONDITION2 -> ELSE seen_ELSE OC . CONDITION3
    (49) CONDITION3 -> . BLOCKS2 CC seen_CC_ELSE
    (50) CONDITION3 -> . CC seen_CC_ELSE
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 244
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    CONDITION3                     shift and go to state 245
    BLOCKS2                        shift and go to state 246
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 240

    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC BLOCKS2 CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 . OC CC

    OC              shift and go to state 247


state 241

    (138) LOOP3 -> MINUS .

    INT             reduce using rule 138 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 138 (LOOP3 -> MINUS .)


state 242

    (137) LOOP3 -> PLUS .

    INT             reduce using rule 137 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 137 (LOOP3 -> PLUS .)


state 243

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP seen_CP_LOOP1 OC CC
    (133) LOOP2 -> . seen_INT_LOOP
    (134) LOOP2 -> . seen_FLOAT_LOOP
    (135) seen_INT_LOOP -> . INT
    (136) seen_FLOAT_LOOP -> . FLOAT

    INT             shift and go to state 212
    FLOAT           shift and go to state 209

    seen_FLOAT_LOOP                shift and go to state 211
    LOOP2                          shift and go to state 248
    seen_INT_LOOP                  shift and go to state 210

state 244

    (50) CONDITION3 -> CC . seen_CC_ELSE
    (52) seen_CC_ELSE -> .

    RETURNW         reduce using rule 52 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 52 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 52 (seen_CC_ELSE -> .)
    IF              reduce using rule 52 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 52 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 52 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 52 (seen_CC_ELSE -> .)
    IDV             reduce using rule 52 (seen_CC_ELSE -> .)
    CC              reduce using rule 52 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 249

state 245

    (48) CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .

    RETURNW         reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPW           reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    LOOPIFW         reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IF              reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    ASKUSER         reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    SAYW            reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CALLBOXW        reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    IDV             reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)
    CC              reduce using rule 48 (CONDITION2 -> ELSE seen_ELSE OC CONDITION3 .)


state 246

    (49) CONDITION3 -> BLOCKS2 . CC seen_CC_ELSE

    CC              shift and go to state 250


state 247

    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . BLOCKS2 CC
    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC . CC
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 251
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 252
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 248

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP seen_CP_LOOP1 OC CC

    CP              shift and go to state 253


state 249

    (50) CONDITION3 -> CC seen_CC_ELSE .

    RETURNW         reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPW           reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    IF              reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    SAYW            reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    IDV             reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)
    CC              reduce using rule 50 (CONDITION3 -> CC seen_CC_ELSE .)


state 250

    (49) CONDITION3 -> BLOCKS2 CC . seen_CC_ELSE
    (52) seen_CC_ELSE -> .

    RETURNW         reduce using rule 52 (seen_CC_ELSE -> .)
    LOOPW           reduce using rule 52 (seen_CC_ELSE -> .)
    LOOPIFW         reduce using rule 52 (seen_CC_ELSE -> .)
    IF              reduce using rule 52 (seen_CC_ELSE -> .)
    ASKUSER         reduce using rule 52 (seen_CC_ELSE -> .)
    SAYW            reduce using rule 52 (seen_CC_ELSE -> .)
    CALLBOXW        reduce using rule 52 (seen_CC_ELSE -> .)
    IDV             reduce using rule 52 (seen_CC_ELSE -> .)
    CC              reduce using rule 52 (seen_CC_ELSE -> .)

    seen_CC_ELSE                   shift and go to state 254

state 251

    (129) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .

    RETURNW         reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPW           reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    LOOPIFW         reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IF              reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    ASKUSER         reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    SAYW            reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CALLBOXW        reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    IDV             reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)
    CC              reduce using rule 129 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC .)


state 252

    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 . CC

    CC              shift and go to state 255


state 253

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . seen_CP_LOOP1 OC CC
    (130) seen_CP_LOOP1 -> .

    OC              reduce using rule 130 (seen_CP_LOOP1 -> .)

    seen_CP_LOOP1                  shift and go to state 256

state 254

    (49) CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .

    RETURNW         reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPW           reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    LOOPIFW         reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IF              reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    ASKUSER         reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    SAYW            reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CALLBOXW        reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    IDV             reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)
    CC              reduce using rule 49 (CONDITION3 -> BLOCKS2 CC seen_CC_ELSE .)


state 255

    (127) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .

    RETURNW         reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IF              reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    SAYW            reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    IDV             reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)
    CC              reduce using rule 127 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC .)


state 256

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 . OC CC

    OC              shift and go to state 257


state 257

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . BLOCKS2 CC
    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC . CC
    (32) BLOCKS2 -> . CODE
    (33) BLOCKS2 -> . CODE BLOCKS2
    (34) CODE -> . RETURN
    (35) CODE -> . ASSIGNATION
    (36) CODE -> . LOOP
    (37) CODE -> . LOOPIF
    (38) CODE -> . CONDITION
    (39) CODE -> . ASK
    (40) CODE -> . SAY
    (41) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EXPRESSION PC
    (79) ASSIGNATION -> . seen_ID_ASSIGNATION start_ARRAY seen_ARRAY_CTE end_ARRAY EQUALS EXPRESSION PC
    (80) ASSIGNATION -> . seen_ID_ASSIGNATION EQUALS EXPRESSION PC
    (126) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC
    (127) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC BLOCKS2 CC
    (128) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC
    (129) LOOP -> . LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 CP seen_CP_LOOP2 OC CC
    (141) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC BLOCKS2 CC
    (142) LOOPIF -> . LOOPIFW seen_LOOPIF OP STM CP seen_CP_LOOPIF OC CC
    (42) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC CONDITION2
    (43) CONDITION -> . IF OP STM CP OC seen_OC_IF CC CONDITION2
    (44) CONDITION -> . IF OP STM CP OC seen_OC_IF BLOCKS2 CC seen_CC_IF
    (45) CONDITION -> . IF OP STM CP OC seen_OC_IF CC seen_CC_IF
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (114) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL COMMA SEEN_CALL PARAMETERS CP PC
    (120) CALLBOX -> . CALLBOXW OP SEEN_IDM_CALL CP PC
    (81) seen_ID_ASSIGNATION -> . IDV

    CC              shift and go to state 258
    RETURNW         shift and go to state 95
    LOOPW           shift and go to state 97
    LOOPIFW         shift and go to state 94
    IF              shift and go to state 96
    ASKUSER         shift and go to state 98
    SAYW            shift and go to state 82
    CALLBOXW        shift and go to state 88
    IDV             shift and go to state 86

    CODE                           shift and go to state 83
    RETURN                         shift and go to state 84
    seen_ID_ASSIGNATION            shift and go to state 87
    SAY                            shift and go to state 89
    ASK                            shift and go to state 90
    CONDITION                      shift and go to state 91
    ASSIGNATION                    shift and go to state 92
    BLOCKS2                        shift and go to state 259
    CALLBOX                        shift and go to state 100
    LOOPIF                         shift and go to state 101
    LOOP                           shift and go to state 102

state 258

    (128) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .

    RETURNW         reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPW           reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    LOOPIFW         reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IF              reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    ASKUSER         reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    SAYW            reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CALLBOXW        reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    IDV             reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)
    CC              reduce using rule 128 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC CC .)


state 259

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 . CC

    CC              shift and go to state 260


state 260

    (126) LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .

    RETURNW         reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPW           reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IF              reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    SAYW            reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    IDV             reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)
    CC              reduce using rule 126 (LOOP -> LOOPW seen_LOOP OP seen_VAR_LOOP FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP seen_CP_LOOP1 OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 76 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 76 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 76 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 76 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 76 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 76 resolved as shift
WARNING: shift/reduce conflict for IDV in state 76 resolved as shift
