Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> BOXES
Rule 1     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
Rule 2     BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC
Rule 3     seen_globalvars -> <empty>
Rule 4     VARS -> VARI VARS
Rule 5     VARS -> VARF VARS
Rule 6     VARS -> VARST VARS
Rule 7     VARS -> VARL VARS
Rule 8     VARS -> <empty>
Rule 9     VARF -> VARFSMALL VARF3 PC
Rule 10    VARF3 -> IDV EQUALS FLOAT COMMA VARF3
Rule 11    VARF3 -> IDV EQUALS FLOAT
Rule 12    VARF3 -> IDV COMMA VARF3
Rule 13    VARF3 -> IDV
Rule 14    VARI -> VARISMALL VARI3 PC
Rule 15    VARI3 -> IDV EQUALS INT COMMA VARI3
Rule 16    VARI3 -> IDV EQUALS INT
Rule 17    VARI3 -> IDV COMMA VARI3
Rule 18    VARI3 -> IDV
Rule 19    VARST -> VARSTSMALL VARST3 PC
Rule 20    VARST3 -> IDV EQUALS STRING COMMA VARST3
Rule 21    VARST3 -> IDV EQUALS STRING
Rule 22    VARST3 -> IDV COMMA VARST3
Rule 23    VARST3 -> IDV
Rule 24    VARL -> VARLSMALL VARL3 PC
Rule 25    VARL3 -> IDV EQUALS OB VARL4 CB
Rule 26    VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3
Rule 27    VARL3 -> IDV COMMA VARL3
Rule 28    VARL3 -> IDV
Rule 29    VARL4 -> CTEL
Rule 30    VARL4 -> CTEL COMMA VARL4
Rule 31    VARL4 -> <empty>
Rule 32    BLOCKS -> OC VARS BLOCKS2 CC
Rule 33    BLOCKS -> OC VARS CC
Rule 34    BLOCKS -> OC BLOCKS2 CC
Rule 35    BLOCKS -> OC CC
Rule 36    BLOCKS2 -> CODE
Rule 37    BLOCKS2 -> CODE BLOCKS2
Rule 38    CODE -> RETURN
Rule 39    CODE -> ASSIGNATION
Rule 40    CODE -> LOOP
Rule 41    CODE -> LOOPIF
Rule 42    CODE -> CONDITION
Rule 43    CODE -> ASK
Rule 44    CODE -> SAY
Rule 45    CODE -> CALLBOX
Rule 46    CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
Rule 47    CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2
Rule 48    CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC
Rule 49    CONDITION -> IF OP STM CP OC seen_OC CC
Rule 50    seen_OC -> <empty>
Rule 51    CONDITION2 -> ELSE OC BLOCKS2 CC
Rule 52    CONDITION2 -> ELSE OC CC
Rule 53    STM -> EXPRESSION STM2 EXPRESSION
Rule 54    STM -> EXPRESSION
Rule 55    STM2 -> GT
Rule 56    STM2 -> GTE
Rule 57    STM2 -> LT
Rule 58    STM2 -> LTE
Rule 59    STM2 -> DOUBLEEQUALS
Rule 60    STM2 -> LTGT
Rule 61    PARAM -> PARAM2 IDV
Rule 62    PARAM2 -> VARISMALL
Rule 63    PARAM2 -> VARSTSMALL
Rule 64    PARAM2 -> VARFSMALL
Rule 65    PARAM2 -> VARLSMALL
Rule 66    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS
Rule 67    METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
Rule 68    seen_IDM -> IDM
Rule 69    METHODS2 -> RECURSIVEBOX
Rule 70    METHODS2 -> VOIDBOX
Rule 71    METHODS2 -> VARIBOX
Rule 72    METHODS2 -> VARFBOX
Rule 73    METHODS2 -> VARSBOX
Rule 74    METHODS2 -> VARLBOX
Rule 75    METHODS3 -> PARAM COMMA METHODS3
Rule 76    METHODS3 -> PARAM
Rule 77    METHODS3 -> <empty>
Rule 78    RETURN -> RETURNW EQUALS PC
Rule 79    ASSIGNATION -> IDV EQUALS EXPRESSION PC
Rule 80    EXPRESSION -> OPER seen_EXPF
Rule 81    EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION
Rule 82    seen_EXPF -> <empty>
Rule 83    seen_OPER -> PLUS
Rule 84    seen_OPER -> MINUS
Rule 85    OPER -> TERM seen_TERMF
Rule 86    OPER -> TERM seen_TERMF seen_TERM OPER
Rule 87    seen_TERMF -> <empty>
Rule 88    seen_TERM -> MULTIPLY
Rule 89    seen_TERM -> DIVISION
Rule 90    TERM -> OP seen_OP_TERM EXPRESSION CP
Rule 91    TERM -> TERM2
Rule 92    seen_OP_TERM -> <empty>
Rule 93    TERM2 -> CTE
Rule 94    TERM2 -> PLUS CTE
Rule 95    TERM2 -> MINUS CTE
Rule 96    CTE -> INT seen_INT
Rule 97    CTE -> FLOAT seen_FLOAT
Rule 98    CTE -> STRING seen_STRING
Rule 99    CTE -> seen_ID
Rule 100   seen_INT -> <empty>
Rule 101   seen_FLOAT -> <empty>
Rule 102   seen_STRING -> <empty>
Rule 103   seen_ID -> IDV
Rule 104   seen_ID -> IDV OB INT CB
Rule 105   CTEL -> INT
Rule 106   CTEL -> FLOAT
Rule 107   CTEL -> STRING
Rule 108   CTEL -> IDV
Rule 109   CTEL -> IDV OB INT CB
Rule 110   CTEL2 -> CTEL CB seen_CB
Rule 111   CTEL2 -> CTEL COMMA CTEL2
Rule 112   CTEL2 -> CB seen_CB
Rule 113   seen_OB -> <empty>
Rule 114   seen_CB -> <empty>
Rule 115   SAY -> SAYW OP CONCAT CP PC
Rule 116   CONCAT -> EXPRESSION DOT CONCAT
Rule 117   CONCAT -> EXPRESSION
Rule 118   ASK -> ASKUSER OP STRING COMMA IDV CP PC
Rule 119   CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC
Rule 120   PARAMETERS -> EXPRESSION COMMA PARAMETERS
Rule 121   PARAMETERS -> EXPRESSION
Rule 122   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
Rule 123   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
Rule 124   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
Rule 125   LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
Rule 126   LOOP2 -> INT
Rule 127   LOOP2 -> FLOAT
Rule 128   LOOP3 -> PLUS
Rule 129   LOOP3 -> MINUS
Rule 130   LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
Rule 131   LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC

Terminals, with rules where they appear

ASKUSER              : 118
BOX                  : 1 2
BY                   : 122 124
CALLBOXW             : 119
CB                   : 25 26 104 109 110 112
CC                   : 1 2 32 33 34 35 46 47 48 49 51 52 122 123 124 125 130 131
COMMA                : 10 12 15 17 20 22 26 27 30 75 111 118 119 120
CP                   : 1 2 46 47 48 49 66 67 90 115 118 119 122 123 124 125 130 131
DIVISION             : 89
DOT                  : 116
DOUBLEEQUALS         : 59
ELSE                 : 51 52
EQUALS               : 10 11 15 16 20 21 25 26 78 79
FLOAT                : 10 11 97 106 127
FROM                 : 122 123 124 125
GT                   : 55
GTE                  : 56
IDM                  : 68 119
IDV                  : 10 11 12 13 15 16 17 18 20 21 22 23 25 26 27 28 61 79 103 104 108 109 118 122 123 124 125
IF                   : 46 47 48 49
INT                  : 15 16 96 104 105 109 126
LOOPIFW              : 130 131
LOOPW                : 122 123 124 125
LT                   : 57
LTE                  : 58
LTGT                 : 60
MAINBOX              : 1 2
MINUS                : 84 95 129
MULTIPLY             : 88
OB                   : 25 26 104 109
OC                   : 1 2 32 33 34 35 46 47 48 49 51 52 122 123 124 125 130 131
OP                   : 1 2 46 47 48 49 66 67 90 115 118 119 122 123 124 125 130 131
PC                   : 9 14 19 24 78 79 115 118 119
PLUS                 : 83 94 128
RECURSIVEBOX         : 69
RETURNW              : 78
SAYW                 : 115
STRING               : 20 21 98 107 118
TO                   : 122 123 124 125
VARFBOX              : 72
VARFSMALL            : 9 64
VARIBOX              : 71
VARISMALL            : 14 62
VARLBOX              : 74
VARLSMALL            : 24 65
VARSBOX              : 73
VARSTSMALL           : 19 63
VOIDBOX              : 70
error                : 

Nonterminals, with rules where they appear

ASK                  : 43
ASSIGNATION          : 39
BLOCKS               : 1 2 66 67
BLOCKS2              : 32 34 37 46 48 51 122 123 130
BOXES                : 0
CALLBOX              : 45
CODE                 : 36 37
CONCAT               : 115 116
CONDITION            : 42
CONDITION2           : 46 47
CTE                  : 93 94 95
CTEL                 : 29 30 110 111
CTEL2                : 111
EXPRESSION           : 53 53 54 79 81 90 116 117 120 121 130 131
LOOP                 : 40
LOOP2                : 122 122 122 123 123 124 124 124 125 125
LOOP3                : 122 124
LOOPIF               : 41
METHODS              : 1 67
METHODS2             : 66 67
METHODS3             : 66 67 75
OPER                 : 80 81 86
PARAM                : 75 76
PARAM2               : 61
PARAMETERS           : 119 120
RETURN               : 38
SAY                  : 44
STM                  : 46 47 48 49
STM2                 : 53
TERM                 : 85 86
TERM2                : 91
VARF                 : 5
VARF3                : 9 10 12
VARI                 : 4
VARI3                : 14 15 17
VARL                 : 7
VARL3                : 24 26 27
VARL4                : 25 26 30
VARS                 : 1 2 4 5 6 7 32 33
VARST                : 6
VARST3               : 19 20 22
seen_CB              : 110 112
seen_EXPF            : 80 81
seen_FLOAT           : 97
seen_ID              : 99
seen_IDM             : 66 67
seen_INT             : 96
seen_OB              : 
seen_OC              : 46 47 48 49
seen_OPER            : 81
seen_OP_TERM         : 90
seen_STRING          : 98
seen_TERM            : 86
seen_TERMF           : 85 86
seen_globalvars      : 1 2

Parsing method: LALR

state 0

    (0) S' -> . BOXES
    (1) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> . BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    BOX             shift and go to state 1

    BOXES                          shift and go to state 2

state 1

    (1) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX . OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC

    OC              shift and go to state 3


state 2

    (0) S' -> BOXES .



state 3

    (1) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC . VARS seen_globalvars MAINBOX OP CP BLOCKS CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 4
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 4

    (1) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS . seen_globalvars MAINBOX OP CP BLOCKS CC
    (3) seen_globalvars -> .

    MAINBOX         reduce using rule 3 (seen_globalvars -> .)

    seen_globalvars                shift and go to state 13

state 5

    (5) VARS -> VARF . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 14
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 6

    (7) VARS -> VARL . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 15
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 7

    (24) VARL -> VARLSMALL . VARL3 PC
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 16

state 8

    (4) VARS -> VARI . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 18
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 9

    (19) VARST -> VARSTSMALL . VARST3 PC
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 19

state 10

    (6) VARS -> VARST . VARS
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC

    MAINBOX         reduce using rule 8 (VARS -> .)
    CC              reduce using rule 8 (VARS -> .)
    RETURNW         reduce using rule 8 (VARS -> .)
    IDV             reduce using rule 8 (VARS -> .)
    LOOPW           reduce using rule 8 (VARS -> .)
    LOOPIFW         reduce using rule 8 (VARS -> .)
    IF              reduce using rule 8 (VARS -> .)
    ASKUSER         reduce using rule 8 (VARS -> .)
    SAYW            reduce using rule 8 (VARS -> .)
    CALLBOXW        reduce using rule 8 (VARS -> .)
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7

    VARS                           shift and go to state 21
    VARF                           shift and go to state 5
    VARST                          shift and go to state 10
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8

state 11

    (14) VARI -> VARISMALL . VARI3 PC
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 23

state 12

    (9) VARF -> VARFSMALL . VARF3 PC
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 25

state 13

    (1) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars . MAINBOX OP CP BLOCKS CC

    MAINBOX         shift and go to state 26


state 14

    (5) VARS -> VARF VARS .

    MAINBOX         reduce using rule 5 (VARS -> VARF VARS .)
    CC              reduce using rule 5 (VARS -> VARF VARS .)
    RETURNW         reduce using rule 5 (VARS -> VARF VARS .)
    IDV             reduce using rule 5 (VARS -> VARF VARS .)
    LOOPW           reduce using rule 5 (VARS -> VARF VARS .)
    LOOPIFW         reduce using rule 5 (VARS -> VARF VARS .)
    IF              reduce using rule 5 (VARS -> VARF VARS .)
    ASKUSER         reduce using rule 5 (VARS -> VARF VARS .)
    SAYW            reduce using rule 5 (VARS -> VARF VARS .)
    CALLBOXW        reduce using rule 5 (VARS -> VARF VARS .)


state 15

    (7) VARS -> VARL VARS .

    MAINBOX         reduce using rule 7 (VARS -> VARL VARS .)
    CC              reduce using rule 7 (VARS -> VARL VARS .)
    RETURNW         reduce using rule 7 (VARS -> VARL VARS .)
    IDV             reduce using rule 7 (VARS -> VARL VARS .)
    LOOPW           reduce using rule 7 (VARS -> VARL VARS .)
    LOOPIFW         reduce using rule 7 (VARS -> VARL VARS .)
    IF              reduce using rule 7 (VARS -> VARL VARS .)
    ASKUSER         reduce using rule 7 (VARS -> VARL VARS .)
    SAYW            reduce using rule 7 (VARS -> VARL VARS .)
    CALLBOXW        reduce using rule 7 (VARS -> VARL VARS .)


state 16

    (24) VARL -> VARLSMALL VARL3 . PC

    PC              shift and go to state 27


state 17

    (25) VARL3 -> IDV . EQUALS OB VARL4 CB
    (26) VARL3 -> IDV . EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> IDV . COMMA VARL3
    (28) VARL3 -> IDV .

    EQUALS          shift and go to state 28
    COMMA           shift and go to state 29
    PC              reduce using rule 28 (VARL3 -> IDV .)


state 18

    (4) VARS -> VARI VARS .

    MAINBOX         reduce using rule 4 (VARS -> VARI VARS .)
    CC              reduce using rule 4 (VARS -> VARI VARS .)
    RETURNW         reduce using rule 4 (VARS -> VARI VARS .)
    IDV             reduce using rule 4 (VARS -> VARI VARS .)
    LOOPW           reduce using rule 4 (VARS -> VARI VARS .)
    LOOPIFW         reduce using rule 4 (VARS -> VARI VARS .)
    IF              reduce using rule 4 (VARS -> VARI VARS .)
    ASKUSER         reduce using rule 4 (VARS -> VARI VARS .)
    SAYW            reduce using rule 4 (VARS -> VARI VARS .)
    CALLBOXW        reduce using rule 4 (VARS -> VARI VARS .)


state 19

    (19) VARST -> VARSTSMALL VARST3 . PC

    PC              shift and go to state 30


state 20

    (20) VARST3 -> IDV . EQUALS STRING COMMA VARST3
    (21) VARST3 -> IDV . EQUALS STRING
    (22) VARST3 -> IDV . COMMA VARST3
    (23) VARST3 -> IDV .

    EQUALS          shift and go to state 32
    COMMA           shift and go to state 31
    PC              reduce using rule 23 (VARST3 -> IDV .)


state 21

    (6) VARS -> VARST VARS .

    MAINBOX         reduce using rule 6 (VARS -> VARST VARS .)
    CC              reduce using rule 6 (VARS -> VARST VARS .)
    RETURNW         reduce using rule 6 (VARS -> VARST VARS .)
    IDV             reduce using rule 6 (VARS -> VARST VARS .)
    LOOPW           reduce using rule 6 (VARS -> VARST VARS .)
    LOOPIFW         reduce using rule 6 (VARS -> VARST VARS .)
    IF              reduce using rule 6 (VARS -> VARST VARS .)
    ASKUSER         reduce using rule 6 (VARS -> VARST VARS .)
    SAYW            reduce using rule 6 (VARS -> VARST VARS .)
    CALLBOXW        reduce using rule 6 (VARS -> VARST VARS .)


state 22

    (15) VARI3 -> IDV . EQUALS INT COMMA VARI3
    (16) VARI3 -> IDV . EQUALS INT
    (17) VARI3 -> IDV . COMMA VARI3
    (18) VARI3 -> IDV .

    EQUALS          shift and go to state 34
    COMMA           shift and go to state 33
    PC              reduce using rule 18 (VARI3 -> IDV .)


state 23

    (14) VARI -> VARISMALL VARI3 . PC

    PC              shift and go to state 35


state 24

    (10) VARF3 -> IDV . EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> IDV . EQUALS FLOAT
    (12) VARF3 -> IDV . COMMA VARF3
    (13) VARF3 -> IDV .

    EQUALS          shift and go to state 37
    COMMA           shift and go to state 36
    PC              reduce using rule 13 (VARF3 -> IDV .)


state 25

    (9) VARF -> VARFSMALL VARF3 . PC

    PC              shift and go to state 38


state 26

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX . OP CP BLOCKS CC

    OP              shift and go to state 39


state 27

    (24) VARL -> VARLSMALL VARL3 PC .

    VARISMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARFSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARSTSMALL      reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    VARLSMALL       reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    MAINBOX         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CC              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    RETURNW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IDV             reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPW           reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    LOOPIFW         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    IF              reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    ASKUSER         reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    SAYW            reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)
    CALLBOXW        reduce using rule 24 (VARL -> VARLSMALL VARL3 PC .)


state 28

    (25) VARL3 -> IDV EQUALS . OB VARL4 CB
    (26) VARL3 -> IDV EQUALS . OB VARL4 CB COMMA VARL3

    OB              shift and go to state 40


state 29

    (27) VARL3 -> IDV COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 41

state 30

    (19) VARST -> VARSTSMALL VARST3 PC .

    VARISMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARFSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARSTSMALL      reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    VARLSMALL       reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    MAINBOX         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CC              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    RETURNW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IDV             reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPW           reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    LOOPIFW         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    IF              reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    ASKUSER         reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    SAYW            reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)
    CALLBOXW        reduce using rule 19 (VARST -> VARSTSMALL VARST3 PC .)


state 31

    (22) VARST3 -> IDV COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 42

state 32

    (20) VARST3 -> IDV EQUALS . STRING COMMA VARST3
    (21) VARST3 -> IDV EQUALS . STRING

    STRING          shift and go to state 43


state 33

    (17) VARI3 -> IDV COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 44

state 34

    (15) VARI3 -> IDV EQUALS . INT COMMA VARI3
    (16) VARI3 -> IDV EQUALS . INT

    INT             shift and go to state 45


state 35

    (14) VARI -> VARISMALL VARI3 PC .

    VARISMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARFSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARSTSMALL      reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    VARLSMALL       reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    MAINBOX         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CC              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    RETURNW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IDV             reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPW           reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    LOOPIFW         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    IF              reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    ASKUSER         reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    SAYW            reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)
    CALLBOXW        reduce using rule 14 (VARI -> VARISMALL VARI3 PC .)


state 36

    (12) VARF3 -> IDV COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 46

state 37

    (10) VARF3 -> IDV EQUALS . FLOAT COMMA VARF3
    (11) VARF3 -> IDV EQUALS . FLOAT

    FLOAT           shift and go to state 47


state 38

    (9) VARF -> VARFSMALL VARF3 PC .

    VARISMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARFSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARSTSMALL      reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    VARLSMALL       reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    MAINBOX         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CC              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    RETURNW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IDV             reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPW           reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    LOOPIFW         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    IF              reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    ASKUSER         reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    SAYW            reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)
    CALLBOXW        reduce using rule 9 (VARF -> VARFSMALL VARF3 PC .)


state 39

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP . CP BLOCKS CC

    CP              shift and go to state 48


state 40

    (25) VARL3 -> IDV EQUALS OB . VARL4 CB
    (26) VARL3 -> IDV EQUALS OB . VARL4 CB COMMA VARL3
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (105) CTEL -> . INT
    (106) CTEL -> . FLOAT
    (107) CTEL -> . STRING
    (108) CTEL -> . IDV
    (109) CTEL -> . IDV OB INT CB

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 53
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51

    CTEL                           shift and go to state 54
    VARL4                          shift and go to state 50

state 41

    (27) VARL3 -> IDV COMMA VARL3 .

    PC              reduce using rule 27 (VARL3 -> IDV COMMA VARL3 .)


state 42

    (22) VARST3 -> IDV COMMA VARST3 .

    PC              reduce using rule 22 (VARST3 -> IDV COMMA VARST3 .)


state 43

    (20) VARST3 -> IDV EQUALS STRING . COMMA VARST3
    (21) VARST3 -> IDV EQUALS STRING .

    COMMA           shift and go to state 55
    PC              reduce using rule 21 (VARST3 -> IDV EQUALS STRING .)


state 44

    (17) VARI3 -> IDV COMMA VARI3 .

    PC              reduce using rule 17 (VARI3 -> IDV COMMA VARI3 .)


state 45

    (15) VARI3 -> IDV EQUALS INT . COMMA VARI3
    (16) VARI3 -> IDV EQUALS INT .

    COMMA           shift and go to state 56
    PC              reduce using rule 16 (VARI3 -> IDV EQUALS INT .)


state 46

    (12) VARF3 -> IDV COMMA VARF3 .

    PC              reduce using rule 12 (VARF3 -> IDV COMMA VARF3 .)


state 47

    (10) VARF3 -> IDV EQUALS FLOAT . COMMA VARF3
    (11) VARF3 -> IDV EQUALS FLOAT .

    COMMA           shift and go to state 57
    PC              reduce using rule 11 (VARF3 -> IDV EQUALS FLOAT .)


state 48

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP . BLOCKS CC
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 59

    BLOCKS                         shift and go to state 58

state 49

    (107) CTEL -> STRING .

    COMMA           reduce using rule 107 (CTEL -> STRING .)
    CB              reduce using rule 107 (CTEL -> STRING .)


state 50

    (25) VARL3 -> IDV EQUALS OB VARL4 . CB
    (26) VARL3 -> IDV EQUALS OB VARL4 . CB COMMA VARL3

    CB              shift and go to state 60


state 51

    (108) CTEL -> IDV .
    (109) CTEL -> IDV . OB INT CB

    COMMA           reduce using rule 108 (CTEL -> IDV .)
    CB              reduce using rule 108 (CTEL -> IDV .)
    OB              shift and go to state 61


state 52

    (106) CTEL -> FLOAT .

    COMMA           reduce using rule 106 (CTEL -> FLOAT .)
    CB              reduce using rule 106 (CTEL -> FLOAT .)


state 53

    (105) CTEL -> INT .

    COMMA           reduce using rule 105 (CTEL -> INT .)
    CB              reduce using rule 105 (CTEL -> INT .)


state 54

    (29) VARL4 -> CTEL .
    (30) VARL4 -> CTEL . COMMA VARL4

    CB              reduce using rule 29 (VARL4 -> CTEL .)
    COMMA           shift and go to state 62


state 55

    (20) VARST3 -> IDV EQUALS STRING COMMA . VARST3
    (20) VARST3 -> . IDV EQUALS STRING COMMA VARST3
    (21) VARST3 -> . IDV EQUALS STRING
    (22) VARST3 -> . IDV COMMA VARST3
    (23) VARST3 -> . IDV

    IDV             shift and go to state 20

    VARST3                         shift and go to state 63

state 56

    (15) VARI3 -> IDV EQUALS INT COMMA . VARI3
    (15) VARI3 -> . IDV EQUALS INT COMMA VARI3
    (16) VARI3 -> . IDV EQUALS INT
    (17) VARI3 -> . IDV COMMA VARI3
    (18) VARI3 -> . IDV

    IDV             shift and go to state 22

    VARI3                          shift and go to state 64

state 57

    (10) VARF3 -> IDV EQUALS FLOAT COMMA . VARF3
    (10) VARF3 -> . IDV EQUALS FLOAT COMMA VARF3
    (11) VARF3 -> . IDV EQUALS FLOAT
    (12) VARF3 -> . IDV COMMA VARF3
    (13) VARF3 -> . IDV

    IDV             shift and go to state 24

    VARF3                          shift and go to state 65

state 58

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . METHODS CC
    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS . CC
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (67) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (69) METHODS2 -> . RECURSIVEBOX
    (70) METHODS2 -> . VOIDBOX
    (71) METHODS2 -> . VARIBOX
    (72) METHODS2 -> . VARFBOX
    (73) METHODS2 -> . VARSBOX
    (74) METHODS2 -> . VARLBOX

    CC              shift and go to state 68
    RECURSIVEBOX    shift and go to state 66
    VOIDBOX         shift and go to state 73
    VARIBOX         shift and go to state 72
    VARFBOX         shift and go to state 70
    VARSBOX         shift and go to state 71
    VARLBOX         shift and go to state 69

    METHODS                        shift and go to state 67
    METHODS2                       shift and go to state 74

state 59

    (32) BLOCKS -> OC . VARS BLOCKS2 CC
    (33) BLOCKS -> OC . VARS CC
    (34) BLOCKS -> OC . BLOCKS2 CC
    (35) BLOCKS -> OC . CC
    (4) VARS -> . VARI VARS
    (5) VARS -> . VARF VARS
    (6) VARS -> . VARST VARS
    (7) VARS -> . VARL VARS
    (8) VARS -> .
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (14) VARI -> . VARISMALL VARI3 PC
    (9) VARF -> . VARFSMALL VARF3 PC
    (19) VARST -> . VARSTSMALL VARST3 PC
    (24) VARL -> . VARLSMALL VARL3 PC
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

  ! shift/reduce conflict for CC resolved as shift
  ! shift/reduce conflict for RETURNW resolved as shift
  ! shift/reduce conflict for IDV resolved as shift
  ! shift/reduce conflict for LOOPW resolved as shift
  ! shift/reduce conflict for LOOPIFW resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASKUSER resolved as shift
  ! shift/reduce conflict for SAYW resolved as shift
  ! shift/reduce conflict for CALLBOXW resolved as shift
    CC              shift and go to state 85
    VARISMALL       shift and go to state 11
    VARFSMALL       shift and go to state 12
    VARSTSMALL      shift and go to state 9
    VARLSMALL       shift and go to state 7
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

  ! CC              [ reduce using rule 8 (VARS -> .) ]
  ! RETURNW         [ reduce using rule 8 (VARS -> .) ]
  ! IDV             [ reduce using rule 8 (VARS -> .) ]
  ! LOOPW           [ reduce using rule 8 (VARS -> .) ]
  ! LOOPIFW         [ reduce using rule 8 (VARS -> .) ]
  ! IF              [ reduce using rule 8 (VARS -> .) ]
  ! ASKUSER         [ reduce using rule 8 (VARS -> .) ]
  ! SAYW            [ reduce using rule 8 (VARS -> .) ]
  ! CALLBOXW        [ reduce using rule 8 (VARS -> .) ]

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    VARS                           shift and go to state 78
    VARF                           shift and go to state 5
    VARL                           shift and go to state 6
    VARI                           shift and go to state 8
    SAY                            shift and go to state 80
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    ASSIGNATION                    shift and go to state 83
    VARST                          shift and go to state 10
    BLOCKS2                        shift and go to state 90
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    LOOP                           shift and go to state 94

state 60

    (25) VARL3 -> IDV EQUALS OB VARL4 CB .
    (26) VARL3 -> IDV EQUALS OB VARL4 CB . COMMA VARL3

    PC              reduce using rule 25 (VARL3 -> IDV EQUALS OB VARL4 CB .)
    COMMA           shift and go to state 95


state 61

    (109) CTEL -> IDV OB . INT CB

    INT             shift and go to state 96


state 62

    (30) VARL4 -> CTEL COMMA . VARL4
    (29) VARL4 -> . CTEL
    (30) VARL4 -> . CTEL COMMA VARL4
    (31) VARL4 -> .
    (105) CTEL -> . INT
    (106) CTEL -> . FLOAT
    (107) CTEL -> . STRING
    (108) CTEL -> . IDV
    (109) CTEL -> . IDV OB INT CB

    CB              reduce using rule 31 (VARL4 -> .)
    INT             shift and go to state 53
    FLOAT           shift and go to state 52
    STRING          shift and go to state 49
    IDV             shift and go to state 51

    VARL4                          shift and go to state 97
    CTEL                           shift and go to state 54

state 63

    (20) VARST3 -> IDV EQUALS STRING COMMA VARST3 .

    PC              reduce using rule 20 (VARST3 -> IDV EQUALS STRING COMMA VARST3 .)


state 64

    (15) VARI3 -> IDV EQUALS INT COMMA VARI3 .

    PC              reduce using rule 15 (VARI3 -> IDV EQUALS INT COMMA VARI3 .)


state 65

    (10) VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .

    PC              reduce using rule 10 (VARF3 -> IDV EQUALS FLOAT COMMA VARF3 .)


state 66

    (69) METHODS2 -> RECURSIVEBOX .

    IDM             reduce using rule 69 (METHODS2 -> RECURSIVEBOX .)


state 67

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS . CC

    CC              shift and go to state 98


state 68

    (2) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .

    $end            reduce using rule 2 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS CC .)


state 69

    (74) METHODS2 -> VARLBOX .

    IDM             reduce using rule 74 (METHODS2 -> VARLBOX .)


state 70

    (72) METHODS2 -> VARFBOX .

    IDM             reduce using rule 72 (METHODS2 -> VARFBOX .)


state 71

    (73) METHODS2 -> VARSBOX .

    IDM             reduce using rule 73 (METHODS2 -> VARSBOX .)


state 72

    (71) METHODS2 -> VARIBOX .

    IDM             reduce using rule 71 (METHODS2 -> VARIBOX .)


state 73

    (70) METHODS2 -> VOIDBOX .

    IDM             reduce using rule 70 (METHODS2 -> VOIDBOX .)


state 74

    (66) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS
    (67) METHODS -> METHODS2 . seen_IDM OP METHODS3 CP BLOCKS METHODS
    (68) seen_IDM -> . IDM

    IDM             shift and go to state 100

    seen_IDM                       shift and go to state 99

state 75

    (115) SAY -> SAYW . OP CONCAT CP PC

    OP              shift and go to state 101


state 76

    (36) BLOCKS2 -> CODE .
    (37) BLOCKS2 -> CODE . BLOCKS2
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              reduce using rule 36 (BLOCKS2 -> CODE .)
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 102
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 77

    (38) CODE -> RETURN .

    RETURNW         reduce using rule 38 (CODE -> RETURN .)
    IDV             reduce using rule 38 (CODE -> RETURN .)
    LOOPW           reduce using rule 38 (CODE -> RETURN .)
    LOOPIFW         reduce using rule 38 (CODE -> RETURN .)
    IF              reduce using rule 38 (CODE -> RETURN .)
    ASKUSER         reduce using rule 38 (CODE -> RETURN .)
    SAYW            reduce using rule 38 (CODE -> RETURN .)
    CALLBOXW        reduce using rule 38 (CODE -> RETURN .)
    CC              reduce using rule 38 (CODE -> RETURN .)


state 78

    (32) BLOCKS -> OC VARS . BLOCKS2 CC
    (33) BLOCKS -> OC VARS . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 103
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 104
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 79

    (79) ASSIGNATION -> IDV . EQUALS EXPRESSION PC

    EQUALS          shift and go to state 105


state 80

    (44) CODE -> SAY .

    RETURNW         reduce using rule 44 (CODE -> SAY .)
    IDV             reduce using rule 44 (CODE -> SAY .)
    LOOPW           reduce using rule 44 (CODE -> SAY .)
    LOOPIFW         reduce using rule 44 (CODE -> SAY .)
    IF              reduce using rule 44 (CODE -> SAY .)
    ASKUSER         reduce using rule 44 (CODE -> SAY .)
    SAYW            reduce using rule 44 (CODE -> SAY .)
    CALLBOXW        reduce using rule 44 (CODE -> SAY .)
    CC              reduce using rule 44 (CODE -> SAY .)


state 81

    (43) CODE -> ASK .

    RETURNW         reduce using rule 43 (CODE -> ASK .)
    IDV             reduce using rule 43 (CODE -> ASK .)
    LOOPW           reduce using rule 43 (CODE -> ASK .)
    LOOPIFW         reduce using rule 43 (CODE -> ASK .)
    IF              reduce using rule 43 (CODE -> ASK .)
    ASKUSER         reduce using rule 43 (CODE -> ASK .)
    SAYW            reduce using rule 43 (CODE -> ASK .)
    CALLBOXW        reduce using rule 43 (CODE -> ASK .)
    CC              reduce using rule 43 (CODE -> ASK .)


state 82

    (42) CODE -> CONDITION .

    RETURNW         reduce using rule 42 (CODE -> CONDITION .)
    IDV             reduce using rule 42 (CODE -> CONDITION .)
    LOOPW           reduce using rule 42 (CODE -> CONDITION .)
    LOOPIFW         reduce using rule 42 (CODE -> CONDITION .)
    IF              reduce using rule 42 (CODE -> CONDITION .)
    ASKUSER         reduce using rule 42 (CODE -> CONDITION .)
    SAYW            reduce using rule 42 (CODE -> CONDITION .)
    CALLBOXW        reduce using rule 42 (CODE -> CONDITION .)
    CC              reduce using rule 42 (CODE -> CONDITION .)


state 83

    (39) CODE -> ASSIGNATION .

    RETURNW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IDV             reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPW           reduce using rule 39 (CODE -> ASSIGNATION .)
    LOOPIFW         reduce using rule 39 (CODE -> ASSIGNATION .)
    IF              reduce using rule 39 (CODE -> ASSIGNATION .)
    ASKUSER         reduce using rule 39 (CODE -> ASSIGNATION .)
    SAYW            reduce using rule 39 (CODE -> ASSIGNATION .)
    CALLBOXW        reduce using rule 39 (CODE -> ASSIGNATION .)
    CC              reduce using rule 39 (CODE -> ASSIGNATION .)


state 84

    (119) CALLBOX -> CALLBOXW . OP IDM COMMA PARAMETERS CP PC

    OP              shift and go to state 106


state 85

    (35) BLOCKS -> OC CC .

    RECURSIVEBOX    reduce using rule 35 (BLOCKS -> OC CC .)
    VOIDBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARIBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARFBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARSBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    VARLBOX         reduce using rule 35 (BLOCKS -> OC CC .)
    CC              reduce using rule 35 (BLOCKS -> OC CC .)


state 86

    (130) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> LOOPIFW . OP EXPRESSION CP OC CC

    OP              shift and go to state 107


state 87

    (78) RETURN -> RETURNW . EQUALS PC

    EQUALS          shift and go to state 108


state 88

    (46) CONDITION -> IF . OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF . OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> IF . OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> IF . OP STM CP OC seen_OC CC

    OP              shift and go to state 109


state 89

    (122) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW . OP IDV FROM LOOP2 TO LOOP2 CP OC CC

    OP              shift and go to state 110


state 90

    (34) BLOCKS -> OC BLOCKS2 . CC

    CC              shift and go to state 111


state 91

    (45) CODE -> CALLBOX .

    RETURNW         reduce using rule 45 (CODE -> CALLBOX .)
    IDV             reduce using rule 45 (CODE -> CALLBOX .)
    LOOPW           reduce using rule 45 (CODE -> CALLBOX .)
    LOOPIFW         reduce using rule 45 (CODE -> CALLBOX .)
    IF              reduce using rule 45 (CODE -> CALLBOX .)
    ASKUSER         reduce using rule 45 (CODE -> CALLBOX .)
    SAYW            reduce using rule 45 (CODE -> CALLBOX .)
    CALLBOXW        reduce using rule 45 (CODE -> CALLBOX .)
    CC              reduce using rule 45 (CODE -> CALLBOX .)


state 92

    (41) CODE -> LOOPIF .

    RETURNW         reduce using rule 41 (CODE -> LOOPIF .)
    IDV             reduce using rule 41 (CODE -> LOOPIF .)
    LOOPW           reduce using rule 41 (CODE -> LOOPIF .)
    LOOPIFW         reduce using rule 41 (CODE -> LOOPIF .)
    IF              reduce using rule 41 (CODE -> LOOPIF .)
    ASKUSER         reduce using rule 41 (CODE -> LOOPIF .)
    SAYW            reduce using rule 41 (CODE -> LOOPIF .)
    CALLBOXW        reduce using rule 41 (CODE -> LOOPIF .)
    CC              reduce using rule 41 (CODE -> LOOPIF .)


state 93

    (118) ASK -> ASKUSER . OP STRING COMMA IDV CP PC

    OP              shift and go to state 112


state 94

    (40) CODE -> LOOP .

    RETURNW         reduce using rule 40 (CODE -> LOOP .)
    IDV             reduce using rule 40 (CODE -> LOOP .)
    LOOPW           reduce using rule 40 (CODE -> LOOP .)
    LOOPIFW         reduce using rule 40 (CODE -> LOOP .)
    IF              reduce using rule 40 (CODE -> LOOP .)
    ASKUSER         reduce using rule 40 (CODE -> LOOP .)
    SAYW            reduce using rule 40 (CODE -> LOOP .)
    CALLBOXW        reduce using rule 40 (CODE -> LOOP .)
    CC              reduce using rule 40 (CODE -> LOOP .)


state 95

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA . VARL3
    (25) VARL3 -> . IDV EQUALS OB VARL4 CB
    (26) VARL3 -> . IDV EQUALS OB VARL4 CB COMMA VARL3
    (27) VARL3 -> . IDV COMMA VARL3
    (28) VARL3 -> . IDV

    IDV             shift and go to state 17

    VARL3                          shift and go to state 113

state 96

    (109) CTEL -> IDV OB INT . CB

    CB              shift and go to state 114


state 97

    (30) VARL4 -> CTEL COMMA VARL4 .

    CB              reduce using rule 30 (VARL4 -> CTEL COMMA VARL4 .)


state 98

    (1) BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .

    $end            reduce using rule 1 (BOXES -> BOX OC VARS seen_globalvars MAINBOX OP CP BLOCKS METHODS CC .)


state 99

    (66) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS
    (67) METHODS -> METHODS2 seen_IDM . OP METHODS3 CP BLOCKS METHODS

    OP              shift and go to state 115


state 100

    (68) seen_IDM -> IDM .

    OP              reduce using rule 68 (seen_IDM -> IDM .)


state 101

    (115) SAY -> SAYW OP . CONCAT CP PC
    (116) CONCAT -> . EXPRESSION DOT CONCAT
    (117) CONCAT -> . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 124
    CONCAT                         shift and go to state 126

state 102

    (37) BLOCKS2 -> CODE BLOCKS2 .

    CC              reduce using rule 37 (BLOCKS2 -> CODE BLOCKS2 .)


state 103

    (33) BLOCKS -> OC VARS CC .

    RECURSIVEBOX    reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VOIDBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARIBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARFBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARSBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    VARLBOX         reduce using rule 33 (BLOCKS -> OC VARS CC .)
    CC              reduce using rule 33 (BLOCKS -> OC VARS CC .)


state 104

    (32) BLOCKS -> OC VARS BLOCKS2 . CC

    CC              shift and go to state 130


state 105

    (79) ASSIGNATION -> IDV EQUALS . EXPRESSION PC
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 131

state 106

    (119) CALLBOX -> CALLBOXW OP . IDM COMMA PARAMETERS CP PC

    IDM             shift and go to state 132


state 107

    (130) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> LOOPIFW OP . EXPRESSION CP OC CC
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 133

state 108

    (78) RETURN -> RETURNW EQUALS . PC

    PC              shift and go to state 134


state 109

    (46) CONDITION -> IF OP . STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP . STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> IF OP . STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> IF OP . STM CP OC seen_OC CC
    (53) STM -> . EXPRESSION STM2 EXPRESSION
    (54) STM -> . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    STM                            shift and go to state 136
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 135

state 110

    (122) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP . IDV FROM LOOP2 TO LOOP2 CP OC CC

    IDV             shift and go to state 137


state 111

    (34) BLOCKS -> OC BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VOIDBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARIBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARFBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARSBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    VARLBOX         reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)
    CC              reduce using rule 34 (BLOCKS -> OC BLOCKS2 CC .)


state 112

    (118) ASK -> ASKUSER OP . STRING COMMA IDV CP PC

    STRING          shift and go to state 138


state 113

    (26) VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .

    PC              reduce using rule 26 (VARL3 -> IDV EQUALS OB VARL4 CB COMMA VARL3 .)


state 114

    (109) CTEL -> IDV OB INT CB .

    COMMA           reduce using rule 109 (CTEL -> IDV OB INT CB .)
    CB              reduce using rule 109 (CTEL -> IDV OB INT CB .)


state 115

    (66) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS
    (67) METHODS -> METHODS2 seen_IDM OP . METHODS3 CP BLOCKS METHODS
    (75) METHODS3 -> . PARAM COMMA METHODS3
    (76) METHODS3 -> . PARAM
    (77) METHODS3 -> .
    (61) PARAM -> . PARAM2 IDV
    (62) PARAM2 -> . VARISMALL
    (63) PARAM2 -> . VARSTSMALL
    (64) PARAM2 -> . VARFSMALL
    (65) PARAM2 -> . VARLSMALL

    CP              reduce using rule 77 (METHODS3 -> .)
    VARISMALL       shift and go to state 140
    VARSTSMALL      shift and go to state 141
    VARFSMALL       shift and go to state 143
    VARLSMALL       shift and go to state 139

    PARAM                          shift and go to state 142
    PARAM2                         shift and go to state 144
    METHODS3                       shift and go to state 145

state 116

    (80) EXPRESSION -> OPER . seen_EXPF
    (81) EXPRESSION -> OPER . seen_EXPF seen_OPER EXPRESSION
    (82) seen_EXPF -> .

    PLUS            reduce using rule 82 (seen_EXPF -> .)
    MINUS           reduce using rule 82 (seen_EXPF -> .)
    DOT             reduce using rule 82 (seen_EXPF -> .)
    CP              reduce using rule 82 (seen_EXPF -> .)
    PC              reduce using rule 82 (seen_EXPF -> .)
    GT              reduce using rule 82 (seen_EXPF -> .)
    GTE             reduce using rule 82 (seen_EXPF -> .)
    LT              reduce using rule 82 (seen_EXPF -> .)
    LTE             reduce using rule 82 (seen_EXPF -> .)
    DOUBLEEQUALS    reduce using rule 82 (seen_EXPF -> .)
    LTGT            reduce using rule 82 (seen_EXPF -> .)
    COMMA           reduce using rule 82 (seen_EXPF -> .)

    seen_EXPF                      shift and go to state 146

state 117

    (103) seen_ID -> IDV .
    (104) seen_ID -> IDV . OB INT CB

    MULTIPLY        reduce using rule 103 (seen_ID -> IDV .)
    DIVISION        reduce using rule 103 (seen_ID -> IDV .)
    PLUS            reduce using rule 103 (seen_ID -> IDV .)
    MINUS           reduce using rule 103 (seen_ID -> IDV .)
    DOT             reduce using rule 103 (seen_ID -> IDV .)
    CP              reduce using rule 103 (seen_ID -> IDV .)
    PC              reduce using rule 103 (seen_ID -> IDV .)
    GT              reduce using rule 103 (seen_ID -> IDV .)
    GTE             reduce using rule 103 (seen_ID -> IDV .)
    LT              reduce using rule 103 (seen_ID -> IDV .)
    LTE             reduce using rule 103 (seen_ID -> IDV .)
    DOUBLEEQUALS    reduce using rule 103 (seen_ID -> IDV .)
    LTGT            reduce using rule 103 (seen_ID -> IDV .)
    COMMA           reduce using rule 103 (seen_ID -> IDV .)
    OB              shift and go to state 147


state 118

    (93) TERM2 -> CTE .

    MULTIPLY        reduce using rule 93 (TERM2 -> CTE .)
    DIVISION        reduce using rule 93 (TERM2 -> CTE .)
    PLUS            reduce using rule 93 (TERM2 -> CTE .)
    MINUS           reduce using rule 93 (TERM2 -> CTE .)
    DOT             reduce using rule 93 (TERM2 -> CTE .)
    CP              reduce using rule 93 (TERM2 -> CTE .)
    PC              reduce using rule 93 (TERM2 -> CTE .)
    GT              reduce using rule 93 (TERM2 -> CTE .)
    GTE             reduce using rule 93 (TERM2 -> CTE .)
    LT              reduce using rule 93 (TERM2 -> CTE .)
    LTE             reduce using rule 93 (TERM2 -> CTE .)
    DOUBLEEQUALS    reduce using rule 93 (TERM2 -> CTE .)
    LTGT            reduce using rule 93 (TERM2 -> CTE .)
    COMMA           reduce using rule 93 (TERM2 -> CTE .)


state 119

    (95) TERM2 -> MINUS . CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    CTE                            shift and go to state 148
    seen_ID                        shift and go to state 122

state 120

    (98) CTE -> STRING . seen_STRING
    (102) seen_STRING -> .

    MULTIPLY        reduce using rule 102 (seen_STRING -> .)
    DIVISION        reduce using rule 102 (seen_STRING -> .)
    PLUS            reduce using rule 102 (seen_STRING -> .)
    MINUS           reduce using rule 102 (seen_STRING -> .)
    DOT             reduce using rule 102 (seen_STRING -> .)
    CP              reduce using rule 102 (seen_STRING -> .)
    PC              reduce using rule 102 (seen_STRING -> .)
    GT              reduce using rule 102 (seen_STRING -> .)
    GTE             reduce using rule 102 (seen_STRING -> .)
    LT              reduce using rule 102 (seen_STRING -> .)
    LTE             reduce using rule 102 (seen_STRING -> .)
    DOUBLEEQUALS    reduce using rule 102 (seen_STRING -> .)
    LTGT            reduce using rule 102 (seen_STRING -> .)
    COMMA           reduce using rule 102 (seen_STRING -> .)

    seen_STRING                    shift and go to state 149

state 121

    (85) OPER -> TERM . seen_TERMF
    (86) OPER -> TERM . seen_TERMF seen_TERM OPER
    (87) seen_TERMF -> .

    MULTIPLY        reduce using rule 87 (seen_TERMF -> .)
    DIVISION        reduce using rule 87 (seen_TERMF -> .)
    PLUS            reduce using rule 87 (seen_TERMF -> .)
    MINUS           reduce using rule 87 (seen_TERMF -> .)
    DOT             reduce using rule 87 (seen_TERMF -> .)
    CP              reduce using rule 87 (seen_TERMF -> .)
    PC              reduce using rule 87 (seen_TERMF -> .)
    GT              reduce using rule 87 (seen_TERMF -> .)
    GTE             reduce using rule 87 (seen_TERMF -> .)
    LT              reduce using rule 87 (seen_TERMF -> .)
    LTE             reduce using rule 87 (seen_TERMF -> .)
    DOUBLEEQUALS    reduce using rule 87 (seen_TERMF -> .)
    LTGT            reduce using rule 87 (seen_TERMF -> .)
    COMMA           reduce using rule 87 (seen_TERMF -> .)

    seen_TERMF                     shift and go to state 150

state 122

    (99) CTE -> seen_ID .

    MULTIPLY        reduce using rule 99 (CTE -> seen_ID .)
    DIVISION        reduce using rule 99 (CTE -> seen_ID .)
    PLUS            reduce using rule 99 (CTE -> seen_ID .)
    MINUS           reduce using rule 99 (CTE -> seen_ID .)
    CP              reduce using rule 99 (CTE -> seen_ID .)
    GT              reduce using rule 99 (CTE -> seen_ID .)
    GTE             reduce using rule 99 (CTE -> seen_ID .)
    LT              reduce using rule 99 (CTE -> seen_ID .)
    LTE             reduce using rule 99 (CTE -> seen_ID .)
    DOUBLEEQUALS    reduce using rule 99 (CTE -> seen_ID .)
    LTGT            reduce using rule 99 (CTE -> seen_ID .)
    DOT             reduce using rule 99 (CTE -> seen_ID .)
    PC              reduce using rule 99 (CTE -> seen_ID .)
    COMMA           reduce using rule 99 (CTE -> seen_ID .)


state 123

    (94) TERM2 -> PLUS . CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    CTE                            shift and go to state 151
    seen_ID                        shift and go to state 122

state 124

    (116) CONCAT -> EXPRESSION . DOT CONCAT
    (117) CONCAT -> EXPRESSION .

    DOT             shift and go to state 152
    CP              reduce using rule 117 (CONCAT -> EXPRESSION .)


state 125

    (91) TERM -> TERM2 .

    MULTIPLY        reduce using rule 91 (TERM -> TERM2 .)
    DIVISION        reduce using rule 91 (TERM -> TERM2 .)
    PLUS            reduce using rule 91 (TERM -> TERM2 .)
    MINUS           reduce using rule 91 (TERM -> TERM2 .)
    PC              reduce using rule 91 (TERM -> TERM2 .)
    COMMA           reduce using rule 91 (TERM -> TERM2 .)
    CP              reduce using rule 91 (TERM -> TERM2 .)
    GT              reduce using rule 91 (TERM -> TERM2 .)
    GTE             reduce using rule 91 (TERM -> TERM2 .)
    LT              reduce using rule 91 (TERM -> TERM2 .)
    LTE             reduce using rule 91 (TERM -> TERM2 .)
    DOUBLEEQUALS    reduce using rule 91 (TERM -> TERM2 .)
    LTGT            reduce using rule 91 (TERM -> TERM2 .)
    DOT             reduce using rule 91 (TERM -> TERM2 .)


state 126

    (115) SAY -> SAYW OP CONCAT . CP PC

    CP              shift and go to state 153


state 127

    (96) CTE -> INT . seen_INT
    (100) seen_INT -> .

    MULTIPLY        reduce using rule 100 (seen_INT -> .)
    DIVISION        reduce using rule 100 (seen_INT -> .)
    PLUS            reduce using rule 100 (seen_INT -> .)
    MINUS           reduce using rule 100 (seen_INT -> .)
    DOT             reduce using rule 100 (seen_INT -> .)
    CP              reduce using rule 100 (seen_INT -> .)
    PC              reduce using rule 100 (seen_INT -> .)
    GT              reduce using rule 100 (seen_INT -> .)
    GTE             reduce using rule 100 (seen_INT -> .)
    LT              reduce using rule 100 (seen_INT -> .)
    LTE             reduce using rule 100 (seen_INT -> .)
    DOUBLEEQUALS    reduce using rule 100 (seen_INT -> .)
    LTGT            reduce using rule 100 (seen_INT -> .)
    COMMA           reduce using rule 100 (seen_INT -> .)

    seen_INT                       shift and go to state 154

state 128

    (97) CTE -> FLOAT . seen_FLOAT
    (101) seen_FLOAT -> .

    MULTIPLY        reduce using rule 101 (seen_FLOAT -> .)
    DIVISION        reduce using rule 101 (seen_FLOAT -> .)
    PLUS            reduce using rule 101 (seen_FLOAT -> .)
    MINUS           reduce using rule 101 (seen_FLOAT -> .)
    DOT             reduce using rule 101 (seen_FLOAT -> .)
    CP              reduce using rule 101 (seen_FLOAT -> .)
    PC              reduce using rule 101 (seen_FLOAT -> .)
    GT              reduce using rule 101 (seen_FLOAT -> .)
    GTE             reduce using rule 101 (seen_FLOAT -> .)
    LT              reduce using rule 101 (seen_FLOAT -> .)
    LTE             reduce using rule 101 (seen_FLOAT -> .)
    DOUBLEEQUALS    reduce using rule 101 (seen_FLOAT -> .)
    LTGT            reduce using rule 101 (seen_FLOAT -> .)
    COMMA           reduce using rule 101 (seen_FLOAT -> .)

    seen_FLOAT                     shift and go to state 155

state 129

    (90) TERM -> OP . seen_OP_TERM EXPRESSION CP
    (92) seen_OP_TERM -> .

    OP              reduce using rule 92 (seen_OP_TERM -> .)
    PLUS            reduce using rule 92 (seen_OP_TERM -> .)
    MINUS           reduce using rule 92 (seen_OP_TERM -> .)
    INT             reduce using rule 92 (seen_OP_TERM -> .)
    FLOAT           reduce using rule 92 (seen_OP_TERM -> .)
    STRING          reduce using rule 92 (seen_OP_TERM -> .)
    IDV             reduce using rule 92 (seen_OP_TERM -> .)

    seen_OP_TERM                   shift and go to state 156

state 130

    (32) BLOCKS -> OC VARS BLOCKS2 CC .

    RECURSIVEBOX    reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VOIDBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARIBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARFBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARSBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    VARLBOX         reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)
    CC              reduce using rule 32 (BLOCKS -> OC VARS BLOCKS2 CC .)


state 131

    (79) ASSIGNATION -> IDV EQUALS EXPRESSION . PC

    PC              shift and go to state 157


state 132

    (119) CALLBOX -> CALLBOXW OP IDM . COMMA PARAMETERS CP PC

    COMMA           shift and go to state 158


state 133

    (130) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC BLOCKS2 CC
    (131) LOOPIF -> LOOPIFW OP EXPRESSION . CP OC CC

    CP              shift and go to state 159


state 134

    (78) RETURN -> RETURNW EQUALS PC .

    RETURNW         reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    IDV             reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    LOOPW           reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    LOOPIFW         reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    IF              reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    ASKUSER         reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    SAYW            reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    CALLBOXW        reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)
    CC              reduce using rule 78 (RETURN -> RETURNW EQUALS PC .)


state 135

    (53) STM -> EXPRESSION . STM2 EXPRESSION
    (54) STM -> EXPRESSION .
    (55) STM2 -> . GT
    (56) STM2 -> . GTE
    (57) STM2 -> . LT
    (58) STM2 -> . LTE
    (59) STM2 -> . DOUBLEEQUALS
    (60) STM2 -> . LTGT

    CP              reduce using rule 54 (STM -> EXPRESSION .)
    GT              shift and go to state 160
    GTE             shift and go to state 161
    LT              shift and go to state 163
    LTE             shift and go to state 165
    DOUBLEEQUALS    shift and go to state 166
    LTGT            shift and go to state 164

    STM2                           shift and go to state 162

state 136

    (46) CONDITION -> IF OP STM . CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM . CP OC seen_OC CC CONDITION2
    (48) CONDITION -> IF OP STM . CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> IF OP STM . CP OC seen_OC CC

    CP              shift and go to state 167


state 137

    (122) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP IDV . FROM LOOP2 TO LOOP2 CP OC CC

    FROM            shift and go to state 168


state 138

    (118) ASK -> ASKUSER OP STRING . COMMA IDV CP PC

    COMMA           shift and go to state 169


state 139

    (65) PARAM2 -> VARLSMALL .

    IDV             reduce using rule 65 (PARAM2 -> VARLSMALL .)


state 140

    (62) PARAM2 -> VARISMALL .

    IDV             reduce using rule 62 (PARAM2 -> VARISMALL .)


state 141

    (63) PARAM2 -> VARSTSMALL .

    IDV             reduce using rule 63 (PARAM2 -> VARSTSMALL .)


state 142

    (75) METHODS3 -> PARAM . COMMA METHODS3
    (76) METHODS3 -> PARAM .

    COMMA           shift and go to state 170
    CP              reduce using rule 76 (METHODS3 -> PARAM .)


state 143

    (64) PARAM2 -> VARFSMALL .

    IDV             reduce using rule 64 (PARAM2 -> VARFSMALL .)


state 144

    (61) PARAM -> PARAM2 . IDV

    IDV             shift and go to state 171


state 145

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 . CP BLOCKS METHODS

    CP              shift and go to state 172


state 146

    (80) EXPRESSION -> OPER seen_EXPF .
    (81) EXPRESSION -> OPER seen_EXPF . seen_OPER EXPRESSION
    (83) seen_OPER -> . PLUS
    (84) seen_OPER -> . MINUS

    GT              reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    GTE             reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    LT              reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    LTE             reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    DOUBLEEQUALS    reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    LTGT            reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    CP              reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    DOT             reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    PC              reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    COMMA           reduce using rule 80 (EXPRESSION -> OPER seen_EXPF .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 175

    seen_OPER                      shift and go to state 174

state 147

    (104) seen_ID -> IDV OB . INT CB

    INT             shift and go to state 176


state 148

    (95) TERM2 -> MINUS CTE .

    MULTIPLY        reduce using rule 95 (TERM2 -> MINUS CTE .)
    DIVISION        reduce using rule 95 (TERM2 -> MINUS CTE .)
    PLUS            reduce using rule 95 (TERM2 -> MINUS CTE .)
    MINUS           reduce using rule 95 (TERM2 -> MINUS CTE .)
    DOT             reduce using rule 95 (TERM2 -> MINUS CTE .)
    CP              reduce using rule 95 (TERM2 -> MINUS CTE .)
    PC              reduce using rule 95 (TERM2 -> MINUS CTE .)
    GT              reduce using rule 95 (TERM2 -> MINUS CTE .)
    GTE             reduce using rule 95 (TERM2 -> MINUS CTE .)
    LT              reduce using rule 95 (TERM2 -> MINUS CTE .)
    LTE             reduce using rule 95 (TERM2 -> MINUS CTE .)
    DOUBLEEQUALS    reduce using rule 95 (TERM2 -> MINUS CTE .)
    LTGT            reduce using rule 95 (TERM2 -> MINUS CTE .)
    COMMA           reduce using rule 95 (TERM2 -> MINUS CTE .)


state 149

    (98) CTE -> STRING seen_STRING .

    MULTIPLY        reduce using rule 98 (CTE -> STRING seen_STRING .)
    DIVISION        reduce using rule 98 (CTE -> STRING seen_STRING .)
    PLUS            reduce using rule 98 (CTE -> STRING seen_STRING .)
    MINUS           reduce using rule 98 (CTE -> STRING seen_STRING .)
    CP              reduce using rule 98 (CTE -> STRING seen_STRING .)
    GT              reduce using rule 98 (CTE -> STRING seen_STRING .)
    GTE             reduce using rule 98 (CTE -> STRING seen_STRING .)
    LT              reduce using rule 98 (CTE -> STRING seen_STRING .)
    LTE             reduce using rule 98 (CTE -> STRING seen_STRING .)
    DOUBLEEQUALS    reduce using rule 98 (CTE -> STRING seen_STRING .)
    LTGT            reduce using rule 98 (CTE -> STRING seen_STRING .)
    DOT             reduce using rule 98 (CTE -> STRING seen_STRING .)
    PC              reduce using rule 98 (CTE -> STRING seen_STRING .)
    COMMA           reduce using rule 98 (CTE -> STRING seen_STRING .)


state 150

    (85) OPER -> TERM seen_TERMF .
    (86) OPER -> TERM seen_TERMF . seen_TERM OPER
    (88) seen_TERM -> . MULTIPLY
    (89) seen_TERM -> . DIVISION

    PLUS            reduce using rule 85 (OPER -> TERM seen_TERMF .)
    MINUS           reduce using rule 85 (OPER -> TERM seen_TERMF .)
    DOT             reduce using rule 85 (OPER -> TERM seen_TERMF .)
    CP              reduce using rule 85 (OPER -> TERM seen_TERMF .)
    PC              reduce using rule 85 (OPER -> TERM seen_TERMF .)
    GT              reduce using rule 85 (OPER -> TERM seen_TERMF .)
    GTE             reduce using rule 85 (OPER -> TERM seen_TERMF .)
    LT              reduce using rule 85 (OPER -> TERM seen_TERMF .)
    LTE             reduce using rule 85 (OPER -> TERM seen_TERMF .)
    DOUBLEEQUALS    reduce using rule 85 (OPER -> TERM seen_TERMF .)
    LTGT            reduce using rule 85 (OPER -> TERM seen_TERMF .)
    COMMA           reduce using rule 85 (OPER -> TERM seen_TERMF .)
    MULTIPLY        shift and go to state 179
    DIVISION        shift and go to state 177

    seen_TERM                      shift and go to state 178

state 151

    (94) TERM2 -> PLUS CTE .

    MULTIPLY        reduce using rule 94 (TERM2 -> PLUS CTE .)
    DIVISION        reduce using rule 94 (TERM2 -> PLUS CTE .)
    PLUS            reduce using rule 94 (TERM2 -> PLUS CTE .)
    MINUS           reduce using rule 94 (TERM2 -> PLUS CTE .)
    DOT             reduce using rule 94 (TERM2 -> PLUS CTE .)
    CP              reduce using rule 94 (TERM2 -> PLUS CTE .)
    PC              reduce using rule 94 (TERM2 -> PLUS CTE .)
    GT              reduce using rule 94 (TERM2 -> PLUS CTE .)
    GTE             reduce using rule 94 (TERM2 -> PLUS CTE .)
    LT              reduce using rule 94 (TERM2 -> PLUS CTE .)
    LTE             reduce using rule 94 (TERM2 -> PLUS CTE .)
    DOUBLEEQUALS    reduce using rule 94 (TERM2 -> PLUS CTE .)
    LTGT            reduce using rule 94 (TERM2 -> PLUS CTE .)
    COMMA           reduce using rule 94 (TERM2 -> PLUS CTE .)


state 152

    (116) CONCAT -> EXPRESSION DOT . CONCAT
    (116) CONCAT -> . EXPRESSION DOT CONCAT
    (117) CONCAT -> . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 124
    CONCAT                         shift and go to state 180

state 153

    (115) SAY -> SAYW OP CONCAT CP . PC

    PC              shift and go to state 181


state 154

    (96) CTE -> INT seen_INT .

    MULTIPLY        reduce using rule 96 (CTE -> INT seen_INT .)
    DIVISION        reduce using rule 96 (CTE -> INT seen_INT .)
    PLUS            reduce using rule 96 (CTE -> INT seen_INT .)
    MINUS           reduce using rule 96 (CTE -> INT seen_INT .)
    CP              reduce using rule 96 (CTE -> INT seen_INT .)
    GT              reduce using rule 96 (CTE -> INT seen_INT .)
    GTE             reduce using rule 96 (CTE -> INT seen_INT .)
    LT              reduce using rule 96 (CTE -> INT seen_INT .)
    LTE             reduce using rule 96 (CTE -> INT seen_INT .)
    DOUBLEEQUALS    reduce using rule 96 (CTE -> INT seen_INT .)
    LTGT            reduce using rule 96 (CTE -> INT seen_INT .)
    DOT             reduce using rule 96 (CTE -> INT seen_INT .)
    PC              reduce using rule 96 (CTE -> INT seen_INT .)
    COMMA           reduce using rule 96 (CTE -> INT seen_INT .)


state 155

    (97) CTE -> FLOAT seen_FLOAT .

    MULTIPLY        reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    DIVISION        reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    PLUS            reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    MINUS           reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    CP              reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    GT              reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    GTE             reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    LT              reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    LTE             reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    DOUBLEEQUALS    reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    LTGT            reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    DOT             reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    PC              reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)
    COMMA           reduce using rule 97 (CTE -> FLOAT seen_FLOAT .)


state 156

    (90) TERM -> OP seen_OP_TERM . EXPRESSION CP
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 182

state 157

    (79) ASSIGNATION -> IDV EQUALS EXPRESSION PC .

    RETURNW         reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IDV             reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPW           reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    LOOPIFW         reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    IF              reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    ASKUSER         reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    SAYW            reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CALLBOXW        reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)
    CC              reduce using rule 79 (ASSIGNATION -> IDV EQUALS EXPRESSION PC .)


state 158

    (119) CALLBOX -> CALLBOXW OP IDM COMMA . PARAMETERS CP PC
    (120) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (121) PARAMETERS -> . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    PARAMETERS                     shift and go to state 183
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 184

state 159

    (130) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC BLOCKS2 CC
    (131) LOOPIF -> LOOPIFW OP EXPRESSION CP . OC CC

    OC              shift and go to state 185


state 160

    (55) STM2 -> GT .

    OP              reduce using rule 55 (STM2 -> GT .)
    PLUS            reduce using rule 55 (STM2 -> GT .)
    MINUS           reduce using rule 55 (STM2 -> GT .)
    INT             reduce using rule 55 (STM2 -> GT .)
    FLOAT           reduce using rule 55 (STM2 -> GT .)
    STRING          reduce using rule 55 (STM2 -> GT .)
    IDV             reduce using rule 55 (STM2 -> GT .)


state 161

    (56) STM2 -> GTE .

    OP              reduce using rule 56 (STM2 -> GTE .)
    PLUS            reduce using rule 56 (STM2 -> GTE .)
    MINUS           reduce using rule 56 (STM2 -> GTE .)
    INT             reduce using rule 56 (STM2 -> GTE .)
    FLOAT           reduce using rule 56 (STM2 -> GTE .)
    STRING          reduce using rule 56 (STM2 -> GTE .)
    IDV             reduce using rule 56 (STM2 -> GTE .)


state 162

    (53) STM -> EXPRESSION STM2 . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 186

state 163

    (57) STM2 -> LT .

    OP              reduce using rule 57 (STM2 -> LT .)
    PLUS            reduce using rule 57 (STM2 -> LT .)
    MINUS           reduce using rule 57 (STM2 -> LT .)
    INT             reduce using rule 57 (STM2 -> LT .)
    FLOAT           reduce using rule 57 (STM2 -> LT .)
    STRING          reduce using rule 57 (STM2 -> LT .)
    IDV             reduce using rule 57 (STM2 -> LT .)


state 164

    (60) STM2 -> LTGT .

    OP              reduce using rule 60 (STM2 -> LTGT .)
    PLUS            reduce using rule 60 (STM2 -> LTGT .)
    MINUS           reduce using rule 60 (STM2 -> LTGT .)
    INT             reduce using rule 60 (STM2 -> LTGT .)
    FLOAT           reduce using rule 60 (STM2 -> LTGT .)
    STRING          reduce using rule 60 (STM2 -> LTGT .)
    IDV             reduce using rule 60 (STM2 -> LTGT .)


state 165

    (58) STM2 -> LTE .

    OP              reduce using rule 58 (STM2 -> LTE .)
    PLUS            reduce using rule 58 (STM2 -> LTE .)
    MINUS           reduce using rule 58 (STM2 -> LTE .)
    INT             reduce using rule 58 (STM2 -> LTE .)
    FLOAT           reduce using rule 58 (STM2 -> LTE .)
    STRING          reduce using rule 58 (STM2 -> LTE .)
    IDV             reduce using rule 58 (STM2 -> LTE .)


state 166

    (59) STM2 -> DOUBLEEQUALS .

    OP              reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    PLUS            reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    MINUS           reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    INT             reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    FLOAT           reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    STRING          reduce using rule 59 (STM2 -> DOUBLEEQUALS .)
    IDV             reduce using rule 59 (STM2 -> DOUBLEEQUALS .)


state 167

    (46) CONDITION -> IF OP STM CP . OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP . OC seen_OC CC CONDITION2
    (48) CONDITION -> IF OP STM CP . OC seen_OC BLOCKS2 CC
    (49) CONDITION -> IF OP STM CP . OC seen_OC CC

    OC              shift and go to state 187


state 168

    (122) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP IDV FROM . LOOP2 TO LOOP2 CP OC CC
    (126) LOOP2 -> . INT
    (127) LOOP2 -> . FLOAT

    INT             shift and go to state 189
    FLOAT           shift and go to state 188

    LOOP2                          shift and go to state 190

state 169

    (118) ASK -> ASKUSER OP STRING COMMA . IDV CP PC

    IDV             shift and go to state 191


state 170

    (75) METHODS3 -> PARAM COMMA . METHODS3
    (75) METHODS3 -> . PARAM COMMA METHODS3
    (76) METHODS3 -> . PARAM
    (77) METHODS3 -> .
    (61) PARAM -> . PARAM2 IDV
    (62) PARAM2 -> . VARISMALL
    (63) PARAM2 -> . VARSTSMALL
    (64) PARAM2 -> . VARFSMALL
    (65) PARAM2 -> . VARLSMALL

    CP              reduce using rule 77 (METHODS3 -> .)
    VARISMALL       shift and go to state 140
    VARSTSMALL      shift and go to state 141
    VARFSMALL       shift and go to state 143
    VARLSMALL       shift and go to state 139

    METHODS3                       shift and go to state 192
    PARAM                          shift and go to state 142
    PARAM2                         shift and go to state 144

state 171

    (61) PARAM -> PARAM2 IDV .

    COMMA           reduce using rule 61 (PARAM -> PARAM2 IDV .)
    CP              reduce using rule 61 (PARAM -> PARAM2 IDV .)


state 172

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP . BLOCKS METHODS
    (32) BLOCKS -> . OC VARS BLOCKS2 CC
    (33) BLOCKS -> . OC VARS CC
    (34) BLOCKS -> . OC BLOCKS2 CC
    (35) BLOCKS -> . OC CC

    OC              shift and go to state 59

    BLOCKS                         shift and go to state 193

state 173

    (83) seen_OPER -> PLUS .

    OP              reduce using rule 83 (seen_OPER -> PLUS .)
    PLUS            reduce using rule 83 (seen_OPER -> PLUS .)
    MINUS           reduce using rule 83 (seen_OPER -> PLUS .)
    INT             reduce using rule 83 (seen_OPER -> PLUS .)
    FLOAT           reduce using rule 83 (seen_OPER -> PLUS .)
    STRING          reduce using rule 83 (seen_OPER -> PLUS .)
    IDV             reduce using rule 83 (seen_OPER -> PLUS .)


state 174

    (81) EXPRESSION -> OPER seen_EXPF seen_OPER . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 194

state 175

    (84) seen_OPER -> MINUS .

    OP              reduce using rule 84 (seen_OPER -> MINUS .)
    PLUS            reduce using rule 84 (seen_OPER -> MINUS .)
    MINUS           reduce using rule 84 (seen_OPER -> MINUS .)
    INT             reduce using rule 84 (seen_OPER -> MINUS .)
    FLOAT           reduce using rule 84 (seen_OPER -> MINUS .)
    STRING          reduce using rule 84 (seen_OPER -> MINUS .)
    IDV             reduce using rule 84 (seen_OPER -> MINUS .)


state 176

    (104) seen_ID -> IDV OB INT . CB

    CB              shift and go to state 195


state 177

    (89) seen_TERM -> DIVISION .

    OP              reduce using rule 89 (seen_TERM -> DIVISION .)
    PLUS            reduce using rule 89 (seen_TERM -> DIVISION .)
    MINUS           reduce using rule 89 (seen_TERM -> DIVISION .)
    INT             reduce using rule 89 (seen_TERM -> DIVISION .)
    FLOAT           reduce using rule 89 (seen_TERM -> DIVISION .)
    STRING          reduce using rule 89 (seen_TERM -> DIVISION .)
    IDV             reduce using rule 89 (seen_TERM -> DIVISION .)


state 178

    (86) OPER -> TERM seen_TERMF seen_TERM . OPER
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 196
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118

state 179

    (88) seen_TERM -> MULTIPLY .

    OP              reduce using rule 88 (seen_TERM -> MULTIPLY .)
    PLUS            reduce using rule 88 (seen_TERM -> MULTIPLY .)
    MINUS           reduce using rule 88 (seen_TERM -> MULTIPLY .)
    INT             reduce using rule 88 (seen_TERM -> MULTIPLY .)
    FLOAT           reduce using rule 88 (seen_TERM -> MULTIPLY .)
    STRING          reduce using rule 88 (seen_TERM -> MULTIPLY .)
    IDV             reduce using rule 88 (seen_TERM -> MULTIPLY .)


state 180

    (116) CONCAT -> EXPRESSION DOT CONCAT .

    CP              reduce using rule 116 (CONCAT -> EXPRESSION DOT CONCAT .)


state 181

    (115) SAY -> SAYW OP CONCAT CP PC .

    RETURNW         reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    IDV             reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPW           reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    LOOPIFW         reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    IF              reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    ASKUSER         reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    SAYW            reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    CALLBOXW        reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)
    CC              reduce using rule 115 (SAY -> SAYW OP CONCAT CP PC .)


state 182

    (90) TERM -> OP seen_OP_TERM EXPRESSION . CP

    CP              shift and go to state 197


state 183

    (119) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS . CP PC

    CP              shift and go to state 198


state 184

    (120) PARAMETERS -> EXPRESSION . COMMA PARAMETERS
    (121) PARAMETERS -> EXPRESSION .

    COMMA           shift and go to state 199
    CP              reduce using rule 121 (PARAMETERS -> EXPRESSION .)


state 185

    (130) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . BLOCKS2 CC
    (131) LOOPIF -> LOOPIFW OP EXPRESSION CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 200
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 201
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 186

    (53) STM -> EXPRESSION STM2 EXPRESSION .

    CP              reduce using rule 53 (STM -> EXPRESSION STM2 EXPRESSION .)


state 187

    (46) CONDITION -> IF OP STM CP OC . seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP OC . seen_OC CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC . seen_OC BLOCKS2 CC
    (49) CONDITION -> IF OP STM CP OC . seen_OC CC
    (50) seen_OC -> .

    CC              reduce using rule 50 (seen_OC -> .)
    RETURNW         reduce using rule 50 (seen_OC -> .)
    IDV             reduce using rule 50 (seen_OC -> .)
    LOOPW           reduce using rule 50 (seen_OC -> .)
    LOOPIFW         reduce using rule 50 (seen_OC -> .)
    IF              reduce using rule 50 (seen_OC -> .)
    ASKUSER         reduce using rule 50 (seen_OC -> .)
    SAYW            reduce using rule 50 (seen_OC -> .)
    CALLBOXW        reduce using rule 50 (seen_OC -> .)

    seen_OC                        shift and go to state 202

state 188

    (127) LOOP2 -> FLOAT .

    CP              reduce using rule 127 (LOOP2 -> FLOAT .)
    TO              reduce using rule 127 (LOOP2 -> FLOAT .)
    BY              reduce using rule 127 (LOOP2 -> FLOAT .)


state 189

    (126) LOOP2 -> INT .

    CP              reduce using rule 126 (LOOP2 -> INT .)
    TO              reduce using rule 126 (LOOP2 -> INT .)
    BY              reduce using rule 126 (LOOP2 -> INT .)


state 190

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP IDV FROM LOOP2 . TO LOOP2 CP OC CC

    TO              shift and go to state 203


state 191

    (118) ASK -> ASKUSER OP STRING COMMA IDV . CP PC

    CP              shift and go to state 204


state 192

    (75) METHODS3 -> PARAM COMMA METHODS3 .

    CP              reduce using rule 75 (METHODS3 -> PARAM COMMA METHODS3 .)


state 193

    (66) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .
    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS . METHODS
    (66) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS
    (67) METHODS -> . METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS
    (69) METHODS2 -> . RECURSIVEBOX
    (70) METHODS2 -> . VOIDBOX
    (71) METHODS2 -> . VARIBOX
    (72) METHODS2 -> . VARFBOX
    (73) METHODS2 -> . VARSBOX
    (74) METHODS2 -> . VARLBOX

    CC              reduce using rule 66 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS .)
    RECURSIVEBOX    shift and go to state 66
    VOIDBOX         shift and go to state 73
    VARIBOX         shift and go to state 72
    VARFBOX         shift and go to state 70
    VARSBOX         shift and go to state 71
    VARLBOX         shift and go to state 69

    METHODS2                       shift and go to state 74
    METHODS                        shift and go to state 205

state 194

    (81) EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .

    GT              reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    GTE             reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LT              reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTE             reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    LTGT            reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    CP              reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    DOT             reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    PC              reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)
    COMMA           reduce using rule 81 (EXPRESSION -> OPER seen_EXPF seen_OPER EXPRESSION .)


state 195

    (104) seen_ID -> IDV OB INT CB .

    MULTIPLY        reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    DIVISION        reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    PLUS            reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    MINUS           reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    DOT             reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    CP              reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    PC              reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    GT              reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    GTE             reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    LT              reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    LTE             reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    DOUBLEEQUALS    reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    LTGT            reduce using rule 104 (seen_ID -> IDV OB INT CB .)
    COMMA           reduce using rule 104 (seen_ID -> IDV OB INT CB .)


state 196

    (86) OPER -> TERM seen_TERMF seen_TERM OPER .

    PLUS            reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    MINUS           reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOT             reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    CP              reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    PC              reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GT              reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    GTE             reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LT              reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTE             reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    DOUBLEEQUALS    reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    LTGT            reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)
    COMMA           reduce using rule 86 (OPER -> TERM seen_TERMF seen_TERM OPER .)


state 197

    (90) TERM -> OP seen_OP_TERM EXPRESSION CP .

    MULTIPLY        reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DIVISION        reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    PLUS            reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    MINUS           reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    PC              reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    COMMA           reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    CP              reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    GT              reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    GTE             reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LT              reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LTE             reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DOUBLEEQUALS    reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    LTGT            reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)
    DOT             reduce using rule 90 (TERM -> OP seen_OP_TERM EXPRESSION CP .)


state 198

    (119) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP . PC

    PC              shift and go to state 206


state 199

    (120) PARAMETERS -> EXPRESSION COMMA . PARAMETERS
    (120) PARAMETERS -> . EXPRESSION COMMA PARAMETERS
    (121) PARAMETERS -> . EXPRESSION
    (80) EXPRESSION -> . OPER seen_EXPF
    (81) EXPRESSION -> . OPER seen_EXPF seen_OPER EXPRESSION
    (85) OPER -> . TERM seen_TERMF
    (86) OPER -> . TERM seen_TERMF seen_TERM OPER
    (90) TERM -> . OP seen_OP_TERM EXPRESSION CP
    (91) TERM -> . TERM2
    (93) TERM2 -> . CTE
    (94) TERM2 -> . PLUS CTE
    (95) TERM2 -> . MINUS CTE
    (96) CTE -> . INT seen_INT
    (97) CTE -> . FLOAT seen_FLOAT
    (98) CTE -> . STRING seen_STRING
    (99) CTE -> . seen_ID
    (103) seen_ID -> . IDV
    (104) seen_ID -> . IDV OB INT CB

    OP              shift and go to state 129
    PLUS            shift and go to state 123
    MINUS           shift and go to state 119
    INT             shift and go to state 127
    FLOAT           shift and go to state 128
    STRING          shift and go to state 120
    IDV             shift and go to state 117

    OPER                           shift and go to state 116
    TERM                           shift and go to state 121
    TERM2                          shift and go to state 125
    PARAMETERS                     shift and go to state 207
    seen_ID                        shift and go to state 122
    CTE                            shift and go to state 118
    EXPRESSION                     shift and go to state 184

state 200

    (131) LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .

    RETURNW         reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IDV             reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPW           reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    LOOPIFW         reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    IF              reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    ASKUSER         reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    SAYW            reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CALLBOXW        reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)
    CC              reduce using rule 131 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC CC .)


state 201

    (130) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 . CC

    CC              shift and go to state 208


state 202

    (46) CONDITION -> IF OP STM CP OC seen_OC . BLOCKS2 CC CONDITION2
    (47) CONDITION -> IF OP STM CP OC seen_OC . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC . BLOCKS2 CC
    (49) CONDITION -> IF OP STM CP OC seen_OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 209
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 210
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 203

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP IDV FROM LOOP2 TO . LOOP2 CP OC CC
    (126) LOOP2 -> . INT
    (127) LOOP2 -> . FLOAT

    INT             shift and go to state 189
    FLOAT           shift and go to state 188

    LOOP2                          shift and go to state 211

state 204

    (118) ASK -> ASKUSER OP STRING COMMA IDV CP . PC

    PC              shift and go to state 212


state 205

    (67) METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .

    CC              reduce using rule 67 (METHODS -> METHODS2 seen_IDM OP METHODS3 CP BLOCKS METHODS .)


state 206

    (119) CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .

    RETURNW         reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IDV             reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPW           reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    LOOPIFW         reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    IF              reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    ASKUSER         reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    SAYW            reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CALLBOXW        reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)
    CC              reduce using rule 119 (CALLBOX -> CALLBOXW OP IDM COMMA PARAMETERS CP PC .)


state 207

    (120) PARAMETERS -> EXPRESSION COMMA PARAMETERS .

    CP              reduce using rule 120 (PARAMETERS -> EXPRESSION COMMA PARAMETERS .)


state 208

    (130) LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IDV             reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    IF              reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)
    CC              reduce using rule 130 (LOOPIF -> LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC .)


state 209

    (47) CONDITION -> IF OP STM CP OC seen_OC CC . CONDITION2
    (49) CONDITION -> IF OP STM CP OC seen_OC CC .
    (51) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (52) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    IDV             reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    LOOPW           reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    LOOPIFW         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    IF              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    ASKUSER         reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    SAYW            reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    CALLBOXW        reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    CC              reduce using rule 49 (CONDITION -> IF OP STM CP OC seen_OC CC .)
    ELSE            shift and go to state 213

    CONDITION2                     shift and go to state 214

state 210

    (46) CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 . CC CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 . CC

    CC              shift and go to state 215


state 211

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 . CP OC CC

    BY              shift and go to state 217
    CP              shift and go to state 216


state 212

    (118) ASK -> ASKUSER OP STRING COMMA IDV CP PC .

    RETURNW         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IDV             reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPW           reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    LOOPIFW         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    IF              reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    ASKUSER         reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    SAYW            reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CALLBOXW        reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)
    CC              reduce using rule 118 (ASK -> ASKUSER OP STRING COMMA IDV CP PC .)


state 213

    (51) CONDITION2 -> ELSE . OC BLOCKS2 CC
    (52) CONDITION2 -> ELSE . OC CC

    OC              shift and go to state 218


state 214

    (47) CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .

    RETURNW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    IDV             reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    LOOPW           reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    LOOPIFW         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    IF              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    ASKUSER         reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    SAYW            reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    CALLBOXW        reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)
    CC              reduce using rule 47 (CONDITION -> IF OP STM CP OC seen_OC CC CONDITION2 .)


state 215

    (46) CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC . CONDITION2
    (48) CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .
    (51) CONDITION2 -> . ELSE OC BLOCKS2 CC
    (52) CONDITION2 -> . ELSE OC CC

    RETURNW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    IDV             reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    LOOPW           reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    IF              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    SAYW            reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    CC              reduce using rule 48 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC .)
    ELSE            shift and go to state 213

    CONDITION2                     shift and go to state 219

state 216

    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC BLOCKS2 CC
    (125) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP . OC CC

    OC              shift and go to state 220


state 217

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY . LOOP3 LOOP2 CP OC CC
    (128) LOOP3 -> . PLUS
    (129) LOOP3 -> . MINUS

    PLUS            shift and go to state 222
    MINUS           shift and go to state 221

    LOOP3                          shift and go to state 223

state 218

    (51) CONDITION2 -> ELSE OC . BLOCKS2 CC
    (52) CONDITION2 -> ELSE OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 224
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 225
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 219

    (46) CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .

    RETURNW         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    IDV             reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    LOOPW           reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    LOOPIFW         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    IF              reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    ASKUSER         reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    SAYW            reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    CALLBOXW        reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)
    CC              reduce using rule 46 (CONDITION -> IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2 .)


state 220

    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . BLOCKS2 CC
    (125) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 226
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 227
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    ASK                            shift and go to state 81
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 221

    (129) LOOP3 -> MINUS .

    INT             reduce using rule 129 (LOOP3 -> MINUS .)
    FLOAT           reduce using rule 129 (LOOP3 -> MINUS .)


state 222

    (128) LOOP3 -> PLUS .

    INT             reduce using rule 128 (LOOP3 -> PLUS .)
    FLOAT           reduce using rule 128 (LOOP3 -> PLUS .)


state 223

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 . LOOP2 CP OC CC
    (126) LOOP2 -> . INT
    (127) LOOP2 -> . FLOAT

    INT             shift and go to state 189
    FLOAT           shift and go to state 188

    LOOP2                          shift and go to state 228

state 224

    (52) CONDITION2 -> ELSE OC CC .

    RETURNW         reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    IDV             reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    LOOPW           reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    LOOPIFW         reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    IF              reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    ASKUSER         reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    SAYW            reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    CALLBOXW        reduce using rule 52 (CONDITION2 -> ELSE OC CC .)
    CC              reduce using rule 52 (CONDITION2 -> ELSE OC CC .)


state 225

    (51) CONDITION2 -> ELSE OC BLOCKS2 . CC

    CC              shift and go to state 229


state 226

    (125) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .

    RETURNW         reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IDV             reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPW           reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    IF              reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    SAYW            reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)
    CC              reduce using rule 125 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC .)


state 227

    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 230


state 228

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 . CP OC CC

    CP              shift and go to state 231


state 229

    (51) CONDITION2 -> ELSE OC BLOCKS2 CC .

    RETURNW         reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IDV             reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPW           reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    IF              reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    SAYW            reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)
    CC              reduce using rule 51 (CONDITION2 -> ELSE OC BLOCKS2 CC .)


state 230

    (123) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 123 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC .)


state 231

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP . OC CC

    OC              shift and go to state 232


state 232

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . BLOCKS2 CC
    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC . CC
    (36) BLOCKS2 -> . CODE
    (37) BLOCKS2 -> . CODE BLOCKS2
    (38) CODE -> . RETURN
    (39) CODE -> . ASSIGNATION
    (40) CODE -> . LOOP
    (41) CODE -> . LOOPIF
    (42) CODE -> . CONDITION
    (43) CODE -> . ASK
    (44) CODE -> . SAY
    (45) CODE -> . CALLBOX
    (78) RETURN -> . RETURNW EQUALS PC
    (79) ASSIGNATION -> . IDV EQUALS EXPRESSION PC
    (122) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC
    (123) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC BLOCKS2 CC
    (124) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC
    (125) LOOP -> . LOOPW OP IDV FROM LOOP2 TO LOOP2 CP OC CC
    (130) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC BLOCKS2 CC
    (131) LOOPIF -> . LOOPIFW OP EXPRESSION CP OC CC
    (46) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC CONDITION2
    (47) CONDITION -> . IF OP STM CP OC seen_OC CC CONDITION2
    (48) CONDITION -> . IF OP STM CP OC seen_OC BLOCKS2 CC
    (49) CONDITION -> . IF OP STM CP OC seen_OC CC
    (118) ASK -> . ASKUSER OP STRING COMMA IDV CP PC
    (115) SAY -> . SAYW OP CONCAT CP PC
    (119) CALLBOX -> . CALLBOXW OP IDM COMMA PARAMETERS CP PC

    CC              shift and go to state 233
    RETURNW         shift and go to state 87
    IDV             shift and go to state 79
    LOOPW           shift and go to state 89
    LOOPIFW         shift and go to state 86
    IF              shift and go to state 88
    ASKUSER         shift and go to state 93
    SAYW            shift and go to state 75
    CALLBOXW        shift and go to state 84

    CODE                           shift and go to state 76
    RETURN                         shift and go to state 77
    ASSIGNATION                    shift and go to state 83
    ASK                            shift and go to state 81
    SAY                            shift and go to state 80
    BLOCKS2                        shift and go to state 234
    CALLBOX                        shift and go to state 91
    LOOPIF                         shift and go to state 92
    CONDITION                      shift and go to state 82
    LOOP                           shift and go to state 94

state 233

    (124) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .

    RETURNW         reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IDV             reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPW           reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    LOOPIFW         reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    IF              reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    ASKUSER         reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    SAYW            reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CALLBOXW        reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)
    CC              reduce using rule 124 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC CC .)


state 234

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 . CC

    CC              shift and go to state 235


state 235

    (122) LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .

    RETURNW         reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IDV             reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPW           reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    LOOPIFW         reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    IF              reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    ASKUSER         reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    SAYW            reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CALLBOXW        reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)
    CC              reduce using rule 122 (LOOP -> LOOPW OP IDV FROM LOOP2 TO LOOP2 BY LOOP3 LOOP2 CP OC BLOCKS2 CC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CC in state 59 resolved as shift
WARNING: shift/reduce conflict for RETURNW in state 59 resolved as shift
WARNING: shift/reduce conflict for IDV in state 59 resolved as shift
WARNING: shift/reduce conflict for LOOPW in state 59 resolved as shift
WARNING: shift/reduce conflict for LOOPIFW in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ASKUSER in state 59 resolved as shift
WARNING: shift/reduce conflict for SAYW in state 59 resolved as shift
WARNING: shift/reduce conflict for CALLBOXW in state 59 resolved as shift
